import { Context } from '../../../src/common';
import { pass, fail } from '../../test-utils';
import * as t from 'node:assert/strict';
import { parseSource } from '../../../src/parser';

describe('Expressions - Template', () => {
  for (const arg of [
    '`${"a"}`',
    '`${1}`',
    'example3 = 1 + `${foo}${bar}${baz}`',
    '`${""}`',
    'y`${y,0}`',
    '`${y,0}`',
    'foo = `${1}${f}oo${true}${b}ar${0}${baz}`',
    'bar = bar`wow\naB${ 42 } ${_.baz()}`',
    'bar`wow\na${ 42 }b ${_.foobar()}`',
    ' bar`wow\naB${ 42 } ${_.baz()}`',
    'function z() {}; `z`;',
    'function z() {}; `${z}`;',
    'function z() {}; `${z}${z}`;',
    'function z() {}; `${z}${z}${z}`;',
    "function z() {}; `${'z'}${z}${z}`;",
    "function z() {}; `${'z'}${'z'}${z}`;",
    "function z() {}; `${'z'}${'z'}${async}`;",
    "function z() {}; '' + z + '';",
    'function z() {}; z`${`${z}`}`;',
    'function z() {}; z``;',
    'function z() {}; ``;',
    '(`${function(id) { return id }}`);',
    "function y() {} y`${`${'z'}${`${function(id) { return id }})${ /x/g >= 'c'}`}`}`;",
    'tag`foo\\n`',
    't`foo\\n`;',
    'foo`\r\\\n${0}`',
    '`a\\u{062}c`',
    '`a\\u{000000062}c`',
    'tag`foo\\n`',
    't`foo\\n`;',
    '`a\\u{d}c`',
    '`a\\u{062}c`',
    '`a\\u{000000062}c`',
    'async`\n${0}`',
    'foo`\n${0}`',
    'foo`\\\n${0}`',
    'foo`\\r${0}`',
    'foo`\r\n${0}`',
    'foo`\\\r\\\n${0}`',
    'foo`\\\r\n${0}`',
    'foo`\r\\\n${0}`',
    'foo`\\r\\n${0}`',
    'foo`\u2029${0}`',
    'foo`\\\u2029${0}`',
    'foo`\\n${0}`',
    'foo`\\r${0}`',
    'foo`\\\r\\\n${0}`',
    'foo`\r\\n${0}`',
    'foo`\\\u2029${0}`',
    '`\r\n\t\n`',
    'sampleTag`\\01`',
    'sampleTag`left${0}\\u{\\u{0}`',
    'sampleTag`left${0}\\u{-0}${1}right`',
    'sampleTag`left${0}\\u{g}${1}right`',
    'sampleTag`left${0}\\u000g${1}right`',
    'tag`template-head${a}`',
    'tag `no-subst-template`',
    'tag\t`foo\n\nbar\r\nbaz`',
    'tag`foo${a /* comment */}`',
    '`outer${{x: {y: 10}}}bar${`nested${function(){return 1;}}endnest`}end`',
    'foo`T\\u200C`',
    'foo`\\u{00000000034}`',
    '`\\ю`',
    '`\\б`',
    'a\r\nb`\n\r\nb\\u{g`;',
    '`a\\r\\nb`',
    '`a\r\nb`',
    '`${ {class: 1} }`',
    '`${ {enum: 1} }`',
    '`${ {function: 1} }`',
    '`foo`',
    '`foo\\u25a0`',
    'foo`\\unicode`',
    // 'foo`\\u`',
    'foo`\\u\\n\\r`',
    'foo`\\uaa\\n\\r`',
    'raw`hello ${name}`',
    '`$`',
    '`\\n\\r\\b\\v\\t\\f\\\n\\\r\n`',
    '`\n\r\n\r`',
    '`outer${{x: {y: 10}}}bar${`nested${function(){return 1;}}endnest`}end`',
    'tag`\\08`',
    'tag`\\01`',
    'tag`\\01${0}right`',
    'tag`left${0}\\01`',
    'tag`left${0}\\01${1}right`',
    'tag`\\1${0}right`',
    'tag`left${0}\\1`',
    'tag`left${0}\\1${1}right`',
    'tag`\\xg`',
    'tag`\\xg${0}right`',
    'tag`left${0}\\xg`',
    'tag`left${0}\\xg${1}right`',
    'tag`\\xAg`',
    'tag`\\xAg${0}right`',
    'tag`left${0}\\xAg`',
    'tag`left${0}\\xAg${1}right`',
    'tag`\\u0`',
    'tag`\\u0${0}right`',
    'tag`left${0}\\u0`',
    'tag`left${0}\\u0${1}right`',
    'tag`\\u0g`',
    'tag`\\u0g${0}right`',
    'tag`left${0}\\u0g`',
    'tag`left${0}\\u0g${1}right`',
    'tag`\\u00g`',
    'tag`\\u00g${0}right`',
    'tag`left${0}\\u00g`',
    'tag`left${0}\\u00g${1}right`',
    'tag`\\u000g`',
    'tag`\\u000g${0}right`',
    'tag`left${0}\\u000g`',
    'tag`left${0}\\u000g${1}right`',
    'tag`\\u{}`',
    'tag`left${0}\\u{-0}`',
    'tag`left${0}\\u{-0}${1}right`',
    'tag`\\u{g}`',
    'tag`\\u{g}${0}right`',
    'tag`left${0}\\u{g}`',
    'tag`left${0}\\u{g}${1}right`',
    'tag`\\u{0${0}right`',
    'tag`left${0}\\u{0${1}right`',
    'tag`\\u{\\u{0}`',
    'tag`\\u{\\u{0}${0}right`',
    'tag`left${0}\\u{\\u{0}`',
    'tag`left${0}\\u{\\u{0}${1}right`',
    'tag`\\u{110000}`',
    'tag`\\u{110000}${0}right`',
    'tag`left${0}\\u{110000}`',
    'tag`left${0}\\u{110000}${1}right`',
    'tag`\\u{}${0}right`',
    'tag`left${0}\\u{}`',
    'tag`left${0}\\u{}${1}right`',
    'tag`\\u{-0}`',
    'tag`\\u{-0}${0}right`',
    'tag`\\1`',
    'tag ``',
    'tag`foo${a \r\n}`',
    'tag`foo${a \r}`',
    'tag`foo${// comment\na}`',
    'tag`foo${\n a}`',
    'tag`foo${\n async}`',
    'tag`async${\n a}`',
    '`a${b}`',
    "'use strict'; `no-subst-template`",
    "function foo(){ 'use strict';`template-head${a}`}",
    "function foo(){ 'use strict';`${a}`}",
    "function foo(){ 'use strict';`${a}template-tail`}",
    "'use strict'; `template-head${a}template-tail`",
    "'use strict'; `${a}${b}${c}`",
    "function foo(){ 'use strict';`a${a}b${b}c${c}`}",
    `\`\\\${a}\``,
    `\`$a\``,
    `\`\${a}\${b}\``,
    `\`a\${a}\${b}\``,
    `\`\${a}a\${b}\``,
    `\`a\${a}a\${b}\``,
    'a`\\${a}`',
    `\`\${a}\${b}a\``,
    `\`\${a}a\${b}a\``,
    `\`a\${a}a\${b}a\``,
    `\`\${\`\${a}\`}\``,
    `\`\${\`a\${a}\`}\``,
    `\`\${\`\${a}a\`}\``,
    `\`\${\`a\${a}a\`}\``,
    `\`\${\`\${\`\${a}\`}\`}\``,
    'tag`\\xg`',
    'tag`\\xg${0}right`',
    'tag`left${0}\\xg`',
    'tag`left${0}\\xg${1}right`',
    'tag`\\xAg`',
    'tag`\\xAg${0}right`',
    'tag`left${0}\\xAg`',
    'tag`left${0}\\xAg${1}right`',
    'tag`\\u0`',
    'tag`\\u0${0}right`',
    'tag`left${0}\\u0`',
    'tag`left${0}\\u0${1}right`',
    'tag`\\u0g`',
    'tag`\\u0g${0}right`',
    'tag`left${0}\\u0g`',
    'tag`left${0}\\u0g${1}right`',
    'tag`\\u00g`',
    'tag`\\u00g${0}right`',
    'tag`left${0}\\u00g`',
    'tag`left${0}\\u00g${1}right`',
    'tag`\\u000g`',
    'tag`\\u000g${0}right`',
    'tag`left${0}\\u000g`',
    'tag`left${0}\\u000g${1}right`',
    'tag`\\u{}`',
    'tag`\\u{}${0}right`',
    'tag`left${0}\\u{}`',
    'tag`left${0}\\u{}${1}right`',
    'tag`\\u{-0}`',
    'tag`\\u{-0}${0}right`',
    'tag`left${0}\\u{-0}`',
    'tag`left${0}\\u{-0}${1}right`',
    'tag`\\u{g}`',
    'tag`\\u{g}${0}right`',
    'tag`left${0}\\u{g}`',
    'tag`left${0}\\u{g}${1}right`',
    'tag`left${0}\\u{0${1}right`',
    'tag`\\u{\\u{0}`',
    'tag`\\u{\\u{0}${0}right`',
    'tag`left${0}\\u{\\u{0}`',
    'tag`left${0}\\u{\\u{0}${1}right`',
    'tag`\\u{110000}`',
    'tag`\\u{110000}${0}right`',
    'tag    `${a}a${b}b${c}c`',
    'tag\t`foo\n\nbar\r\nbaz`',
    'tag\r`foo\n\n${  bar  }\r\nbaz`',
    'tag`foo${a /* comment */}`',
    'tag`foo${a // comment\n}`',
    'tag`foo${a \n}`',
    'tag`foo${a \r\n}`',
    'tag`foo${a \r}`',
    'tag`foo${/* comment */ a}`',
    'tag`foo${// comment\na}`',
    'tag`foo${\n a}`',
    'tag`foo${\r\n a}`',
    'tag`foo${\r a}`',
    "tag`foo${'a' in a}`",
    "'use strict'; tag\r\n`a${a}b${b}c${c}`",
    "'use strict'; tag    `${a}a${b}b${c}c`",
    'function cherow() { var a, b, c; return tag\t`foo\n\nbar\r\nbaz`}',
    'function cherow() { var a, b, c; return tag\r`foo\n\n${  bar  }\r\nbaz`}',
    'function cherow() { var a, b, c; return tag`foo${a /* comment */}`}',
    'function cherow() { var a, b, c; return tag`foo${a // comment\n}`}',
    '`no-subst-template`',
    '`template-head${a}`',
    'f`\\xg ${x}`;',
    '`${a}`',
    '`${a}template-tail`',
    '`template-head${a}template-tail`',
    '`${a}${b}${c}`',
    '`a${a}b${b}c${c}`',
    '`${a}a${b}b${c}c`',
    '`foo\n\nbar\r\nbaz`',
    '`foo\n\n${  bar  }\r\nbaz`',
    '`foo${a /* comment */}`',
    '`foo${a // comment\n}`',
    '`foo${a \n}`',
    '`foo${a \r\n}`',
    '`async${a \r\n}`',
    '`foo${a \r}`',
    '`foo${/* comment */ a}`',
    '`foo${// comment\na}`',
    '`foo${\n a}`',
    '`foo${\r\n a}`',
    '`foo${\r a}`',
    "`foo${'a' in a}`",
    'a``',
    'let a;',
    'var foo = `simple template`;',
    'var async = `simple template`;',
    'let foo = f`template with function`;',
    'const foo = f`template with ${some} ${variables}`;',
    'var foo = f`template with ${some}${variables}${attached}`;',
    'let foo = f()`template with function call before`;',
    'const foo = f().g`template with more complex function call`;',
    '`${z}${z}`',
    '`${z}${z}${z}`',
    '`${"z"}${z}${z}`',
    '`${"z"}${"z"}${z}`',
    'z`${`${z}`}`',
    '`\n\r`',
    '`\r\n`',
    '`$$$a}`',
    '`a℮`',
    '`دیوانه`',
    '`℘`',
    '`foo\\tbar`',
    '`\\x55a`',
    '`f1o2o`',
    '`a\\u{d}c`',
    'x`a\\u{d}c${0}`',
    '`a\\u{0062}c`',
    '`a\\{000062}c`',
    '`a\\u{00000062}c`',
    '`a\\u{000000062}c`',
    '`\\\0${0}`',
    'x`\0${0}`',
    'x`\\\0${0}`',
    'x`\\r${0}`',
    'x`\\\r\\\n${0}`',
    'x`\\\r\n${0}`',
    'x`\r\\\n${0}`',
    'x`\\r\\n${0}`',
    'x`\\r\n${0}`',
    'x`\r\\n${0}`',
    'x`\\\r\\n${0}`',
    'x`\\\u2028${0}`',
    'x`\u2029${0}`',
    'x`\\\u2029${0}`',
    'x`\r${0}`',
    'x`\r\n${0}`',
    'x`\\r\n${0}`',
    'x`\\\r\\n${0}`',
    'f`${x} \\xg ${x}`;',
    'x`\\\u2028${0}`',
    'x`\\0`',
    'x`\\08`',
    'x`\\0\\0`',
    '() => tagged`template literal`',
    'var str = `x${y}`.toUpperCase();',
    'var str = `x`.toUpperCase();',
    'var str = `x${y}` + z; var str2 = `x${y}` * z;',
    'var a = `a`, b = c`b`;',
    'var str = `${a}${b}`',
    'var str = `${a + b}${c}`;',
    'var str = x`y${(() => 42)()}`;',
    'var str = `foo${ bar }baz`;',
    'var str = `foo${bar}baz`;',
    'var string = `foo${`${bar}`}`',
    "simpleTag`str1 ${'str2'} str3 ${'str4'} str5 ${'str6'} str7 ${'str8'} str9`",
    'x`\\ua48c`',
    'x`\\h`',
    'x`\\h`',
    'x`bunch of escape chars \\v\\t\\n\\b\\a`',
    'x`$ $ $ {} } { }} {{`',
    'x`\\xF8`',
    'x`\r\n`',
    'x`\r\n\r\n`',
    'x`\n\n\n\n\n\n\n\n\n\n`',
    '`$$${a}`',
    'z``',
    '``',
    'test`\\uG`;',
    'test`\\xG`;',
    'test`\\18`;',
    'test`\\u{0`',
    '(`\n`)',
    '(`\r`)',
    'new nestedNewOperatorFunction`1``2``3``array`',
    "tag()`'\\00a0'`;",
    "tag('a')`'\\00a0'`",
    "tag()('a')`'\\00a0'`",
    "tag('a')('b')`'\\00a0'`",
    "tag()(...a)`'\\00a0'`",
    "tag('a')(b)(c, ...d)`'\\00a0'`;",
    "(tag = () => {})`'\\00a0'`",
    "(() => {})`'\\00a0'`",
    "(function tag() { return () => {}; })()`'\\00a0'`",
    "(function() { return () => {}; })()`'\\00a0'`",
    "(function tag() {})`'\\00a0'`",
    "(function() {})`'\\00a0'`",
    'String.raw`{\rtf1adeflang1025ansiansicpg1252\\uc1`;',
    'x`\\u{0${x`\\8`}`',
    'x`\\0`',
    'x`\\1`',
    'x`\\2`',
    'x`\\3`',
    'x`\\4`',
    'x`\\5`',
    'x`\\6`',
    'x`\\7`',
    'x`\\8`',
    'x`\\9`',
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.TaggedTemplate);
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.TaggedTemplate | Context.OptionsWebCompat);
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.TaggedTemplate | Context.OptionsNext);
      });
    });

    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.TaggedTemplate | Context.OptionsNext | Context.OptionsLexical);
      });
    });

    it(`"use strict"; ${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`"use strict"; ${arg}`, undefined, Context.TaggedTemplate);
      });
    });

    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.OptionsWebCompat | Context.TaggedTemplate);
      });
    });

    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.Strict | Context.Module | Context.TaggedTemplate);
      });
    });
  }

  fail('Expressions - Template (fail)', [
    ['`', Context.Strict],
    ['x = `1 ${ yield } 2`', Context.Strict],
    ['x = `1 ${ yield } 2 ${ 3 } 4`', Context.Strict],
    ['x = `1 ${ yield } 2`', Context.Strict],
    ['x = `1 ${ yield x } 2`', Context.Strict],
    ['x = `1 ${ yield x } 2 ${ 3 } 4`', Context.Strict],
    ['`foo ${a b} bar`', Context.Strict],
    ['x`foo ${a b} bar`', Context.Strict],
    ['[`${""}`] = {}', Context.None],
    //['`a\\u{d}c`', Context.None],
    ['[`${""}`] = {}', Context.None],
    ['[`${""}`] = {}', Context.None],
    ['[z``] = {}', Context.None],
    ['[`${"a"}`] = {}', Context.None],
    ['[`${""}`] = {}', Context.None],
    ['`\\7`', Context.None],
    ['`\\10`', Context.None],
    ['`\\01`', Context.None],
    ['`\\30`', Context.None],
    ['`\\001`', Context.None],

    ['`\\xg`;', Context.None],
    ['`\\xg ${x}`;', Context.None],
    ['`${x} \\xg ${x}`;', Context.None],
    ['`${x} \\xg`;', Context.None],
    ['`\\001`', Context.None],
    ['`\\001`', Context.None],
    ['`\\001`', Context.None],
    ['`\\001`', Context.None],
    ['`a${await foo}d`', Context.None],
    ['`\\u{g}`', Context.None],
    ['`\\u00g0`', Context.None],
    ['`\\ufffg${', Context.None],
    ['`\\uAA`', Context.None],
    ['`\\u11${', Context.None],
    ['`\\u{g}`', Context.None],
    ['`\\u{110000}${', Context.None],
    ['`\\u{11ffff}${', Context.None],
    ['x`\\u{0${`\\8`}`', Context.None],
    ['`\\01`', Context.None],
    ['`\\1`', Context.None],
    ['`\\2`', Context.None],
    ['`\\3`', Context.None],
    ['`\\4`', Context.None],
    ['`\\5`', Context.None],
    ['`\\6`', Context.None],
    ['`\\7`', Context.None],
    ['`\\8`', Context.None],
    ['`\\9`', Context.None],
  ]);
  pass('Expressions - Template (pass)', [
    ['var await = `simple template`;', Context.None],
    ['`${y, x`)`}`', Context.None],
    ['`${x`)`, y}`', Context.None],
    ['`a${b=c}d`', Context.None],
    ['f`x${/foo/}y`', Context.None],
    ['`foo ${a} and ${b} and ${c} baz`', Context.None],
    ['{`foo baz`}', Context.None],
    ['{`foo ${a} baz`}', Context.None],
    ['{`foo ${a} and ${b} and ${c} baz`}', Context.None],
    ['`foo${{}}baz`', Context.None],
    ['`foo${{a,b}}baz`', Context.None],
    ['`foo${`foo`}baz`', Context.None],
    ['`foo${`foo${bar}baz`}baz`', Context.None],
    ['{`foo ${a} and ${b} and ${`w ${d} x ${e} y ${f} z`} baz`}', Context.None],
    ['`a ${function(){}} b`', Context.None],

    ['function *f(){   x = `1 ${ yield } 2`   }', Context.None],

    ['`foo${bar}baz`', Context.None],
    ['`foo${{a,b} = x}baz`', Context.None],
    ['`${ {function: 1} }`', Context.None],
    ['`${ {class: 1} }`', Context.None],
    ['`${ foo({class: 1}) }`', Context.None],
    ['var y = `{${x}}`;', Context.None],
    ['`${x} + ${y} = ${x + y}` === "5 + 10 = 15"', Context.None],
    ['`outer${{x: {y: 10}}}bar${`nested${function(){return 1;}}endnest`}end`;', Context.None],
    ['var y = `{ ${x} }`;', Context.None],
    ['`${/\\d/.exec("1")[0]}`', Context.None],
    ['`${ {delete: 1} }`', Context.None],
    ['`${ {enum: 1} }`', Context.None],
    ['foo`x${a}y${b}z`', Context.None],
    ['a.foo`bar`', Context.None],
    ['abc`bar`', Context.None],
    ['`bar`', Context.None],
    ['`foo ${a} and ${b} and ${c} baz`', Context.None],
    ['{`foo baz`}', Context.None],
    ['{`foo ${a} baz`}', Context.None],
    ['{`foo ${a} and ${b} and ${c} baz`}', Context.None],
    ['`foo${{}}baz`', Context.None],
    ['`foo${{a,b}}baz`', Context.None],
    ['`foo${{a,b} = x}baz`', Context.None],
    ['`foo${`foo`}baz`', Context.None],
    ['`foo${`foo${bar}baz`}baz`', Context.None],
    ['{`foo ${a} and ${b} and ${`w ${d} x ${e} y ${f} z`} baz`}', Context.None],
    ['`a ${()=>{}} b`', Context.None],

    ['`a ${(k)=>{x}} b`', Context.None],
    ['x = `1 ${ yield } 2`', Context.None],
    ['x = `1 ${ yield } 2 ${ 3 } 4`', Context.None],
    ['function *f(){   x = `1 ${ yield } 2`   }', Context.None],
    ['function *f(){   x = `1 ${ yield } 2 ${ 3 } 4`   }', Context.None],
    ['function *f(){   x = `1 ${ yield x } 2`   }', Context.None],
    ['function *f(){   x = `1 ${ yield x } 2 ${ 3 } 4`   }', Context.None],
    ['`foo${bar}baz`', Context.None],
    ['tagA`a`\ntagB`b`', Context.None | Context.OptionsRanges | Context.OptionsLoc],
    ['`${b()}${c()}`', Context.None | Context.OptionsRanges | Context.OptionsLoc],
    ['function a() {\nreturn `1234${b}`;\n}\n', Context.None | Context.OptionsRanges | Context.OptionsLoc],
    ["tag()`'\\00a0'`;", Context.None],
    ["tag('a')`'\\00a0'`;", Context.None],
    ["tag('a')('b')`'\\00a0'`;", Context.None],
    ["tag()(...a)`'\\00a0'`;", Context.None],
    ["tag('a')(b)(c, ...d)`'\\00a0'`;", Context.None],
    ["(tag = () => {})`'\\00a0'`", Context.None],
    ['String.raw`{\rtf1adeflang1025ansiansicpg1252\\uc1`;', Context.None],
    ['test`\\u{0`', Context.None],
  ]);
});
