// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Expressions - Array > Expressions - Array (pass) >  [...target = source] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "name": "target",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "name": "source",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > "use strict"; const { [eval]: []} = a; 1`] = `
{
  "body": [
    {
      "directive": "use strict",
      "end": 13,
      "expression": {
        "end": 12,
        "range": [
          0,
          12,
        ],
        "raw": ""use strict"",
        "start": 0,
        "type": "Literal",
        "value": "use strict",
      },
      "range": [
        0,
        13,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
    {
      "declarations": [
        {
          "end": 37,
          "id": {
            "end": 33,
            "properties": [
              {
                "computed": true,
                "end": 32,
                "key": {
                  "end": 27,
                  "name": "eval",
                  "range": [
                    23,
                    27,
                  ],
                  "start": 23,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  22,
                  32,
                ],
                "shorthand": false,
                "start": 22,
                "type": "Property",
                "value": {
                  "elements": [],
                  "end": 32,
                  "range": [
                    30,
                    32,
                  ],
                  "start": 30,
                  "type": "ArrayPattern",
                },
              },
            ],
            "range": [
              20,
              33,
            ],
            "start": 20,
            "type": "ObjectPattern",
          },
          "init": {
            "end": 37,
            "name": "a",
            "range": [
              36,
              37,
            ],
            "start": 36,
            "type": "Identifier",
          },
          "range": [
            20,
            37,
          ],
          "start": 20,
          "type": "VariableDeclarator",
        },
      ],
      "end": 38,
      "kind": "const",
      "range": [
        14,
        38,
      ],
      "start": 14,
      "type": "VariableDeclaration",
    },
  ],
  "end": 38,
  "range": [
    0,
    38,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > ([y]) => x; 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "name": "x",
          "type": "Identifier",
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "elements": [
              {
                "name": "y",
                "type": "Identifier",
              },
            ],
            "type": "ArrayPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > ({x} = 0) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > (foo, [bar, baz] = doo); 1`] = `
{
  "body": [
    {
      "expression": {
        "expressions": [
          {
            "name": "foo",
            "type": "Identifier",
          },
          {
            "left": {
              "elements": [
                {
                  "name": "bar",
                  "type": "Identifier",
                },
                {
                  "name": "baz",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
            "operator": "=",
            "right": {
              "name": "doo",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "SequenceExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > (x|y)^y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "left": {
            "name": "x",
            "type": "Identifier",
          },
          "operator": "|",
          "right": {
            "name": "y",
            "type": "Identifier",
          },
          "type": "BinaryExpression",
        },
        "operator": "^",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ (foo.bar) ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "name": "foo",
                "type": "Identifier",
              },
              "property": {
                "name": "bar",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ (foo["bar"]) ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": true,
              "object": {
                "name": "foo",
                "type": "Identifier",
              },
              "property": {
                "type": "Literal",
                "value": "bar",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ ...(a) ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ ...(foo.bar) ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "computed": false,
                "object": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "property": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ foo().x = 10 ] = {} ] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "elements": [
                {
                  "left": {
                    "computed": false,
                    "object": {
                      "arguments": [],
                      "callee": {
                        "name": "foo",
                        "type": "Identifier",
                      },
                      "type": "CallExpression",
                    },
                    "property": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "type": "MemberExpression",
                  },
                  "right": {
                    "type": "Literal",
                    "value": 10,
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "ArrayPattern",
            },
            "operator": "=",
            "right": {
              "properties": [],
              "type": "ObjectExpression",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ foo().x ] ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "computed": false,
                  "object": {
                    "arguments": [],
                    "callee": {
                      "name": "foo",
                      "type": "Identifier",
                    },
                    "type": "CallExpression",
                  },
                  "property": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ foo()[x] = 10 ] = {} ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "elements": [
                  {
                    "left": {
                      "computed": true,
                      "object": {
                        "arguments": [],
                        "callee": {
                          "name": "foo",
                          "type": "Identifier",
                        },
                        "type": "CallExpression",
                      },
                      "property": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 10,
                    },
                    "type": "AssignmentPattern",
                  },
                ],
                "type": "ArrayPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ foo()[x] ] ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "computed": true,
                  "object": {
                    "arguments": [],
                    "callee": {
                      "name": "foo",
                      "type": "Identifier",
                    },
                    "type": "CallExpression",
                  },
                  "property": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ x = 10 ] = {} ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "elements": [
                  {
                    "left": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 10,
                    },
                    "type": "AssignmentPattern",
                  },
                ],
                "type": "ArrayPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ x ] ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ x.y = 10 ] = {} ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "elements": [
                  {
                    "left": {
                      "computed": false,
                      "object": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "property": {
                        "name": "y",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 10,
                    },
                    "type": "AssignmentPattern",
                  },
                ],
                "type": "ArrayPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ x.y ] ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "computed": false,
                  "object": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "property": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ [ x[y] ] ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "computed": true,
                  "object": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "property": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x : foo().y = 10 } = {} ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "left": {
                        "computed": false,
                        "object": {
                          "arguments": [],
                          "callee": {
                            "name": "foo",
                            "type": "Identifier",
                          },
                          "type": "CallExpression",
                        },
                        "property": {
                          "name": "y",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "right": {
                        "type": "Literal",
                        "value": 10,
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x : foo().y } ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "computed": false,
                    "object": {
                      "arguments": [],
                      "callee": {
                        "name": "foo",
                        "type": "Identifier",
                      },
                      "type": "CallExpression",
                    },
                    "property": {
                      "name": "y",
                      "type": "Identifier",
                    },
                    "type": "MemberExpression",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x : foo()[y] = 10 } = {} ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "left": {
                        "computed": true,
                        "object": {
                          "arguments": [],
                          "callee": {
                            "name": "foo",
                            "type": "Identifier",
                          },
                          "type": "CallExpression",
                        },
                        "property": {
                          "name": "y",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "right": {
                        "type": "Literal",
                        "value": 10,
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x : foo()[y] = 10 } = {} ] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "left": {
                      "computed": true,
                      "object": {
                        "arguments": [],
                        "callee": {
                          "name": "foo",
                          "type": "Identifier",
                        },
                        "type": "CallExpression",
                      },
                      "property": {
                        "name": "y",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 10,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "properties": [],
              "type": "ObjectExpression",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x : foo()[y] } ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "computed": true,
                    "object": {
                      "arguments": [],
                      "callee": {
                        "name": "foo",
                        "type": "Identifier",
                      },
                      "type": "CallExpression",
                    },
                    "property": {
                      "name": "y",
                      "type": "Identifier",
                    },
                    "type": "MemberExpression",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x : x.y } ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "computed": false,
                    "object": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "property": {
                      "name": "y",
                      "type": "Identifier",
                    },
                    "type": "MemberExpression",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x : y = 10 } = {} ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "y",
                        "type": "Identifier",
                      },
                      "right": {
                        "type": "Literal",
                        "value": 10,
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x = 10 } = {} ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "right": {
                        "type": "Literal",
                        "value": 10,
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ { x = 10 } = {} ] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 10,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "properties": [],
              "type": "ObjectExpression",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ foo().x = 10 ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": false,
                "object": {
                  "arguments": [],
                  "callee": {
                    "name": "foo",
                    "type": "Identifier",
                  },
                  "type": "CallExpression",
                },
                "property": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "type": "Literal",
                "value": 10,
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ foo()[x] = 10 ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": true,
                "object": {
                  "arguments": [],
                  "callee": {
                    "name": "foo",
                    "type": "Identifier",
                  },
                  "type": "CallExpression",
                },
                "property": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "type": "Literal",
                "value": 10,
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ x = "x" in {} ] = value; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "name": "x",
                "type": "Identifier",
              },
              "right": {
                "left": {
                  "type": "Literal",
                  "value": "x",
                },
                "operator": "in",
                "right": {
                  "properties": [],
                  "type": "ObjectExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "value",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ x = 10 ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "name": "x",
                "type": "Identifier",
              },
              "right": {
                "type": "Literal",
                "value": 10,
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ x.y = 10 ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "type": "Literal",
                "value": 10,
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ x[y] = 10 ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": true,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "type": "Literal",
                "value": 10,
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > ["X".length] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "type": "Literal",
                "value": "X",
              },
              "property": {
                "name": "length",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > ["foo".foo] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "type": "Literal",
                "value": "foo",
              },
              "property": {
                "name": "foo",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > ["x".foo]=x 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 11,
        "left": {
          "elements": [
            {
              "computed": false,
              "end": 8,
              "object": {
                "end": 4,
                "range": [
                  1,
                  4,
                ],
                "raw": ""x"",
                "start": 1,
                "type": "Literal",
                "value": "x",
              },
              "property": {
                "end": 8,
                "name": "foo",
                "range": [
                  5,
                  8,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "range": [
                1,
                8,
              ],
              "start": 1,
              "type": "MemberExpression",
            },
          ],
          "end": 9,
          "range": [
            0,
            9,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          11,
        ],
        "right": {
          "end": 11,
          "name": "x",
          "range": [
            10,
            11,
          ],
          "start": 10,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [((x, y) => z).x] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "async": false,
                "body": {
                  "name": "z",
                  "type": "Identifier",
                },
                "expression": true,
                "generator": false,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                  {
                    "name": "y",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "property": {
                "name": "x",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [((x, y) => z)["x"]] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": true,
              "object": {
                "async": false,
                "body": {
                  "name": "z",
                  "type": "Identifier",
                },
                "expression": true,
                "generator": false,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                  {
                    "name": "y",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "property": {
                "type": "Literal",
                "value": "x",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [() => {}] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "async": false,
            "body": {
              "body": [],
              "type": "BlockStatement",
            },
            "expression": false,
            "generator": false,
            "params": [],
            "type": "ArrowFunctionExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [(a)] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "a",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [(a)] = 1 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "a",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 1,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [(x) = y = (z) => (a)] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "name": "x",
              "type": "Identifier",
            },
            "operator": "=",
            "right": {
              "left": {
                "name": "y",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "async": false,
                "body": {
                  "name": "a",
                  "type": "Identifier",
                },
                "expression": true,
                "generator": false,
                "params": [
                  {
                    "name": "z",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "type": "AssignmentExpression",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [(x)] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "x",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [, ...x] = [1, 2, 3]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            null,
            {
              "argument": {
                "name": "x",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "type": "Literal",
              "value": 1,
            },
            {
              "type": "Literal",
              "value": 2,
            },
            {
              "type": "Literal",
              "value": 3,
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [, x,,] = 0 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 11,
        "left": {
          "elements": [
            null,
            {
              "end": 4,
              "name": "x",
              "range": [
                3,
                4,
              ],
              "start": 3,
              "type": "Identifier",
            },
            null,
          ],
          "end": 7,
          "range": [
            0,
            7,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          11,
        ],
        "right": {
          "end": 11,
          "range": [
            10,
            11,
          ],
          "start": 10,
          "type": "Literal",
          "value": 0,
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [,,,] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          null,
          null,
          null,
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [,,] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          null,
          null,
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [,,] 2`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          null,
          null,
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [,,x] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          null,
          null,
          {
            "name": "x",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [,] = null; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            null,
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": null,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [,] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          null,
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [,] 2`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          null,
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [,a,] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          null,
          {
            "name": "a",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [..."f".toString()] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "arguments": [],
              "callee": {
                "computed": false,
                "object": {
                  "type": "Literal",
                  "value": "f",
                },
                "property": {
                  "name": "toString",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "type": "CallExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [..."foo".bar] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "computed": false,
              "object": {
                "type": "Literal",
                "value": "foo",
              },
              "property": {
                "name": "bar",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [..."foo"] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "type": "Literal",
              "value": "foo",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [..."x" + y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "type": "Literal",
                "value": "x",
              },
              "operator": "+",
              "right": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [..."x".y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "computed": false,
              "object": {
                "type": "Literal",
                "value": "x",
              },
              "property": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...(x)] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "name": "x",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...(x,y)] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "expressions": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
                {
                  "name": "y",
                  "type": "Identifier",
                },
              ],
              "type": "SequenceExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [.../x/+y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "regex": {
                  "flags": "",
                  "pattern": "x",
                },
                "type": "Literal",
                "value": /x/,
              },
              "operator": "+",
              "right": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [.../x//y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "regex": {
                  "flags": "",
                  "pattern": "x",
                },
                "type": "Literal",
                "value": /x/,
              },
              "operator": "/",
              "right": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [.../x//yield] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "regex": {
                  "flags": "",
                  "pattern": "x",
                },
                "type": "Literal",
                "value": /x/,
              },
              "operator": "/",
              "right": {
                "name": "yield",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [.../x/] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "regex": {
                "flags": "",
                "pattern": "x",
              },
              "type": "Literal",
              "value": /x/,
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [.../x/g/y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "regex": {
                  "flags": "g",
                  "pattern": "x",
                },
                "type": "Literal",
                "value": /x/g,
              },
              "operator": "/",
              "right": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[ x = 5 ] ] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "left": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 5,
                    },
                    "type": "AssignmentPattern",
                  },
                ],
                "type": "ArrayPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[...[...a]]] = [[[]]]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "argument": {
                      "elements": [
                        {
                          "argument": {
                            "name": "a",
                            "type": "Identifier",
                          },
                          "type": "RestElement",
                        },
                      ],
                      "type": "ArrayPattern",
                    },
                    "type": "RestElement",
                  },
                ],
                "type": "ArrayPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "elements": [
                {
                  "elements": [],
                  "type": "ArrayExpression",
                },
              ],
              "type": "ArrayExpression",
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[...a[x]]] = 1 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "argument": {
                      "computed": true,
                      "object": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "property": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "RestElement",
                  },
                ],
                "type": "ArrayPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 1,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[a] = 1] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "elements": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrayPattern",
              },
              "operator": "=",
              "right": {
                "type": "Literal",
                "value": 1,
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[a].b1] = 3 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "computed": false,
                "object": {
                  "elements": [
                    {
                      "name": "a",
                      "type": "Identifier",
                    },
                  ],
                  "type": "ArrayExpression",
                },
                "property": {
                  "name": "b1",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 3,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[x].map(y, z)[x]] = a; 1`] = `
{
  "body": [
    {
      "end": 26,
      "expression": {
        "end": 25,
        "left": {
          "elements": [
            {
              "argument": {
                "computed": true,
                "end": 20,
                "object": {
                  "arguments": [
                    {
                      "end": 13,
                      "name": "y",
                      "range": [
                        12,
                        13,
                      ],
                      "start": 12,
                      "type": "Identifier",
                    },
                    {
                      "end": 16,
                      "name": "z",
                      "range": [
                        15,
                        16,
                      ],
                      "start": 15,
                      "type": "Identifier",
                    },
                  ],
                  "callee": {
                    "computed": false,
                    "end": 11,
                    "object": {
                      "elements": [
                        {
                          "end": 6,
                          "name": "x",
                          "range": [
                            5,
                            6,
                          ],
                          "start": 5,
                          "type": "Identifier",
                        },
                      ],
                      "end": 7,
                      "range": [
                        4,
                        7,
                      ],
                      "start": 4,
                      "type": "ArrayExpression",
                    },
                    "property": {
                      "end": 11,
                      "name": "map",
                      "range": [
                        8,
                        11,
                      ],
                      "start": 8,
                      "type": "Identifier",
                    },
                    "range": [
                      4,
                      11,
                    ],
                    "start": 4,
                    "type": "MemberExpression",
                  },
                  "end": 17,
                  "range": [
                    4,
                    17,
                  ],
                  "start": 4,
                  "type": "CallExpression",
                },
                "property": {
                  "end": 19,
                  "name": "x",
                  "range": [
                    18,
                    19,
                  ],
                  "start": 18,
                  "type": "Identifier",
                },
                "range": [
                  4,
                  20,
                ],
                "start": 4,
                "type": "MemberExpression",
              },
              "end": 20,
              "range": [
                1,
                20,
              ],
              "start": 1,
              "type": "RestElement",
            },
          ],
          "end": 21,
          "range": [
            0,
            21,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          25,
        ],
        "right": {
          "end": 25,
          "name": "a",
          "range": [
            24,
            25,
          ],
          "start": 24,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[x].map(y, z)]; 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "elements": [
          {
            "argument": {
              "arguments": [
                {
                  "end": 13,
                  "name": "y",
                  "range": [
                    12,
                    13,
                  ],
                  "start": 12,
                  "type": "Identifier",
                },
                {
                  "end": 16,
                  "name": "z",
                  "range": [
                    15,
                    16,
                  ],
                  "start": 15,
                  "type": "Identifier",
                },
              ],
              "callee": {
                "computed": false,
                "end": 11,
                "object": {
                  "elements": [
                    {
                      "end": 6,
                      "name": "x",
                      "range": [
                        5,
                        6,
                      ],
                      "start": 5,
                      "type": "Identifier",
                    },
                  ],
                  "end": 7,
                  "range": [
                    4,
                    7,
                  ],
                  "start": 4,
                  "type": "ArrayExpression",
                },
                "property": {
                  "end": 11,
                  "name": "map",
                  "range": [
                    8,
                    11,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
                "range": [
                  4,
                  11,
                ],
                "start": 4,
                "type": "MemberExpression",
              },
              "end": 17,
              "range": [
                4,
                17,
              ],
              "start": 4,
              "type": "CallExpression",
            },
            "end": 17,
            "range": [
              1,
              17,
            ],
            "start": 1,
            "type": "SpreadElement",
          },
        ],
        "end": 18,
        "range": [
          0,
          18,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[x]] = 0 1`] = `
{
  "body": [
    {
      "end": 12,
      "expression": {
        "end": 12,
        "left": {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "end": 6,
                    "name": "x",
                    "range": [
                      5,
                      6,
                    ],
                    "start": 5,
                    "type": "Identifier",
                  },
                ],
                "end": 7,
                "range": [
                  4,
                  7,
                ],
                "start": 4,
                "type": "ArrayPattern",
              },
              "end": 7,
              "range": [
                1,
                7,
              ],
              "start": 1,
              "type": "RestElement",
            },
          ],
          "end": 8,
          "range": [
            0,
            8,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          12,
        ],
        "right": {
          "end": 12,
          "range": [
            11,
            12,
          ],
          "start": 11,
          "type": "Literal",
          "value": 0,
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...[x]] = 0 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrayPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...{a = b} = c]; 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "elements": [
          {
            "argument": {
              "end": 15,
              "left": {
                "end": 11,
                "properties": [
                  {
                    "computed": false,
                    "end": 10,
                    "key": {
                      "end": 6,
                      "name": "a",
                      "range": [
                        5,
                        6,
                      ],
                      "start": 5,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      5,
                      10,
                    ],
                    "shorthand": true,
                    "start": 5,
                    "type": "Property",
                    "value": {
                      "end": 10,
                      "left": {
                        "end": 6,
                        "name": "a",
                        "range": [
                          5,
                          6,
                        ],
                        "start": 5,
                        "type": "Identifier",
                      },
                      "range": [
                        5,
                        10,
                      ],
                      "right": {
                        "end": 10,
                        "name": "b",
                        "range": [
                          9,
                          10,
                        ],
                        "start": 9,
                        "type": "Identifier",
                      },
                      "start": 5,
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "range": [
                  4,
                  11,
                ],
                "start": 4,
                "type": "ObjectPattern",
              },
              "operator": "=",
              "range": [
                4,
                15,
              ],
              "right": {
                "end": 15,
                "name": "c",
                "range": [
                  14,
                  15,
                ],
                "start": 14,
                "type": "Identifier",
              },
              "start": 4,
              "type": "AssignmentExpression",
            },
            "end": 15,
            "range": [
              1,
              15,
            ],
            "start": 1,
            "type": "SpreadElement",
          },
        ],
        "end": 16,
        "range": [
          0,
          16,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...{a = b}] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "right": {
                        "name": "b",
                        "type": "Identifier",
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...{a}] = [{}]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "name": "a",
                      "type": "Identifier",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "properties": [],
              "type": "ObjectExpression",
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...{x = 1}] = [{}] 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "right": {
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "properties": [],
              "type": "ObjectExpression",
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...{x}=y]; 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "name": "x",
                      "type": "Identifier",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "operator": "=",
              "right": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...50] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "type": "Literal",
              "value": 50,
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...this]; 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "type": "ThisExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...true] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "type": "Literal",
              "value": true,
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...x += y]; 1`] = `
{
  "body": [
    {
      "end": 12,
      "expression": {
        "elements": [
          {
            "argument": {
              "end": 10,
              "left": {
                "end": 5,
                "name": "x",
                "range": [
                  4,
                  5,
                ],
                "start": 4,
                "type": "Identifier",
              },
              "operator": "+=",
              "range": [
                4,
                10,
              ],
              "right": {
                "end": 10,
                "name": "y",
                "range": [
                  9,
                  10,
                ],
                "start": 9,
                "type": "Identifier",
              },
              "start": 4,
              "type": "AssignmentExpression",
            },
            "end": 10,
            "range": [
              1,
              10,
            ],
            "start": 1,
            "type": "SpreadElement",
          },
        ],
        "end": 11,
        "range": [
          0,
          11,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...x = y]; 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "name": "x",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...x.list] = a; 1`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 15,
        "left": {
          "elements": [
            {
              "argument": {
                "computed": false,
                "end": 10,
                "object": {
                  "end": 5,
                  "name": "x",
                  "range": [
                    4,
                    5,
                  ],
                  "start": 4,
                  "type": "Identifier",
                },
                "property": {
                  "end": 10,
                  "name": "list",
                  "range": [
                    6,
                    10,
                  ],
                  "start": 6,
                  "type": "Identifier",
                },
                "range": [
                  4,
                  10,
                ],
                "start": 4,
                "type": "MemberExpression",
              },
              "end": 10,
              "range": [
                1,
                10,
              ],
              "start": 1,
              "type": "RestElement",
            },
          ],
          "end": 11,
          "range": [
            0,
            11,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          15,
        ],
        "right": {
          "end": 15,
          "name": "a",
          "range": [
            14,
            15,
          ],
          "start": 14,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...x.list] = a; 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "argument": {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "list",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "a",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...x.list]; 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "computed": false,
              "object": {
                "name": "x",
                "type": "Identifier",
              },
              "property": {
                "name": "list",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...x.list]; 2`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "computed": false,
              "object": {
                "name": "x",
                "type": "Identifier",
              },
              "property": {
                "name": "list",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [...z = 1] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "argument": {
              "left": {
                "name": "z",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "type": "Literal",
                "value": 1,
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [/foo/.length] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "regex": {
                  "flags": "",
                  "pattern": "foo",
                },
                "type": "Literal",
                "value": /foo/,
              },
              "property": {
                "name": "length",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[ x ]] = [ , ]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            null,
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[ x ]] = []; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[ x ]] = [null]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "type": "Literal",
              "value": null,
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[ x ]] = [undefined]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "name": "undefined",
              "type": "Identifier",
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[[[[[[[[[[[[[[[[[[[{a=b[0]}]]]]]]]]]]]]]]]]]]]]=0; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "elements": [
                    {
                      "elements": [
                        {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "elements": [
                                    {
                                      "elements": [
                                        {
                                          "elements": [
                                            {
                                              "elements": [
                                                {
                                                  "elements": [
                                                    {
                                                      "elements": [
                                                        {
                                                          "elements": [
                                                            {
                                                              "elements": [
                                                                {
                                                                  "elements": [
                                                                    {
                                                                      "elements": [
                                                                        {
                                                                          "elements": [
                                                                            {
                                                                              "elements": [
                                                                                {
                                                                                  "elements": [
                                                                                    {
                                                                                      "elements": [
                                                                                        {
                                                                                          "properties": [
                                                                                            {
                                                                                              "computed": false,
                                                                                              "key": {
                                                                                                "name": "a",
                                                                                                "type": "Identifier",
                                                                                              },
                                                                                              "kind": "init",
                                                                                              "method": false,
                                                                                              "shorthand": true,
                                                                                              "type": "Property",
                                                                                              "value": {
                                                                                                "left": {
                                                                                                  "name": "a",
                                                                                                  "type": "Identifier",
                                                                                                },
                                                                                                "right": {
                                                                                                  "computed": true,
                                                                                                  "object": {
                                                                                                    "name": "b",
                                                                                                    "type": "Identifier",
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 0,
                                                                                                  },
                                                                                                  "type": "MemberExpression",
                                                                                                },
                                                                                                "type": "AssignmentPattern",
                                                                                              },
                                                                                            },
                                                                                          ],
                                                                                          "type": "ObjectPattern",
                                                                                        },
                                                                                      ],
                                                                                      "type": "ArrayPattern",
                                                                                    },
                                                                                  ],
                                                                                  "type": "ArrayPattern",
                                                                                },
                                                                              ],
                                                                              "type": "ArrayPattern",
                                                                            },
                                                                          ],
                                                                          "type": "ArrayPattern",
                                                                        },
                                                                      ],
                                                                      "type": "ArrayPattern",
                                                                    },
                                                                  ],
                                                                  "type": "ArrayPattern",
                                                                },
                                                              ],
                                                              "type": "ArrayPattern",
                                                            },
                                                          ],
                                                          "type": "ArrayPattern",
                                                        },
                                                      ],
                                                      "type": "ArrayPattern",
                                                    },
                                                  ],
                                                  "type": "ArrayPattern",
                                                },
                                              ],
                                              "type": "ArrayPattern",
                                            },
                                          ],
                                          "type": "ArrayPattern",
                                        },
                                      ],
                                      "type": "ArrayPattern",
                                    },
                                  ],
                                  "type": "ArrayPattern",
                                },
                              ],
                              "type": "ArrayPattern",
                            },
                          ],
                          "type": "ArrayPattern",
                        },
                      ],
                      "type": "ArrayPattern",
                    },
                  ],
                  "type": "ArrayPattern",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[[[z++]]]] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "elements": [
              {
                "elements": [
                  {
                    "elements": [
                      {
                        "argument": {
                          "name": "z",
                          "type": "Identifier",
                        },
                        "operator": "++",
                        "prefix": false,
                        "type": "UpdateExpression",
                      },
                    ],
                    "type": "ArrayExpression",
                  },
                ],
                "type": "ArrayExpression",
              },
            ],
            "type": "ArrayExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[].length] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "elements": [],
                "type": "ArrayExpression",
              },
              "property": {
                "name": "length",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[foo].length] = x 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "end": 18,
        "left": {
          "elements": [
            {
              "computed": false,
              "end": 13,
              "object": {
                "elements": [
                  {
                    "end": 5,
                    "name": "foo",
                    "range": [
                      2,
                      5,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                ],
                "end": 6,
                "range": [
                  1,
                  6,
                ],
                "start": 1,
                "type": "ArrayExpression",
              },
              "property": {
                "end": 13,
                "name": "length",
                "range": [
                  7,
                  13,
                ],
                "start": 7,
                "type": "Identifier",
              },
              "range": [
                1,
                13,
              ],
              "start": 1,
              "type": "MemberExpression",
            },
          ],
          "end": 14,
          "range": [
            0,
            14,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          18,
        ],
        "right": {
          "end": 18,
          "name": "x",
          "range": [
            17,
            18,
          ],
          "start": 17,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[x = true] = true] = y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "elements": [
                  {
                    "left": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": true,
                    },
                    "type": "AssignmentPattern",
                  },
                ],
                "type": "ArrayPattern",
              },
              "right": {
                "type": "Literal",
                "value": true,
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[x] = true] = y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "elements": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrayPattern",
              },
              "right": {
                "type": "Literal",
                "value": true,
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[x].length] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "elements": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrayExpression",
              },
              "property": {
                "name": "length",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[x]] = [[1]]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "elements": [
                {
                  "type": "Literal",
                  "value": 1,
                },
              ],
              "type": "ArrayExpression",
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[x]] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [[y] = /a/ ] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "elements": [
                {
                  "name": "y",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
            "operator": "=",
            "right": {
              "regex": {
                "flags": "",
                "pattern": "a",
              },
              "type": "Literal",
              "value": /a/,
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [] 2`] = `
{
  "body": [
    {
      "expression": {
        "elements": [],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{ x }] = [ , ]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "x",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            null,
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{ x }] = []; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "x",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{ x }] = [null]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "x",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "type": "Literal",
              "value": null,
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{}.length] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "property": {
                "name": "length",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{}.x] = y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "property": {
                "name": "x",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{}[x]] = y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": true,
              "object": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "property": {
                "name": "x",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{a = 0}] = [{}]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "properties": [],
              "type": "ObjectExpression",
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{a = 0}] = [{}]; 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "properties": [],
              "type": "ObjectExpression",
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{a=0}, ...b] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            {
              "argument": {
                "name": "b",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{a=0},{a=0}] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{a=b}=0] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "right": {
                      "name": "b",
                      "type": "Identifier",
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "type": "Literal",
              "value": 0,
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{x : [{y:{z = 1}, z1 = 2}] }, {x2 = 3}, {x3 : {y3:[{z3 = 4}]}} ] = [{x:[{y:{}}]}, {}, {x3:{y3:[{}]}}]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "properties": [
                          {
                            "computed": false,
                            "key": {
                              "name": "y",
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false,
                            "type": "Property",
                            "value": {
                              "properties": [
                                {
                                  "computed": false,
                                  "key": {
                                    "name": "z",
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": true,
                                  "type": "Property",
                                  "value": {
                                    "left": {
                                      "name": "z",
                                      "type": "Identifier",
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "type": "ObjectPattern",
                            },
                          },
                          {
                            "computed": false,
                            "key": {
                              "name": "z1",
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": true,
                            "type": "Property",
                            "value": {
                              "left": {
                                "name": "z1",
                                "type": "Identifier",
                              },
                              "right": {
                                "type": "Literal",
                                "value": 2,
                              },
                              "type": "AssignmentPattern",
                            },
                          },
                        ],
                        "type": "ObjectPattern",
                      },
                    ],
                    "type": "ArrayPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x2",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "x2",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 3,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x3",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "properties": [
                      {
                        "computed": false,
                        "key": {
                          "name": "y3",
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "type": "Property",
                        "value": {
                          "elements": [
                            {
                              "properties": [
                                {
                                  "computed": false,
                                  "key": {
                                    "name": "z3",
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": true,
                                  "type": "Property",
                                  "value": {
                                    "left": {
                                      "name": "z3",
                                      "type": "Identifier",
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 4,
                                    },
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "type": "ObjectPattern",
                            },
                          ],
                          "type": "ArrayPattern",
                        },
                      },
                    ],
                    "type": "ObjectPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "properties": [
                          {
                            "computed": false,
                            "key": {
                              "name": "y",
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false,
                            "type": "Property",
                            "value": {
                              "properties": [],
                              "type": "ObjectExpression",
                            },
                          },
                        ],
                        "type": "ObjectExpression",
                      },
                    ],
                    "type": "ArrayExpression",
                  },
                },
              ],
              "type": "ObjectExpression",
            },
            {
              "properties": [],
              "type": "ObjectExpression",
            },
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x3",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "properties": [
                      {
                        "computed": false,
                        "key": {
                          "name": "y3",
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "type": "Property",
                        "value": {
                          "elements": [
                            {
                              "properties": [],
                              "type": "ObjectExpression",
                            },
                          ],
                          "type": "ArrayExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                },
              ],
              "type": "ObjectExpression",
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{x: y}.length] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "name": "y",
                      "type": "Identifier",
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
              "property": {
                "name": "length",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{x:x = 1, y:y = 2}, [z = 3, z = 4, z = 5]] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "AssignmentPattern",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "y",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 2,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            {
              "elements": [
                {
                  "left": {
                    "name": "z",
                    "type": "Identifier",
                  },
                  "right": {
                    "type": "Literal",
                    "value": 3,
                  },
                  "type": "AssignmentPattern",
                },
                {
                  "left": {
                    "name": "z",
                    "type": "Identifier",
                  },
                  "right": {
                    "type": "Literal",
                    "value": 4,
                  },
                  "type": "AssignmentPattern",
                },
                {
                  "left": {
                    "name": "z",
                    "type": "Identifier",
                  },
                  "right": {
                    "type": "Literal",
                    "value": 5,
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [{y} = /a/ ] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "y",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "regex": {
                "flags": "",
                "pattern": "a",
              },
              "type": "Literal",
              "value": /a/,
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [1, 2, ...target = source] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "type": "Literal",
            "value": 1,
          },
          {
            "type": "Literal",
            "value": 2,
          },
          {
            "argument": {
              "left": {
                "name": "target",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "name": "source",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [1, 2, 3, ...[]] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "type": "Literal",
            "value": 1,
          },
          {
            "type": "Literal",
            "value": 2,
          },
          {
            "type": "Literal",
            "value": 3,
          },
          {
            "argument": {
              "elements": [],
              "type": "ArrayExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [1,2,3,4,5] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "type": "Literal",
            "value": 1,
          },
          {
            "type": "Literal",
            "value": 2,
          },
          {
            "type": "Literal",
            "value": 3,
          },
          {
            "type": "Literal",
            "value": 4,
          },
          {
            "type": "Literal",
            "value": 5,
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [5, ...[6, 7, 8], 9] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "type": "Literal",
            "value": 5,
          },
          {
            "argument": {
              "elements": [
                {
                  "type": "Literal",
                  "value": 6,
                },
                {
                  "type": "Literal",
                  "value": 7,
                },
                {
                  "type": "Literal",
                  "value": 8,
                },
              ],
              "type": "ArrayExpression",
            },
            "type": "SpreadElement",
          },
          {
            "type": "Literal",
            "value": 9,
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [5..length] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "type": "Literal",
                "value": 5,
              },
              "property": {
                "name": "length",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a = 0, ...{b = 0}] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "name": "a",
                "type": "Identifier",
              },
              "right": {
                "type": "Literal",
                "value": 0,
              },
              "type": "AssignmentPattern",
            },
            {
              "argument": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "b",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "b",
                        "type": "Identifier",
                      },
                      "right": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a = 2] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "name": "a",
              "type": "Identifier",
            },
            "operator": "=",
            "right": {
              "type": "Literal",
              "value": 2,
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a, {[b]:d}, c] = obj 1`] = `
{
  "body": [
    {
      "end": 21,
      "expression": {
        "end": 21,
        "left": {
          "elements": [
            {
              "end": 2,
              "name": "a",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            {
              "end": 11,
              "properties": [
                {
                  "computed": true,
                  "end": 10,
                  "key": {
                    "end": 7,
                    "name": "b",
                    "range": [
                      6,
                      7,
                    ],
                    "start": 6,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    5,
                    10,
                  ],
                  "shorthand": false,
                  "start": 5,
                  "type": "Property",
                  "value": {
                    "end": 10,
                    "name": "d",
                    "range": [
                      9,
                      10,
                    ],
                    "start": 9,
                    "type": "Identifier",
                  },
                },
              ],
              "range": [
                4,
                11,
              ],
              "start": 4,
              "type": "ObjectPattern",
            },
            {
              "end": 14,
              "name": "c",
              "range": [
                13,
                14,
              ],
              "start": 13,
              "type": "Identifier",
            },
          ],
          "end": 15,
          "range": [
            0,
            15,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          21,
        ],
        "right": {
          "end": 21,
          "name": "obj",
          "range": [
            18,
            21,
          ],
          "start": 18,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        21,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 21,
  "range": [
    0,
    21,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a, {b:d}, c] = obj 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "end": 19,
        "left": {
          "elements": [
            {
              "end": 2,
              "name": "a",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            {
              "end": 9,
              "properties": [
                {
                  "computed": false,
                  "end": 8,
                  "key": {
                    "end": 6,
                    "name": "b",
                    "range": [
                      5,
                      6,
                    ],
                    "start": 5,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    5,
                    8,
                  ],
                  "shorthand": false,
                  "start": 5,
                  "type": "Property",
                  "value": {
                    "end": 8,
                    "name": "d",
                    "range": [
                      7,
                      8,
                    ],
                    "start": 7,
                    "type": "Identifier",
                  },
                },
              ],
              "range": [
                4,
                9,
              ],
              "start": 4,
              "type": "ObjectPattern",
            },
            {
              "end": 12,
              "name": "c",
              "range": [
                11,
                12,
              ],
              "start": 11,
              "type": "Identifier",
            },
          ],
          "end": 13,
          "range": [
            0,
            13,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          19,
        ],
        "right": {
          "end": 19,
          "name": "obj",
          "range": [
            16,
            19,
          ],
          "start": 16,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a, {b}, c] = obj 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "end": 17,
        "left": {
          "elements": [
            {
              "end": 2,
              "name": "a",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            {
              "end": 7,
              "properties": [
                {
                  "computed": false,
                  "end": 6,
                  "key": {
                    "end": 6,
                    "name": "b",
                    "range": [
                      5,
                      6,
                    ],
                    "start": 5,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    5,
                    6,
                  ],
                  "shorthand": true,
                  "start": 5,
                  "type": "Property",
                  "value": {
                    "end": 6,
                    "name": "b",
                    "range": [
                      5,
                      6,
                    ],
                    "start": 5,
                    "type": "Identifier",
                  },
                },
              ],
              "range": [
                4,
                7,
              ],
              "start": 4,
              "type": "ObjectPattern",
            },
            {
              "end": 10,
              "name": "c",
              "range": [
                9,
                10,
              ],
              "start": 9,
              "type": "Identifier",
            },
          ],
          "end": 11,
          "range": [
            0,
            11,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          17,
        ],
        "right": {
          "end": 17,
          "name": "obj",
          "range": [
            14,
            17,
          ],
          "start": 14,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a, b] = c = d 1`] = `
{
  "body": [
    {
      "end": 14,
      "expression": {
        "end": 14,
        "left": {
          "elements": [
            {
              "end": 2,
              "name": "a",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            {
              "end": 5,
              "name": "b",
              "range": [
                4,
                5,
              ],
              "start": 4,
              "type": "Identifier",
            },
          ],
          "end": 6,
          "range": [
            0,
            6,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          14,
        ],
        "right": {
          "end": 14,
          "left": {
            "end": 10,
            "name": "c",
            "range": [
              9,
              10,
            ],
            "start": 9,
            "type": "Identifier",
          },
          "operator": "=",
          "range": [
            9,
            14,
          ],
          "right": {
            "end": 14,
            "name": "d",
            "range": [
              13,
              14,
            ],
            "start": 13,
            "type": "Identifier",
          },
          "start": 9,
          "type": "AssignmentExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a,,,,,,,,,b] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "a",
            "type": "Identifier",
          },
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          {
            "name": "b",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a,,b] = array; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "a",
              "type": "Identifier",
            },
            null,
            {
              "name": "b",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "array",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a,a,,...a]=0; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "a",
              "type": "Identifier",
            },
            {
              "name": "a",
              "type": "Identifier",
            },
            null,
            {
              "argument": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a,b=[x,y]] = z 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 15,
        "left": {
          "elements": [
            {
              "end": 2,
              "name": "a",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            {
              "end": 10,
              "left": {
                "end": 4,
                "name": "b",
                "range": [
                  3,
                  4,
                ],
                "start": 3,
                "type": "Identifier",
              },
              "range": [
                3,
                10,
              ],
              "right": {
                "elements": [
                  {
                    "end": 7,
                    "name": "x",
                    "range": [
                      6,
                      7,
                    ],
                    "start": 6,
                    "type": "Identifier",
                  },
                  {
                    "end": 9,
                    "name": "y",
                    "range": [
                      8,
                      9,
                    ],
                    "start": 8,
                    "type": "Identifier",
                  },
                ],
                "end": 10,
                "range": [
                  5,
                  10,
                ],
                "start": 5,
                "type": "ArrayExpression",
              },
              "start": 3,
              "type": "AssignmentPattern",
            },
          ],
          "end": 11,
          "range": [
            0,
            11,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          15,
        ],
        "right": {
          "end": 15,
          "name": "z",
          "range": [
            14,
            15,
          ],
          "start": 14,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a,b=0,[c,...a[0]]={}]=0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "a",
              "type": "Identifier",
            },
            {
              "left": {
                "name": "b",
                "type": "Identifier",
              },
              "right": {
                "type": "Literal",
                "value": 0,
              },
              "type": "AssignmentPattern",
            },
            {
              "left": {
                "elements": [
                  {
                    "name": "c",
                    "type": "Identifier",
                  },
                  {
                    "argument": {
                      "computed": true,
                      "object": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "type": "MemberExpression",
                    },
                    "type": "RestElement",
                  },
                ],
                "type": "ArrayPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a[x.y] = a + b] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": true,
                "object": {
                  "name": "a",
                  "type": "Identifier",
                },
                "property": {
                  "computed": false,
                  "object": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "property": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
                "type": "MemberExpression",
              },
              "right": {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "operator": "+",
                "right": {
                  "name": "b",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a[x.y] = a] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": true,
                "object": {
                  "name": "a",
                  "type": "Identifier",
                },
                "property": {
                  "computed": false,
                  "object": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "property": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
                "type": "MemberExpression",
              },
              "right": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [a[x.y]] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": true,
              "object": {
                "name": "a",
                "type": "Identifier",
              },
              "property": {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [abc => {}] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "async": false,
            "body": {
              "body": [],
              "type": "BlockStatement",
            },
            "expression": false,
            "generator": false,
            "params": [
              {
                "name": "abc",
                "type": "Identifier",
              },
            ],
            "type": "ArrowFunctionExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [arguments] = [] 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "arguments",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [await = x] = x 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 15,
        "left": {
          "elements": [
            {
              "end": 10,
              "left": {
                "end": 6,
                "name": "await",
                "range": [
                  1,
                  6,
                ],
                "start": 1,
                "type": "Identifier",
              },
              "range": [
                1,
                10,
              ],
              "right": {
                "end": 10,
                "name": "x",
                "range": [
                  9,
                  10,
                ],
                "start": 9,
                "type": "Identifier",
              },
              "start": 1,
              "type": "AssignmentPattern",
            },
          ],
          "end": 11,
          "range": [
            0,
            11,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          15,
        ],
        "right": {
          "end": 15,
          "name": "x",
          "range": [
            14,
            15,
          ],
          "start": 14,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [await = x] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "left": {
              "name": "await",
              "type": "Identifier",
            },
            "operator": "=",
            "right": {
              "name": "x",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo = A, bar = B] = arr; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "name": "foo",
                "type": "Identifier",
              },
              "right": {
                "name": "A",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
            {
              "left": {
                "name": "bar",
                "type": "Identifier",
              },
              "right": {
                "name": "B",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "arr",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo = A, bar = B] = arr; 2`] = `
{
  "body": [
    {
      "end": 25,
      "expression": {
        "end": 24,
        "left": {
          "elements": [
            {
              "end": 8,
              "left": {
                "end": 4,
                "name": "foo",
                "range": [
                  1,
                  4,
                ],
                "start": 1,
                "type": "Identifier",
              },
              "range": [
                1,
                8,
              ],
              "right": {
                "end": 8,
                "name": "A",
                "range": [
                  7,
                  8,
                ],
                "start": 7,
                "type": "Identifier",
              },
              "start": 1,
              "type": "AssignmentPattern",
            },
            {
              "end": 17,
              "left": {
                "end": 13,
                "name": "bar",
                "range": [
                  10,
                  13,
                ],
                "start": 10,
                "type": "Identifier",
              },
              "range": [
                10,
                17,
              ],
              "right": {
                "end": 17,
                "name": "B",
                "range": [
                  16,
                  17,
                ],
                "start": 16,
                "type": "Identifier",
              },
              "start": 10,
              "type": "AssignmentPattern",
            },
          ],
          "end": 18,
          "range": [
            0,
            18,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          24,
        ],
        "right": {
          "end": 24,
          "name": "arr",
          "range": [
            21,
            24,
          ],
          "start": 21,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        25,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 25,
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo = A] = arr; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "name": "foo",
                "type": "Identifier",
              },
              "right": {
                "name": "A",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "arr",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo = A] = arr; 2`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 15,
        "left": {
          "elements": [
            {
              "end": 8,
              "left": {
                "end": 4,
                "name": "foo",
                "range": [
                  1,
                  4,
                ],
                "start": 1,
                "type": "Identifier",
              },
              "range": [
                1,
                8,
              ],
              "right": {
                "end": 8,
                "name": "A",
                "range": [
                  7,
                  8,
                ],
                "start": 7,
                "type": "Identifier",
              },
              "start": 1,
              "type": "AssignmentPattern",
            },
          ],
          "end": 9,
          "range": [
            0,
            9,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          15,
        ],
        "right": {
          "end": 15,
          "name": "arr",
          "range": [
            12,
            15,
          ],
          "start": 12,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo, [[[[[[[[[[[[[x,y,z]]]]]]]]]]]]], bar = B] = arr; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "foo",
              "type": "Identifier",
            },
            {
              "elements": [
                {
                  "elements": [
                    {
                      "elements": [
                        {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "elements": [
                                    {
                                      "elements": [
                                        {
                                          "elements": [
                                            {
                                              "elements": [
                                                {
                                                  "elements": [
                                                    {
                                                      "elements": [
                                                        {
                                                          "elements": [
                                                            {
                                                              "elements": [
                                                                {
                                                                  "name": "x",
                                                                  "type": "Identifier",
                                                                },
                                                                {
                                                                  "name": "y",
                                                                  "type": "Identifier",
                                                                },
                                                                {
                                                                  "name": "z",
                                                                  "type": "Identifier",
                                                                },
                                                              ],
                                                              "type": "ArrayPattern",
                                                            },
                                                          ],
                                                          "type": "ArrayPattern",
                                                        },
                                                      ],
                                                      "type": "ArrayPattern",
                                                    },
                                                  ],
                                                  "type": "ArrayPattern",
                                                },
                                              ],
                                              "type": "ArrayPattern",
                                            },
                                          ],
                                          "type": "ArrayPattern",
                                        },
                                      ],
                                      "type": "ArrayPattern",
                                    },
                                  ],
                                  "type": "ArrayPattern",
                                },
                              ],
                              "type": "ArrayPattern",
                            },
                          ],
                          "type": "ArrayPattern",
                        },
                      ],
                      "type": "ArrayPattern",
                    },
                  ],
                  "type": "ArrayPattern",
                },
              ],
              "type": "ArrayPattern",
            },
            {
              "left": {
                "name": "bar",
                "type": "Identifier",
              },
              "right": {
                "name": "B",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "arr",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo, [x,y = 20,z], bar = B] = arr; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "foo",
              "type": "Identifier",
            },
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
                {
                  "left": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "right": {
                    "type": "Literal",
                    "value": 20,
                  },
                  "type": "AssignmentPattern",
                },
                {
                  "name": "z",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
            {
              "left": {
                "name": "bar",
                "type": "Identifier",
              },
              "right": {
                "name": "B",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "arr",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo, [x,y,z], bar = B] = arr; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "foo",
              "type": "Identifier",
            },
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
                {
                  "name": "y",
                  "type": "Identifier",
                },
                {
                  "name": "z",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
            {
              "left": {
                "name": "bar",
                "type": "Identifier",
              },
              "right": {
                "name": "B",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "arr",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo, bar] = arr; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "foo",
              "type": "Identifier",
            },
            {
              "name": "bar",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "arr",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [foo, bar] = arr; 2`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "end": 16,
        "left": {
          "elements": [
            {
              "end": 4,
              "name": "foo",
              "range": [
                1,
                4,
              ],
              "start": 1,
              "type": "Identifier",
            },
            {
              "end": 9,
              "name": "bar",
              "range": [
                6,
                9,
              ],
              "start": 6,
              "type": "Identifier",
            },
          ],
          "end": 10,
          "range": [
            0,
            10,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          16,
        ],
        "right": {
          "end": 16,
          "name": "arr",
          "range": [
            13,
            16,
          ],
          "start": 13,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [function(){}.length] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
              "property": {
                "name": "length",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [ok.v] = 20; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "name": "ok",
                "type": "Identifier",
              },
              "property": {
                "name": "v",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 20,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [please, {[make]: it}, stop] = bwahahahaha 1`] = `
{
  "body": [
    {
      "end": 42,
      "expression": {
        "end": 42,
        "left": {
          "elements": [
            {
              "end": 7,
              "name": "please",
              "range": [
                1,
                7,
              ],
              "start": 1,
              "type": "Identifier",
            },
            {
              "end": 21,
              "properties": [
                {
                  "computed": true,
                  "end": 20,
                  "key": {
                    "end": 15,
                    "name": "make",
                    "range": [
                      11,
                      15,
                    ],
                    "start": 11,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    10,
                    20,
                  ],
                  "shorthand": false,
                  "start": 10,
                  "type": "Property",
                  "value": {
                    "end": 20,
                    "name": "it",
                    "range": [
                      18,
                      20,
                    ],
                    "start": 18,
                    "type": "Identifier",
                  },
                },
              ],
              "range": [
                9,
                21,
              ],
              "start": 9,
              "type": "ObjectPattern",
            },
            {
              "end": 27,
              "name": "stop",
              "range": [
                23,
                27,
              ],
              "start": 23,
              "type": "Identifier",
            },
          ],
          "end": 28,
          "range": [
            0,
            28,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          42,
        ],
        "right": {
          "end": 42,
          "name": "bwahahahaha",
          "range": [
            31,
            42,
          ],
          "start": 31,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        42,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 42,
  "range": [
    0,
    42,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [pweeze = [pretty] = please, {[make]: it}, stop] = bwahahahaha 1`] = `
{
  "body": [
    {
      "end": 62,
      "expression": {
        "end": 62,
        "left": {
          "elements": [
            {
              "end": 27,
              "left": {
                "end": 7,
                "name": "pweeze",
                "range": [
                  1,
                  7,
                ],
                "start": 1,
                "type": "Identifier",
              },
              "range": [
                1,
                27,
              ],
              "right": {
                "end": 27,
                "left": {
                  "elements": [
                    {
                      "end": 17,
                      "name": "pretty",
                      "range": [
                        11,
                        17,
                      ],
                      "start": 11,
                      "type": "Identifier",
                    },
                  ],
                  "end": 18,
                  "range": [
                    10,
                    18,
                  ],
                  "start": 10,
                  "type": "ArrayPattern",
                },
                "operator": "=",
                "range": [
                  10,
                  27,
                ],
                "right": {
                  "end": 27,
                  "name": "please",
                  "range": [
                    21,
                    27,
                  ],
                  "start": 21,
                  "type": "Identifier",
                },
                "start": 10,
                "type": "AssignmentExpression",
              },
              "start": 1,
              "type": "AssignmentPattern",
            },
            {
              "end": 41,
              "properties": [
                {
                  "computed": true,
                  "end": 40,
                  "key": {
                    "end": 35,
                    "name": "make",
                    "range": [
                      31,
                      35,
                    ],
                    "start": 31,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    30,
                    40,
                  ],
                  "shorthand": false,
                  "start": 30,
                  "type": "Property",
                  "value": {
                    "end": 40,
                    "name": "it",
                    "range": [
                      38,
                      40,
                    ],
                    "start": 38,
                    "type": "Identifier",
                  },
                },
              ],
              "range": [
                29,
                41,
              ],
              "start": 29,
              "type": "ObjectPattern",
            },
            {
              "end": 47,
              "name": "stop",
              "range": [
                43,
                47,
              ],
              "start": 43,
              "type": "Identifier",
            },
          ],
          "end": 48,
          "range": [
            0,
            48,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          62,
        ],
        "right": {
          "end": 62,
          "name": "bwahahahaha",
          "range": [
            51,
            62,
          ],
          "start": 51,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        62,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 62,
  "range": [
    0,
    62,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [this]; 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "type": "ThisExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [this]; 2`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "type": "ThisExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x &= 42] 1`] = `
{
  "body": [
    {
      "end": 9,
      "expression": {
        "elements": [
          {
            "end": 8,
            "left": {
              "end": 2,
              "name": "x",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            "operator": "&=",
            "range": [
              1,
              8,
            ],
            "right": {
              "end": 8,
              "range": [
                6,
                8,
              ],
              "raw": "42",
              "start": 6,
              "type": "Literal",
              "value": 42,
            },
            "start": 1,
            "type": "AssignmentExpression",
          },
        ],
        "end": 9,
        "range": [
          0,
          9,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        9,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 9,
  "range": [
    0,
    9,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x = 10, y, z] = a; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "name": "x",
                "type": "Identifier",
              },
              "right": {
                "type": "Literal",
                "value": 10,
              },
              "type": "AssignmentPattern",
            },
            {
              "name": "y",
              "type": "Identifier",
            },
            {
              "name": "z",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "a",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x = true] = y 1`] = `
{
  "body": [
    {
      "end": 14,
      "expression": {
        "end": 14,
        "left": {
          "elements": [
            {
              "end": 9,
              "left": {
                "end": 2,
                "name": "x",
                "range": [
                  1,
                  2,
                ],
                "start": 1,
                "type": "Identifier",
              },
              "range": [
                1,
                9,
              ],
              "right": {
                "end": 9,
                "range": [
                  5,
                  9,
                ],
                "start": 5,
                "type": "Literal",
                "value": true,
              },
              "start": 1,
              "type": "AssignmentPattern",
            },
          ],
          "end": 10,
          "range": [
            0,
            10,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          14,
        ],
        "right": {
          "end": 14,
          "name": "y",
          "range": [
            13,
            14,
          ],
          "start": 13,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x = y] 1`] = `
{
  "body": [
    {
      "end": 7,
      "expression": {
        "elements": [
          {
            "end": 6,
            "left": {
              "end": 2,
              "name": "x",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              1,
              6,
            ],
            "right": {
              "end": 6,
              "name": "y",
              "range": [
                5,
                6,
              ],
              "start": 5,
              "type": "Identifier",
            },
            "start": 1,
            "type": "AssignmentExpression",
          },
        ],
        "end": 7,
        "range": [
          0,
          7,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        7,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 7,
  "range": [
    0,
    7,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x().y = a + b] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": false,
                "object": {
                  "arguments": [],
                  "callee": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "type": "CallExpression",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "operator": "+",
                "right": {
                  "name": "b",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x().y = a] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": false,
                "object": {
                  "arguments": [],
                  "callee": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "type": "CallExpression",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x().y] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "arguments": [],
                "callee": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "CallExpression",
              },
              "property": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x()[y] = a + b] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": true,
                "object": {
                  "arguments": [],
                  "callee": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "type": "CallExpression",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "operator": "+",
                "right": {
                  "name": "b",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x()[y] = a ] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": true,
                "object": {
                  "arguments": [],
                  "callee": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "type": "CallExpression",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x()[y]] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": true,
              "object": {
                "arguments": [],
                "callee": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "CallExpression",
              },
              "property": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, ...{0: y}] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "x",
              "type": "Identifier",
            },
            {
              "argument": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "type": "Literal",
                      "value": 0,
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "name": "y",
                      "type": "Identifier",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, ...y, z] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "argument": {
              "name": "y",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
          {
            "name": "z",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, ...y] = [1, 2, 3]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "x",
              "type": "Identifier",
            },
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "elements": [
            {
              "type": "Literal",
              "value": 1,
            },
            {
              "type": "Literal",
              "value": 2,
            },
            {
              "type": "Literal",
              "value": 3,
            },
          ],
          "type": "ArrayExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, ...z + arr, y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "argument": {
              "left": {
                "name": "z",
                "type": "Identifier",
              },
              "operator": "+",
              "right": {
                "name": "arr",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
            "type": "SpreadElement",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, ...z = arr, y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "argument": {
              "left": {
                "name": "z",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "name": "arr",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, ...z(), y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "argument": {
              "arguments": [],
              "callee": {
                "name": "z",
                "type": "Identifier",
              },
              "type": "CallExpression",
            },
            "type": "SpreadElement",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, x] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "x",
              "type": "Identifier",
            },
            {
              "name": "x",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, y = 42, z] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "x",
              "type": "Identifier",
            },
            {
              "left": {
                "name": "y",
                "type": "Identifier",
              },
              "right": {
                "type": "Literal",
                "value": 42,
              },
              "type": "AssignmentPattern",
            },
            {
              "name": "z",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, y, ...z + arr] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
          {
            "argument": {
              "left": {
                "name": "z",
                "type": "Identifier",
              },
              "operator": "+",
              "right": {
                "name": "arr",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, y, ...z = 1] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
          {
            "argument": {
              "left": {
                "name": "z",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "type": "Literal",
                "value": 1,
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, y, ...z = arr] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
          {
            "argument": {
              "left": {
                "name": "z",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "name": "arr",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, y, ...z()] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
          {
            "argument": {
              "arguments": [],
              "callee": {
                "name": "z",
                "type": "Identifier",
              },
              "type": "CallExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, y, ...z] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
          {
            "argument": {
              "name": "z",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, y, ...z] 2`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "name": "y",
            "type": "Identifier",
          },
          {
            "argument": {
              "name": "z",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x, y] 1`] = `
{
  "body": [
    {
      "end": 6,
      "expression": {
        "elements": [
          {
            "end": 2,
            "name": "x",
            "range": [
              1,
              2,
            ],
            "start": 1,
            "type": "Identifier",
          },
          {
            "end": 5,
            "name": "y",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
        ],
        "end": 6,
        "range": [
          0,
          6,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        6,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 6,
  "range": [
    0,
    6,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x,,,] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          null,
          null,
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x,,,] 2`] = `
{
  "body": [
    {
      "end": 6,
      "expression": {
        "elements": [
          {
            "end": 2,
            "name": "x",
            "range": [
              1,
              2,
            ],
            "start": 1,
            "type": "Identifier",
          },
          null,
          null,
        ],
        "end": 6,
        "range": [
          0,
          6,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        6,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 6,
  "range": [
    0,
    6,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x,,y] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          null,
          {
            "name": "y",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x,,y] 2`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
          null,
          {
            "name": "y",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x,] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "x",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x,] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x,y,z] = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "name": "x",
              "type": "Identifier",
            },
            {
              "name": "y",
              "type": "Identifier",
            },
            {
              "name": "z",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x.a=a] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "a",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x.y = a + b] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "operator": "+",
                "right": {
                  "name": "b",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x.y = a] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x.y = z] 1`] = `
{
  "body": [
    {
      "end": 9,
      "expression": {
        "elements": [
          {
            "end": 8,
            "left": {
              "computed": false,
              "end": 4,
              "object": {
                "end": 2,
                "name": "x",
                "range": [
                  1,
                  2,
                ],
                "start": 1,
                "type": "Identifier",
              },
              "property": {
                "end": 4,
                "name": "y",
                "range": [
                  3,
                  4,
                ],
                "start": 3,
                "type": "Identifier",
              },
              "range": [
                1,
                4,
              ],
              "start": 1,
              "type": "MemberExpression",
            },
            "operator": "=",
            "range": [
              1,
              8,
            ],
            "right": {
              "end": 8,
              "name": "z",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
            "start": 1,
            "type": "AssignmentExpression",
          },
        ],
        "end": 9,
        "range": [
          0,
          9,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        9,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 9,
  "range": [
    0,
    9,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x.y] = z 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "computed": false,
              "object": {
                "name": "x",
                "type": "Identifier",
              },
              "property": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x.y] 1`] = `
{
  "body": [
    {
      "end": 5,
      "expression": {
        "elements": [
          {
            "computed": false,
            "end": 4,
            "object": {
              "end": 2,
              "name": "x",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            "property": {
              "end": 4,
              "name": "y",
              "range": [
                3,
                4,
              ],
              "start": 3,
              "type": "Identifier",
            },
            "range": [
              1,
              4,
            ],
            "start": 1,
            "type": "MemberExpression",
          },
        ],
        "end": 5,
        "range": [
          0,
          5,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        5,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 5,
  "range": [
    0,
    5,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x[a]=a] = 0 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "left": {
                "computed": true,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "a",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "right": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": 0,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [x] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > [z++] 1`] = `
{
  "body": [
    {
      "end": 5,
      "expression": {
        "elements": [
          {
            "argument": {
              "end": 2,
              "name": "z",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            "end": 4,
            "operator": "++",
            "prefix": false,
            "range": [
              1,
              4,
            ],
            "start": 1,
            "type": "UpdateExpression",
          },
        ],
        "end": 5,
        "range": [
          0,
          5,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        5,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 5,
  "range": [
    0,
    5,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [ a = x += 1, b = x *= 2 ] = []; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "right": {
                  "left": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "operator": "+=",
                  "right": {
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "AssignmentExpression",
                },
                "type": "AssignmentPattern",
              },
              {
                "left": {
                  "name": "b",
                  "type": "Identifier",
                },
                "right": {
                  "left": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "operator": "*=",
                  "right": {
                    "type": "Literal",
                    "value": 2,
                  },
                  "type": "AssignmentExpression",
                },
                "type": "AssignmentPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [ a = x += 1, b = x *= 2 ] = value; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "right": {
                  "left": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "operator": "+=",
                  "right": {
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "AssignmentExpression",
                },
                "type": "AssignmentPattern",
              },
              {
                "left": {
                  "name": "b",
                  "type": "Identifier",
                },
                "right": {
                  "left": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "operator": "*=",
                  "right": {
                    "type": "Literal",
                    "value": 2,
                  },
                  "type": "AssignmentExpression",
                },
                "type": "AssignmentPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "name": "value",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [ x = flag = true ] = []; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "left": {
                  "name": "x",
                  "type": "Identifier",
                },
                "right": {
                  "left": {
                    "name": "flag",
                    "type": "Identifier",
                  },
                  "operator": "=",
                  "right": {
                    "type": "Literal",
                    "value": true,
                  },
                  "type": "AssignmentExpression",
                },
                "type": "AssignmentPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [ x = yield ] = []; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "left": {
                  "name": "x",
                  "type": "Identifier",
                },
                "right": {
                  "name": "yield",
                  "type": "Identifier",
                },
                "type": "AssignmentPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [ x[yield] ] = [33]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "computed": true,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "yield",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 33,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [...[x, y]] = [null]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "argument": {
                  "elements": [
                    {
                      "name": "x",
                      "type": "Identifier",
                    },
                    {
                      "name": "y",
                      "type": "Identifier",
                    },
                  ],
                  "type": "ArrayPattern",
                },
                "type": "RestElement",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": null,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [...[x[yield]]] = [2018]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "argument": {
                  "elements": [
                    {
                      "computed": true,
                      "object": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "property": {
                        "name": "yield",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                  ],
                  "type": "ArrayPattern",
                },
                "type": "RestElement",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 2018,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [...[x]] = [ , ]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "argument": {
                  "elements": [
                    {
                      "name": "x",
                      "type": "Identifier",
                    },
                  ],
                  "type": "ArrayPattern",
                },
                "type": "RestElement",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              null,
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [...{ 0: x, length }] = [undefined]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "argument": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false,
                      "type": "Property",
                      "value": {
                        "name": "x",
                        "type": "Identifier",
                      },
                    },
                    {
                      "computed": false,
                      "key": {
                        "name": "length",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true,
                      "type": "Property",
                      "value": {
                        "name": "length",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
                "type": "RestElement",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "name": "undefined",
                "type": "Identifier",
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [...{ 0: x, length }] = value; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "argument": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false,
                      "type": "Property",
                      "value": {
                        "name": "x",
                        "type": "Identifier",
                      },
                    },
                    {
                      "computed": false,
                      "key": {
                        "name": "length",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true,
                      "type": "Property",
                      "value": {
                        "name": "length",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
                "type": "RestElement",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "name": "value",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [...{ 1: x }] = [1, 2, 3]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "argument": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "type": "Literal",
                        "value": 1,
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false,
                      "type": "Property",
                      "value": {
                        "name": "x",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
                "type": "RestElement",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 1,
              },
              {
                "type": "Literal",
                "value": 2,
              },
              {
                "type": "Literal",
                "value": 3,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [...x.y] = [4, 3, 2]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "argument": {
                  "computed": false,
                  "object": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "property": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
                "type": "RestElement",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 4,
              },
              {
                "type": "Literal",
                "value": 3,
              },
              {
                "type": "Literal",
                "value": 2,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [[x[yield]]] = 123; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "elements": [
                  {
                    "computed": true,
                    "object": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "property": {
                      "name": "yield",
                      "type": "Identifier",
                    },
                    "type": "MemberExpression",
                  },
                ],
                "type": "ArrayPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "type": "Literal",
            "value": 123,
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [{ x = yield }] = value; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "right": {
                        "name": "yield",
                        "type": "Identifier",
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "name": "value",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [{ x }] =  [{ x: 2 }]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "name": "x",
                      "type": "Identifier",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "type": "Literal",
                      "value": 2,
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [arguments = 4, eval = 5] = value; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "left": {
                  "name": "arguments",
                  "type": "Identifier",
                },
                "right": {
                  "type": "Literal",
                  "value": 4,
                },
                "type": "AssignmentPattern",
              },
              {
                "left": {
                  "name": "eval",
                  "type": "Identifier",
                },
                "right": {
                  "type": "Literal",
                  "value": 5,
                },
                "type": "AssignmentPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "name": "value",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [x.y] = [123]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 123,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > a = [x.y] = value; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "name": "value",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > array[1] === 2 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "computed": true,
          "object": {
            "name": "array",
            "type": "Identifier",
          },
          "property": {
            "type": "Literal",
            "value": 1,
          },
          "type": "MemberExpression",
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "value": 2,
        },
        "type": "BinaryExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > foo([a, b] = arr); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "elements": [
                {
                  "name": "a",
                  "type": "Identifier",
                },
                {
                  "name": "b",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
            "operator": "=",
            "right": {
              "name": "arr",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "foo",
          "type": "Identifier",
        },
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > for([a,b[a],{c,d=e,[f]:[g,h().a,(0).k,...i[0]]}] in 0); 1`] = `
{
  "body": [
    {
      "body": {
        "type": "EmptyStatement",
      },
      "left": {
        "elements": [
          {
            "name": "a",
            "type": "Identifier",
          },
          {
            "computed": true,
            "object": {
              "name": "b",
              "type": "Identifier",
            },
            "property": {
              "name": "a",
              "type": "Identifier",
            },
            "type": "MemberExpression",
          },
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "c",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "c",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "d",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "left": {
                    "name": "d",
                    "type": "Identifier",
                  },
                  "right": {
                    "name": "e",
                    "type": "Identifier",
                  },
                  "type": "AssignmentPattern",
                },
              },
              {
                "computed": true,
                "key": {
                  "name": "f",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "elements": [
                    {
                      "name": "g",
                      "type": "Identifier",
                    },
                    {
                      "computed": false,
                      "object": {
                        "arguments": [],
                        "callee": {
                          "name": "h",
                          "type": "Identifier",
                        },
                        "type": "CallExpression",
                      },
                      "property": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    {
                      "computed": false,
                      "object": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "property": {
                        "name": "k",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    {
                      "argument": {
                        "computed": true,
                        "object": {
                          "name": "i",
                          "type": "Identifier",
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "MemberExpression",
                      },
                      "type": "RestElement",
                    },
                  ],
                  "type": "ArrayPattern",
                },
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrayPattern",
      },
      "right": {
        "type": "Literal",
        "value": 0,
      },
      "type": "ForInStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function *f(){ return [...yield x]; } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "argument": {
              "elements": [
                {
                  "argument": {
                    "argument": {
                      "end": 33,
                      "name": "x",
                      "range": [
                        32,
                        33,
                      ],
                      "start": 32,
                      "type": "Identifier",
                    },
                    "delegate": false,
                    "end": 33,
                    "range": [
                      26,
                      33,
                    ],
                    "start": 26,
                    "type": "YieldExpression",
                  },
                  "end": 33,
                  "range": [
                    23,
                    33,
                  ],
                  "start": 23,
                  "type": "SpreadElement",
                },
              ],
              "end": 34,
              "range": [
                22,
                34,
              ],
              "start": 22,
              "type": "ArrayExpression",
            },
            "end": 35,
            "range": [
              15,
              35,
            ],
            "start": 15,
            "type": "ReturnStatement",
          },
        ],
        "end": 37,
        "range": [
          13,
          37,
        ],
        "start": 13,
        "type": "BlockStatement",
      },
      "end": 37,
      "generator": true,
      "id": {
        "end": 11,
        "name": "f",
        "range": [
          10,
          11,
        ],
        "start": 10,
        "type": "Identifier",
      },
      "params": [],
      "range": [
        0,
        37,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 37,
  "range": [
    0,
    37,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function *f(){ return [...yield]; } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "argument": {
              "elements": [
                {
                  "argument": {
                    "argument": null,
                    "delegate": false,
                    "end": 31,
                    "range": [
                      26,
                      31,
                    ],
                    "start": 26,
                    "type": "YieldExpression",
                  },
                  "end": 31,
                  "range": [
                    23,
                    31,
                  ],
                  "start": 23,
                  "type": "SpreadElement",
                },
              ],
              "end": 32,
              "range": [
                22,
                32,
              ],
              "start": 22,
              "type": "ArrayExpression",
            },
            "end": 33,
            "range": [
              15,
              33,
            ],
            "start": 15,
            "type": "ReturnStatement",
          },
        ],
        "end": 35,
        "range": [
          13,
          35,
        ],
        "start": 13,
        "type": "BlockStatement",
      },
      "end": 35,
      "generator": true,
      "id": {
        "end": 11,
        "name": "f",
        "range": [
          10,
          11,
        ],
        "start": 10,
        "type": "Identifier",
      },
      "params": [],
      "range": [
        0,
        35,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 35,
  "range": [
    0,
    35,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function a([x, , [, z]]) {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "a",
        "type": "Identifier",
      },
      "params": [
        {
          "elements": [
            {
              "name": "x",
              "type": "Identifier",
            },
            null,
            {
              "elements": [
                null,
                {
                  "name": "z",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function f([...[{a = 0}]]) {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "f",
        "type": "Identifier",
      },
      "params": [
        {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "properties": [
                      {
                        "computed": false,
                        "key": {
                          "name": "a",
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": true,
                        "type": "Property",
                        "value": {
                          "left": {
                            "name": "a",
                            "type": "Identifier",
                          },
                          "right": {
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "AssignmentPattern",
                        },
                      },
                    ],
                    "type": "ObjectPattern",
                  },
                ],
                "type": "ArrayPattern",
              },
              "type": "RestElement",
            },
          ],
          "type": "ArrayPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function f1({a} = {a:1}, b, [c] = [2]) {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "f1",
        "type": "Identifier",
      },
      "params": [
        {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "a",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "right": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "type": "Literal",
                  "value": 1,
                },
              },
            ],
            "type": "ObjectExpression",
          },
          "type": "AssignmentPattern",
        },
        {
          "name": "b",
          "type": "Identifier",
        },
        {
          "left": {
            "elements": [
              {
                "name": "c",
                "type": "Identifier",
              },
            ],
            "type": "ArrayPattern",
          },
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 2,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function foo([{y1:y1 = 1} = {y1:2}] = [{y1:3}]) {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "foo",
        "type": "Identifier",
      },
      "params": [
        {
          "left": {
            "elements": [
              {
                "left": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "y1",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false,
                      "type": "Property",
                      "value": {
                        "left": {
                          "name": "y1",
                          "type": "Identifier",
                        },
                        "right": {
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "AssignmentPattern",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
                "right": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "y1",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false,
                      "type": "Property",
                      "value": {
                        "type": "Literal",
                        "value": 2,
                      },
                    },
                  ],
                  "type": "ObjectExpression",
                },
                "type": "AssignmentPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "right": {
            "elements": [
              {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "y1",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "type": "Literal",
                      "value": 3,
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function foo([x = 1] = [2]) {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "foo",
        "type": "Identifier",
      },
      "params": [
        {
          "left": {
            "elements": [
              {
                "left": {
                  "name": "x",
                  "type": "Identifier",
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                },
                "type": "AssignmentPattern",
              },
            ],
            "type": "ArrayPattern",
          },
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 2,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function foo([x] = [1]) {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "foo",
        "type": "Identifier",
      },
      "params": [
        {
          "left": {
            "elements": [
              {
                "name": "x",
                "type": "Identifier",
              },
            ],
            "type": "ArrayPattern",
          },
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 1,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function x([ a, b ]){} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "x",
        "type": "Identifier",
      },
      "params": [
        {
          "elements": [
            {
              "name": "a",
              "type": "Identifier",
            },
            {
              "name": "b",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > function* g() {   [...{ x = yield }] = y   } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "expression": {
              "left": {
                "elements": [
                  {
                    "argument": {
                      "properties": [
                        {
                          "computed": false,
                          "key": {
                            "name": "x",
                            "type": "Identifier",
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": true,
                          "type": "Property",
                          "value": {
                            "left": {
                              "name": "x",
                              "type": "Identifier",
                            },
                            "right": {
                              "argument": null,
                              "delegate": false,
                              "type": "YieldExpression",
                            },
                            "type": "AssignmentPattern",
                          },
                        },
                      ],
                      "type": "ObjectPattern",
                    },
                    "type": "RestElement",
                  },
                ],
                "type": "ArrayPattern",
              },
              "operator": "=",
              "right": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "ExpressionStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "generator": true,
      "id": {
        "name": "g",
        "type": "Identifier",
      },
      "params": [],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > h = ([...[{a = 0}]]) => {}; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "h",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "async": false,
          "body": {
            "body": [],
            "type": "BlockStatement",
          },
          "expression": false,
          "generator": false,
          "params": [
            {
              "elements": [
                {
                  "argument": {
                    "elements": [
                      {
                        "properties": [
                          {
                            "computed": false,
                            "key": {
                              "name": "a",
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": true,
                            "type": "Property",
                            "value": {
                              "left": {
                                "name": "a",
                                "type": "Identifier",
                              },
                              "right": {
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "AssignmentPattern",
                            },
                          },
                        ],
                        "type": "ObjectPattern",
                      },
                    ],
                    "type": "ArrayPattern",
                  },
                  "type": "RestElement",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > log({foo: [bar]} = obj); 1`] = `
{
  "body": [
    {
      "end": 24,
      "expression": {
        "arguments": [
          {
            "end": 22,
            "left": {
              "end": 16,
              "properties": [
                {
                  "computed": false,
                  "end": 15,
                  "key": {
                    "end": 8,
                    "name": "foo",
                    "range": [
                      5,
                      8,
                    ],
                    "start": 5,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    5,
                    15,
                  ],
                  "shorthand": false,
                  "start": 5,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 14,
                        "name": "bar",
                        "range": [
                          11,
                          14,
                        ],
                        "start": 11,
                        "type": "Identifier",
                      },
                    ],
                    "end": 15,
                    "range": [
                      10,
                      15,
                    ],
                    "start": 10,
                    "type": "ArrayPattern",
                  },
                },
              ],
              "range": [
                4,
                16,
              ],
              "start": 4,
              "type": "ObjectPattern",
            },
            "operator": "=",
            "range": [
              4,
              22,
            ],
            "right": {
              "end": 22,
              "name": "obj",
              "range": [
                19,
                22,
              ],
              "start": 19,
              "type": "Identifier",
            },
            "start": 4,
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "end": 3,
          "name": "log",
          "range": [
            0,
            3,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "end": 23,
        "range": [
          0,
          23,
        ],
        "start": 0,
        "type": "CallExpression",
      },
      "range": [
        0,
        24,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 24,
  "range": [
    0,
    24,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > log({foo: [bar]}); 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "arguments": [
          {
            "end": 16,
            "properties": [
              {
                "computed": false,
                "end": 15,
                "key": {
                  "end": 8,
                  "name": "foo",
                  "range": [
                    5,
                    8,
                  ],
                  "start": 5,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  5,
                  15,
                ],
                "shorthand": false,
                "start": 5,
                "type": "Property",
                "value": {
                  "elements": [
                    {
                      "end": 14,
                      "name": "bar",
                      "range": [
                        11,
                        14,
                      ],
                      "start": 11,
                      "type": "Identifier",
                    },
                  ],
                  "end": 15,
                  "range": [
                    10,
                    15,
                  ],
                  "start": 10,
                  "type": "ArrayExpression",
                },
              },
            ],
            "range": [
              4,
              16,
            ],
            "start": 4,
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "end": 3,
          "name": "log",
          "range": [
            0,
            3,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "end": 17,
        "range": [
          0,
          17,
        ],
        "start": 0,
        "type": "CallExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > result = [, x, , y, ,] = [1, 2, 3, 4, 5, 6]; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "result",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              null,
              {
                "name": "x",
                "type": "Identifier",
              },
              null,
              {
                "name": "y",
                "type": "Identifier",
              },
              null,
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "elements": [
              {
                "type": "Literal",
                "value": 1,
              },
              {
                "type": "Literal",
                "value": 2,
              },
              {
                "type": "Literal",
                "value": 3,
              },
              {
                "type": "Literal",
                "value": 4,
              },
              {
                "type": "Literal",
                "value": 5,
              },
              {
                "type": "Literal",
                "value": 6,
              },
            ],
            "type": "ArrayExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > result = [...{ x = yield }] = y; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "result",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "argument": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true,
                      "type": "Property",
                      "value": {
                        "left": {
                          "name": "x",
                          "type": "Identifier",
                        },
                        "right": {
                          "name": "yield",
                          "type": "Identifier",
                        },
                        "type": "AssignmentPattern",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
                "type": "RestElement",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "name": "y",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > x = [a, b] = y 1`] = `
{
  "body": [
    {
      "end": 14,
      "expression": {
        "end": 14,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          14,
        ],
        "right": {
          "end": 14,
          "left": {
            "elements": [
              {
                "end": 6,
                "name": "a",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              {
                "end": 9,
                "name": "b",
                "range": [
                  8,
                  9,
                ],
                "start": 8,
                "type": "Identifier",
              },
            ],
            "end": 10,
            "range": [
              4,
              10,
            ],
            "start": 4,
            "type": "ArrayPattern",
          },
          "operator": "=",
          "range": [
            4,
            14,
          ],
          "right": {
            "end": 14,
            "name": "y",
            "range": [
              13,
              14,
            ],
            "start": 13,
            "type": "Identifier",
          },
          "start": 4,
          "type": "AssignmentExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > x, [foo = y, bar] = doo 1`] = `
{
  "body": [
    {
      "expression": {
        "expressions": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "left": {
              "elements": [
                {
                  "left": {
                    "name": "foo",
                    "type": "Identifier",
                  },
                  "right": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "type": "AssignmentPattern",
                },
                {
                  "name": "bar",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
            "operator": "=",
            "right": {
              "name": "doo",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "SequenceExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > x, [foo = y, bar] = doo 2`] = `
{
  "body": [
    {
      "end": 23,
      "expression": {
        "end": 23,
        "expressions": [
          {
            "end": 1,
            "name": "x",
            "range": [
              0,
              1,
            ],
            "start": 0,
            "type": "Identifier",
          },
          {
            "end": 23,
            "left": {
              "elements": [
                {
                  "end": 11,
                  "left": {
                    "end": 7,
                    "name": "foo",
                    "range": [
                      4,
                      7,
                    ],
                    "start": 4,
                    "type": "Identifier",
                  },
                  "range": [
                    4,
                    11,
                  ],
                  "right": {
                    "end": 11,
                    "name": "y",
                    "range": [
                      10,
                      11,
                    ],
                    "start": 10,
                    "type": "Identifier",
                  },
                  "start": 4,
                  "type": "AssignmentPattern",
                },
                {
                  "end": 16,
                  "name": "bar",
                  "range": [
                    13,
                    16,
                  ],
                  "start": 13,
                  "type": "Identifier",
                },
              ],
              "end": 17,
              "range": [
                3,
                17,
              ],
              "start": 3,
              "type": "ArrayPattern",
            },
            "operator": "=",
            "range": [
              3,
              23,
            ],
            "right": {
              "end": 23,
              "name": "doo",
              "range": [
                20,
                23,
              ],
              "start": 20,
              "type": "Identifier",
            },
            "start": 3,
            "type": "AssignmentExpression",
          },
        ],
        "range": [
          0,
          23,
        ],
        "start": 0,
        "type": "SequenceExpression",
      },
      "range": [
        0,
        23,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 23,
  "range": [
    0,
    23,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > x, [foo, bar] = doo 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "end": 19,
        "expressions": [
          {
            "end": 1,
            "name": "x",
            "range": [
              0,
              1,
            ],
            "start": 0,
            "type": "Identifier",
          },
          {
            "end": 19,
            "left": {
              "elements": [
                {
                  "end": 7,
                  "name": "foo",
                  "range": [
                    4,
                    7,
                  ],
                  "start": 4,
                  "type": "Identifier",
                },
                {
                  "end": 12,
                  "name": "bar",
                  "range": [
                    9,
                    12,
                  ],
                  "start": 9,
                  "type": "Identifier",
                },
              ],
              "end": 13,
              "range": [
                3,
                13,
              ],
              "start": 3,
              "type": "ArrayPattern",
            },
            "operator": "=",
            "range": [
              3,
              19,
            ],
            "right": {
              "end": 19,
              "name": "doo",
              "range": [
                16,
                19,
              ],
              "start": 16,
              "type": "Identifier",
            },
            "start": 3,
            "type": "AssignmentExpression",
          },
        ],
        "range": [
          0,
          19,
        ],
        "start": 0,
        "type": "SequenceExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > x, [foo, bar] = doo; 1`] = `
{
  "body": [
    {
      "expression": {
        "expressions": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "left": {
              "elements": [
                {
                  "name": "foo",
                  "type": "Identifier",
                },
                {
                  "name": "bar",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
            "operator": "=",
            "right": {
              "name": "doo",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "SequenceExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Array > Expressions - Array (pass) > x; [{ x = 10 } = {}] 1`] = `
{
  "body": [
    {
      "expression": {
        "name": "x",
        "type": "Identifier",
      },
      "type": "ExpressionStatement",
    },
    {
      "expression": {
        "elements": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": 10,
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "properties": [],
              "type": "ObjectExpression",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;
