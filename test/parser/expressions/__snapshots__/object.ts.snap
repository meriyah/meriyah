// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Expressions - Object > Expressions - Object (pass) > (({a = 0} = {}) => a)({}) 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "async": false,
          "body": {
            "name": "a",
            "type": "Identifier",
          },
          "expression": true,
          "generator": false,
          "params": [
            {
              "left": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "right": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > (({a = 0} = {}) => a)({a: 1}) 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "type": "Literal",
                  "value": 1,
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "async": false,
          "body": {
            "name": "a",
            "type": "Identifier",
          },
          "expression": true,
          "generator": false,
          "params": [
            {
              "left": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "right": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "right": {
                "properties": [],
                "type": "ObjectExpression",
              },
              "type": "AssignmentPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > (({a = 0}) => a) 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "name": "a",
          "type": "Identifier",
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "left": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "right": {
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "AssignmentPattern",
                },
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ([[ x ]] = [undefined]= {}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrayPattern",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "name": "undefined",
                "type": "Identifier",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "properties": [],
            "type": "ObjectExpression",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({
        把你想在页面内共享的变量写在这里喔 : 1,
        这是你刚选择的事件: function (e){
          //当按钮被长按时...
        }
        }); 1`] = `
{
  "body": [
    {
      "end": 111,
      "expression": {
        "end": 109,
        "properties": [
          {
            "computed": false,
            "end": 32,
            "key": {
              "end": 28,
              "name": "把你想在页面内共享的变量写在这里喔",
              "range": [
                11,
                28,
              ],
              "start": 11,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              11,
              32,
            ],
            "shorthand": false,
            "start": 11,
            "type": "Property",
            "value": {
              "end": 32,
              "range": [
                31,
                32,
              ],
              "start": 31,
              "type": "Literal",
              "value": 1,
            },
          },
          {
            "computed": false,
            "end": 99,
            "key": {
              "end": 51,
              "name": "这是你刚选择的事件",
              "range": [
                42,
                51,
              ],
              "start": 42,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              42,
              99,
            ],
            "shorthand": false,
            "start": 42,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 99,
                "range": [
                  65,
                  99,
                ],
                "start": 65,
                "type": "BlockStatement",
              },
              "end": 99,
              "generator": false,
              "id": null,
              "params": [
                {
                  "end": 64,
                  "name": "e",
                  "range": [
                    63,
                    64,
                  ],
                  "start": 63,
                  "type": "Identifier",
                },
              ],
              "range": [
                53,
                99,
              ],
              "start": 53,
              "type": "FunctionExpression",
            },
          },
        ],
        "range": [
          1,
          109,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        111,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 111,
  "range": [
    0,
    111,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ [a]: {} [a] }) 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "end": 16,
        "properties": [
          {
            "computed": true,
            "end": 14,
            "key": {
              "end": 5,
              "name": "a",
              "range": [
                4,
                5,
              ],
              "start": 4,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              3,
              14,
            ],
            "shorthand": false,
            "start": 3,
            "type": "Property",
            "value": {
              "computed": true,
              "end": 14,
              "object": {
                "end": 10,
                "properties": [],
                "range": [
                  8,
                  10,
                ],
                "start": 8,
                "type": "ObjectExpression",
              },
              "optional": false,
              "property": {
                "end": 13,
                "name": "a",
                "range": [
                  12,
                  13,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "range": [
                8,
                14,
              ],
              "start": 8,
              "type": "MemberExpression",
            },
          },
        ],
        "range": [
          1,
          16,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ async *foo() {} }) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ enum: 0 }) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "enum",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 0,
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ set a([{b = 0}]){}, }) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "elements": [
                    {
                      "properties": [
                        {
                          "computed": false,
                          "key": {
                            "name": "b",
                            "type": "Identifier",
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": true,
                          "type": "Property",
                          "value": {
                            "left": {
                              "name": "b",
                              "type": "Identifier",
                            },
                            "right": {
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "AssignmentPattern",
                          },
                        },
                      ],
                      "type": "ObjectPattern",
                    },
                  ],
                  "type": "ArrayPattern",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ x, ...{y , z} }) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "x",
              "type": "Identifier",
            },
          },
          {
            "argument": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "y",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "z",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "z",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ x: x[Y] } = x); 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "end": 16,
        "left": {
          "end": 12,
          "properties": [
            {
              "computed": false,
              "end": 10,
              "key": {
                "end": 4,
                "name": "x",
                "range": [
                  3,
                  4,
                ],
                "start": 3,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                3,
                10,
              ],
              "shorthand": false,
              "start": 3,
              "type": "Property",
              "value": {
                "computed": true,
                "end": 10,
                "object": {
                  "end": 7,
                  "name": "x",
                  "range": [
                    6,
                    7,
                  ],
                  "start": 6,
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "end": 9,
                  "name": "Y",
                  "range": [
                    8,
                    9,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
                "range": [
                  6,
                  10,
                ],
                "start": 6,
                "type": "MemberExpression",
              },
            },
          ],
          "range": [
            1,
            12,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          16,
        ],
        "right": {
          "end": 16,
          "name": "x",
          "range": [
            15,
            16,
          ],
          "start": 15,
          "type": "Identifier",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"a":b}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "obj",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"foo"(){}}) 1`] = `
{
  "body": [
    {
      "end": 13,
      "expression": {
        "end": 12,
        "properties": [
          {
            "computed": false,
            "end": 11,
            "key": {
              "end": 7,
              "range": [
                2,
                7,
              ],
              "start": 2,
              "type": "Literal",
              "value": "foo",
            },
            "kind": "init",
            "method": true,
            "range": [
              2,
              11,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 11,
                "range": [
                  9,
                  11,
                ],
                "start": 9,
                "type": "BlockStatement",
              },
              "end": 11,
              "generator": false,
              "id": null,
              "params": [],
              "range": [
                7,
                11,
              ],
              "start": 7,
              "type": "FunctionExpression",
            },
          },
        ],
        "range": [
          1,
          12,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        13,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 13,
  "range": [
    0,
    13,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"foo": [x].foo}=y) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "elements": [
                    {
                      "name": "x",
                      "type": "Identifier",
                    },
                  ],
                  "type": "ArrayExpression",
                },
                "optional": false,
                "property": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"foo": {x}.foo}=y) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true,
                      "type": "Property",
                      "value": {
                        "name": "x",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectExpression",
                },
                "optional": false,
                "property": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"foo": 15..foo}=y) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "type": "Literal",
                  "value": 15,
                },
                "optional": false,
                "property": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": [y + x]}) 1`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 15,
        "properties": [
          {
            "computed": false,
            "end": 14,
            "key": {
              "end": 5,
              "range": [
                2,
                5,
              ],
              "start": 2,
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              14,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "elements": [
                {
                  "end": 13,
                  "left": {
                    "end": 9,
                    "name": "y",
                    "range": [
                      8,
                      9,
                    ],
                    "start": 8,
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "range": [
                    8,
                    13,
                  ],
                  "right": {
                    "end": 13,
                    "name": "x",
                    "range": [
                      12,
                      13,
                    ],
                    "start": 12,
                    "type": "Identifier",
                  },
                  "start": 8,
                  "type": "BinaryExpression",
                },
              ],
              "end": 14,
              "range": [
                7,
                14,
              ],
              "start": 7,
              "type": "ArrayExpression",
            },
          },
        ],
        "range": [
          1,
          15,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": [y].slice(0)}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "arguments": [
                {
                  "type": "Literal",
                  "value": 0,
                },
              ],
              "callee": {
                "computed": false,
                "object": {
                  "elements": [
                    {
                      "name": "y",
                      "type": "Identifier",
                    },
                  ],
                  "type": "ArrayExpression",
                },
                "optional": false,
                "property": {
                  "name": "slice",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "optional": false,
              "type": "CallExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": [y]} = x) 1`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 15,
        "left": {
          "end": 11,
          "properties": [
            {
              "computed": false,
              "end": 10,
              "key": {
                "end": 5,
                "range": [
                  2,
                  5,
                ],
                "start": 2,
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                10,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "elements": [
                  {
                    "end": 9,
                    "name": "y",
                    "range": [
                      8,
                      9,
                    ],
                    "start": 8,
                    "type": "Identifier",
                  },
                ],
                "end": 10,
                "range": [
                  7,
                  10,
                ],
                "start": 7,
                "type": "ArrayPattern",
              },
            },
          ],
          "range": [
            1,
            11,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          15,
        ],
        "right": {
          "end": 15,
          "name": "x",
          "range": [
            14,
            15,
          ],
          "start": 14,
          "type": "Identifier",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": [y]} = x) 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "elements": [
                  {
                    "name": "y",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrayPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": [y]}) => x 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "name": "x",
          "type": "Identifier",
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "x",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "elements": [
                    {
                      "name": "y",
                      "type": "Identifier",
                    },
                  ],
                  "type": "ArrayPattern",
                },
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": [y]}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "elements": [
                {
                  "name": "y",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": {a: y + x}.slice(0)}) 1`] = `
{
  "body": [
    {
      "end": 28,
      "expression": {
        "end": 27,
        "properties": [
          {
            "computed": false,
            "end": 26,
            "key": {
              "end": 5,
              "range": [
                2,
                5,
              ],
              "start": 2,
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              26,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "arguments": [
                {
                  "end": 25,
                  "range": [
                    24,
                    25,
                  ],
                  "start": 24,
                  "type": "Literal",
                  "value": 0,
                },
              ],
              "callee": {
                "computed": false,
                "end": 23,
                "object": {
                  "end": 17,
                  "properties": [
                    {
                      "computed": false,
                      "end": 16,
                      "key": {
                        "end": 9,
                        "name": "a",
                        "range": [
                          8,
                          9,
                        ],
                        "start": 8,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        8,
                        16,
                      ],
                      "shorthand": false,
                      "start": 8,
                      "type": "Property",
                      "value": {
                        "end": 16,
                        "left": {
                          "end": 12,
                          "name": "y",
                          "range": [
                            11,
                            12,
                          ],
                          "start": 11,
                          "type": "Identifier",
                        },
                        "operator": "+",
                        "range": [
                          11,
                          16,
                        ],
                        "right": {
                          "end": 16,
                          "name": "x",
                          "range": [
                            15,
                            16,
                          ],
                          "start": 15,
                          "type": "Identifier",
                        },
                        "start": 11,
                        "type": "BinaryExpression",
                      },
                    },
                  ],
                  "range": [
                    7,
                    17,
                  ],
                  "start": 7,
                  "type": "ObjectExpression",
                },
                "optional": false,
                "property": {
                  "end": 23,
                  "name": "slice",
                  "range": [
                    18,
                    23,
                  ],
                  "start": 18,
                  "type": "Identifier",
                },
                "range": [
                  7,
                  23,
                ],
                "start": 7,
                "type": "MemberExpression",
              },
              "end": 26,
              "optional": false,
              "range": [
                7,
                26,
              ],
              "start": 7,
              "type": "CallExpression",
            },
          },
        ],
        "range": [
          1,
          27,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        28,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 28,
  "range": [
    0,
    28,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": {a: y + x}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "y",
                      "type": "Identifier",
                    },
                    "operator": "+",
                    "right": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "type": "BinaryExpression",
                  },
                },
              ],
              "type": "ObjectExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": {y: z}} = x) 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "end": 18,
        "left": {
          "end": 14,
          "properties": [
            {
              "computed": false,
              "end": 13,
              "key": {
                "end": 5,
                "range": [
                  2,
                  5,
                ],
                "start": 2,
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                13,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 13,
                "properties": [
                  {
                    "computed": false,
                    "end": 12,
                    "key": {
                      "end": 9,
                      "name": "y",
                      "range": [
                        8,
                        9,
                      ],
                      "start": 8,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      8,
                      12,
                    ],
                    "shorthand": false,
                    "start": 8,
                    "type": "Property",
                    "value": {
                      "end": 12,
                      "name": "z",
                      "range": [
                        11,
                        12,
                      ],
                      "start": 11,
                      "type": "Identifier",
                    },
                  },
                ],
                "range": [
                  7,
                  13,
                ],
                "start": 7,
                "type": "ObjectPattern",
              },
            },
          ],
          "range": [
            1,
            14,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          18,
        ],
        "right": {
          "end": 18,
          "name": "x",
          "range": [
            17,
            18,
          ],
          "start": 17,
          "type": "Identifier",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": {y: z}}) => x 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "name": "x",
          "type": "Identifier",
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "x",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "y",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false,
                      "type": "Property",
                      "value": {
                        "name": "z",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": {y: z}}) => x 2`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "name": "x",
          "type": "Identifier",
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "x",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "y",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false,
                      "type": "Property",
                      "value": {
                        "name": "z",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": {y: z}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "z",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": 600..xyz} = x) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "type": "Literal",
                  "value": 600,
                },
                "optional": false,
                "property": {
                  "name": "xyz",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": 600..xyz}) 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "end": 16,
        "properties": [
          {
            "computed": false,
            "end": 15,
            "key": {
              "end": 5,
              "range": [
                2,
                5,
              ],
              "start": 2,
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              15,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "computed": false,
              "end": 15,
              "object": {
                "end": 11,
                "range": [
                  7,
                  11,
                ],
                "start": 7,
                "type": "Literal",
                "value": 600,
              },
              "optional": false,
              "property": {
                "end": 15,
                "name": "xyz",
                "range": [
                  12,
                  15,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "range": [
                7,
                15,
              ],
              "start": 7,
              "type": "MemberExpression",
            },
          },
        ],
        "range": [
          1,
          16,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": 600}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 600,
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({"x": y+z}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "x",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "left": {
                "name": "y",
                "type": "Identifier",
              },
              "operator": "+",
              "right": {
                "name": "z",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({*async(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "async",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({*get(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "get",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({*ident(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "ident",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({*set(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "set",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({*typeof(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "typeof",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...(a,b),c}) 1`] = `
{
  "body": [
    {
      "end": 14,
      "expression": {
        "end": 13,
        "properties": [
          {
            "argument": {
              "end": 9,
              "expressions": [
                {
                  "end": 7,
                  "name": "a",
                  "range": [
                    6,
                    7,
                  ],
                  "start": 6,
                  "type": "Identifier",
                },
                {
                  "end": 9,
                  "name": "b",
                  "range": [
                    8,
                    9,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
              ],
              "range": [
                6,
                9,
              ],
              "start": 6,
              "type": "SequenceExpression",
            },
            "end": 10,
            "range": [
              2,
              10,
            ],
            "start": 2,
            "type": "SpreadElement",
          },
          {
            "computed": false,
            "end": 12,
            "key": {
              "end": 12,
              "name": "c",
              "range": [
                11,
                12,
              ],
              "start": 11,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              11,
              12,
            ],
            "shorthand": true,
            "start": 11,
            "type": "Property",
            "value": {
              "end": 12,
              "name": "c",
              "range": [
                11,
                12,
              ],
              "start": 11,
              "type": "Identifier",
            },
          },
        ],
        "range": [
          1,
          13,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...[a, b]}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "argument": {
              "elements": [
                {
                  "name": "a",
                  "type": "Identifier",
                },
                {
                  "name": "b",
                  "type": "Identifier",
                },
              ],
              "type": "ArrayExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...{a, b}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "argument": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "a",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "b",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "b",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...a+b}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "argument": {
              "left": {
                "name": "a",
                "type": "Identifier",
              },
              "operator": "+",
              "right": {
                "name": "b",
                "type": "Identifier",
              },
              "type": "BinaryExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...a,}); 1`] = `
{
  "body": [
    {
      "end": 10,
      "expression": {
        "end": 8,
        "properties": [
          {
            "argument": {
              "end": 6,
              "name": "a",
              "range": [
                5,
                6,
              ],
              "start": 5,
              "type": "Identifier",
            },
            "end": 6,
            "range": [
              2,
              6,
            ],
            "start": 2,
            "type": "SpreadElement",
          },
        ],
        "range": [
          1,
          8,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        10,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 10,
  "range": [
    0,
    10,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...a,b,c}) 1`] = `
{
  "body": [
    {
      "end": 12,
      "expression": {
        "end": 11,
        "properties": [
          {
            "argument": {
              "end": 6,
              "name": "a",
              "range": [
                5,
                6,
              ],
              "start": 5,
              "type": "Identifier",
            },
            "end": 6,
            "range": [
              2,
              6,
            ],
            "start": 2,
            "type": "SpreadElement",
          },
          {
            "computed": false,
            "end": 8,
            "key": {
              "end": 8,
              "name": "b",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              7,
              8,
            ],
            "shorthand": true,
            "start": 7,
            "type": "Property",
            "value": {
              "end": 8,
              "name": "b",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
          },
          {
            "computed": false,
            "end": 10,
            "key": {
              "end": 10,
              "name": "c",
              "range": [
                9,
                10,
              ],
              "start": 9,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              9,
              10,
            ],
            "shorthand": true,
            "start": 9,
            "type": "Property",
            "value": {
              "end": 10,
              "name": "c",
              "range": [
                9,
                10,
              ],
              "start": 9,
              "type": "Identifier",
            },
          },
        ],
        "range": [
          1,
          11,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...a=b}) 1`] = `
{
  "body": [
    {
      "end": 10,
      "expression": {
        "end": 9,
        "properties": [
          {
            "argument": {
              "end": 8,
              "left": {
                "end": 6,
                "name": "a",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                5,
                8,
              ],
              "right": {
                "end": 8,
                "name": "b",
                "range": [
                  7,
                  8,
                ],
                "start": 7,
                "type": "Identifier",
              },
              "start": 5,
              "type": "AssignmentExpression",
            },
            "end": 8,
            "range": [
              2,
              8,
            ],
            "start": 2,
            "type": "SpreadElement",
          },
        ],
        "range": [
          1,
          9,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        10,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 10,
  "range": [
    0,
    10,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...a}) 1`] = `
{
  "body": [
    {
      "end": 8,
      "expression": {
        "end": 7,
        "properties": [
          {
            "argument": {
              "end": 6,
              "name": "a",
              "range": [
                5,
                6,
              ],
              "start": 5,
              "type": "Identifier",
            },
            "end": 6,
            "range": [
              2,
              6,
            ],
            "start": 2,
            "type": "SpreadElement",
          },
        ],
        "range": [
          1,
          7,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        8,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 8,
  "range": [
    0,
    8,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...obj} = {}) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "expression": false,
        "generator": false,
        "params": [
          {
            "left": {
              "properties": [
                {
                  "argument": {
                    "name": "obj",
                    "type": "Identifier",
                  },
                  "type": "RestElement",
                },
              ],
              "type": "ObjectPattern",
            },
            "right": {
              "properties": [],
              "type": "ObjectExpression",
            },
            "type": "AssignmentPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...obj} = {}) => {} 2`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "expression": false,
        "generator": false,
        "params": [
          {
            "left": {
              "properties": [
                {
                  "argument": {
                    "name": "obj",
                    "type": "Identifier",
                  },
                  "type": "RestElement",
                },
              ],
              "type": "ObjectPattern",
            },
            "right": {
              "properties": [],
              "type": "ObjectExpression",
            },
            "type": "AssignmentPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...obj} = foo) 1`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 15,
        "left": {
          "end": 9,
          "properties": [
            {
              "argument": {
                "end": 8,
                "name": "obj",
                "range": [
                  5,
                  8,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "end": 8,
              "range": [
                2,
                8,
              ],
              "start": 2,
              "type": "RestElement",
            },
          ],
          "range": [
            1,
            9,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          15,
        ],
        "right": {
          "end": 15,
          "name": "foo",
          "range": [
            12,
            15,
          ],
          "start": 12,
          "type": "Identifier",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...obj}) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "expression": false,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "argument": {
                  "name": "obj",
                  "type": "Identifier",
                },
                "type": "RestElement",
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...rest}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "argument": {
              "name": "rest",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...x = y, y}) 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 14,
        "properties": [
          {
            "argument": {
              "end": 10,
              "left": {
                "end": 6,
                "name": "x",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                5,
                10,
              ],
              "right": {
                "end": 10,
                "name": "y",
                "range": [
                  9,
                  10,
                ],
                "start": 9,
                "type": "Identifier",
              },
              "start": 5,
              "type": "AssignmentExpression",
            },
            "end": 10,
            "range": [
              2,
              10,
            ],
            "start": 2,
            "type": "SpreadElement",
          },
          {
            "computed": false,
            "end": 13,
            "key": {
              "end": 13,
              "name": "y",
              "range": [
                12,
                13,
              ],
              "start": 12,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              12,
              13,
            ],
            "shorthand": true,
            "start": 12,
            "type": "Property",
            "value": {
              "end": 13,
              "name": "y",
              "range": [
                12,
                13,
              ],
              "start": 12,
              "type": "Identifier",
            },
          },
        ],
        "range": [
          1,
          14,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...x, y}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "argument": {
              "name": "x",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
          {
            "computed": false,
            "key": {
              "name": "y",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "y",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...x.y} = z) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "argument": {
                "computed": false,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
              "type": "RestElement",
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "z",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...x=y}); 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 9,
        "properties": [
          {
            "argument": {
              "end": 8,
              "left": {
                "end": 6,
                "name": "x",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                5,
                8,
              ],
              "right": {
                "end": 8,
                "name": "y",
                "range": [
                  7,
                  8,
                ],
                "start": 7,
                "type": "Identifier",
              },
              "start": 5,
              "type": "AssignmentExpression",
            },
            "end": 8,
            "range": [
              2,
              8,
            ],
            "start": 2,
            "type": "SpreadElement",
          },
        ],
        "range": [
          1,
          9,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...x[0] }= {}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "argument": {
                "computed": true,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "type": "Literal",
                  "value": 0,
                },
                "type": "MemberExpression",
              },
              "type": "RestElement",
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "properties": [],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...x[0] }= {}); 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "argument": {
                "computed": true,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "type": "Literal",
                  "value": 0,
                },
                "type": "MemberExpression",
              },
              "type": "RestElement",
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "properties": [],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({...x}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "argument": {
              "name": "x",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({[foo()] : (z)} = z = {}); 1`] = `
{
  "body": [
    {
      "end": 27,
      "expression": {
        "end": 25,
        "left": {
          "end": 16,
          "properties": [
            {
              "computed": true,
              "end": 15,
              "key": {
                "arguments": [],
                "callee": {
                  "end": 6,
                  "name": "foo",
                  "range": [
                    3,
                    6,
                  ],
                  "start": 3,
                  "type": "Identifier",
                },
                "end": 8,
                "optional": false,
                "range": [
                  3,
                  8,
                ],
                "start": 3,
                "type": "CallExpression",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                15,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 14,
                "name": "z",
                "range": [
                  13,
                  14,
                ],
                "start": 13,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            1,
            16,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          25,
        ],
        "right": {
          "end": 25,
          "left": {
            "end": 20,
            "name": "z",
            "range": [
              19,
              20,
            ],
            "start": 19,
            "type": "Identifier",
          },
          "operator": "=",
          "range": [
            19,
            25,
          ],
          "right": {
            "end": 25,
            "properties": [],
            "range": [
              23,
              25,
            ],
            "start": 23,
            "type": "ObjectExpression",
          },
          "start": 19,
          "type": "AssignmentExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        27,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 27,
  "range": [
    0,
    27,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({[foo](){}, get [bar](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": true,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({[foo](){}, set [bar](e){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": true,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "e",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({[foo]: x} = x) => y 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "name": "y",
          "type": "Identifier",
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "left": {
              "properties": [
                {
                  "computed": true,
                  "key": {
                    "name": "foo",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "x",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "right": {
              "name": "x",
              "type": "Identifier",
            },
            "type": "AssignmentPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({[foo]: x} = y) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({[sourceKey()]: target()[targetKey()]} = source()); 1`] = `
{
  "body": [
    {
      "end": 52,
      "expression": {
        "end": 50,
        "left": {
          "end": 39,
          "properties": [
            {
              "computed": true,
              "end": 38,
              "key": {
                "arguments": [],
                "callee": {
                  "end": 12,
                  "name": "sourceKey",
                  "range": [
                    3,
                    12,
                  ],
                  "start": 3,
                  "type": "Identifier",
                },
                "end": 14,
                "optional": false,
                "range": [
                  3,
                  14,
                ],
                "start": 3,
                "type": "CallExpression",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                38,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "computed": true,
                "end": 38,
                "object": {
                  "arguments": [],
                  "callee": {
                    "end": 23,
                    "name": "target",
                    "range": [
                      17,
                      23,
                    ],
                    "start": 17,
                    "type": "Identifier",
                  },
                  "end": 25,
                  "optional": false,
                  "range": [
                    17,
                    25,
                  ],
                  "start": 17,
                  "type": "CallExpression",
                },
                "optional": false,
                "property": {
                  "arguments": [],
                  "callee": {
                    "end": 35,
                    "name": "targetKey",
                    "range": [
                      26,
                      35,
                    ],
                    "start": 26,
                    "type": "Identifier",
                  },
                  "end": 37,
                  "optional": false,
                  "range": [
                    26,
                    37,
                  ],
                  "start": 26,
                  "type": "CallExpression",
                },
                "range": [
                  17,
                  38,
                ],
                "start": 17,
                "type": "MemberExpression",
              },
            },
          ],
          "range": [
            1,
            39,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          50,
        ],
        "right": {
          "arguments": [],
          "callee": {
            "end": 48,
            "name": "source",
            "range": [
              42,
              48,
            ],
            "start": 42,
            "type": "Identifier",
          },
          "end": 50,
          "optional": false,
          "range": [
            42,
            50,
          ],
          "start": 42,
          "type": "CallExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        52,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 52,
  "range": [
    0,
    52,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({__proto__: a, __proto__: b} = x) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "__proto__",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "__proto__",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "obj",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({}=x); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({1n:1}) 1`] = `
{
  "body": [
    {
      "end": 8,
      "expression": {
        "end": 7,
        "properties": [
          {
            "computed": false,
            "end": 6,
            "key": {
              "bigint": "1",
              "end": 4,
              "range": [
                2,
                4,
              ],
              "start": 2,
              "type": "Literal",
              "value": 1n,
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              6,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "end": 6,
              "range": [
                5,
                6,
              ],
              "start": 5,
              "type": "Literal",
              "value": 1,
            },
          },
        ],
        "range": [
          1,
          7,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        8,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 8,
  "range": [
    0,
    8,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({5(){}}) 1`] = `
{
  "body": [
    {
      "end": 9,
      "expression": {
        "end": 8,
        "properties": [
          {
            "computed": false,
            "end": 7,
            "key": {
              "end": 3,
              "range": [
                2,
                3,
              ],
              "start": 2,
              "type": "Literal",
              "value": 5,
            },
            "kind": "init",
            "method": true,
            "range": [
              2,
              7,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 7,
                "range": [
                  5,
                  7,
                ],
                "start": 5,
                "type": "BlockStatement",
              },
              "end": 7,
              "generator": false,
              "id": null,
              "params": [],
              "range": [
                3,
                7,
              ],
              "start": 3,
              "type": "FunctionExpression",
            },
          },
        ],
        "range": [
          1,
          8,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        9,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 9,
  "range": [
    0,
    9,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({653: [x].foo}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 653,
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "computed": false,
              "object": {
                "elements": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrayExpression",
              },
              "optional": false,
              "property": {
                "name": "foo",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a(b,...c){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "b",
                  "type": "Identifier",
                },
                {
                  "argument": {
                    "name": "c",
                    "type": "Identifier",
                  },
                  "type": "RestElement",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a(b,c){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "b",
                  "type": "Identifier",
                },
                {
                  "name": "c",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a, a: 1}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "a",
              "type": "Identifier",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a, a}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "a",
              "type": "Identifier",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "a",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a, b, ...{c, e}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "a",
              "type": "Identifier",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "b",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "b",
              "type": "Identifier",
            },
          },
          {
            "argument": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "c",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "c",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "e",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "e",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectExpression",
            },
            "type": "SpreadElement",
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a, b} = c = d) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "b",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "left": {
            "name": "c",
            "type": "Identifier",
          },
          "operator": "=",
          "right": {
            "name": "d",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a, b}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "b",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "obj",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a, c:d}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "c",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "obj",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a,...obj} = foo) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "obj",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "foo",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a,...obj}) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "expression": false,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "a",
                  "type": "Identifier",
                },
              },
              {
                "argument": {
                  "name": "obj",
                  "type": "Identifier",
                },
                "type": "RestElement",
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a,...obj}) => {} 2`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "expression": false,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "a",
                  "type": "Identifier",
                },
              },
              {
                "argument": {
                  "name": "obj",
                  "type": "Identifier",
                },
                "type": "RestElement",
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: (b) = c} = [2]) 1`] = `
{
  "body": [
    {
      "end": 20,
      "expression": {
        "end": 19,
        "left": {
          "end": 13,
          "properties": [
            {
              "computed": false,
              "end": 12,
              "key": {
                "end": 3,
                "name": "a",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                12,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 12,
                "left": {
                  "end": 7,
                  "name": "b",
                  "range": [
                    6,
                    7,
                  ],
                  "start": 6,
                  "type": "Identifier",
                },
                "range": [
                  5,
                  12,
                ],
                "right": {
                  "end": 12,
                  "name": "c",
                  "range": [
                    11,
                    12,
                  ],
                  "start": 11,
                  "type": "Identifier",
                },
                "start": 5,
                "type": "AssignmentPattern",
              },
            },
          ],
          "range": [
            1,
            13,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          19,
        ],
        "right": {
          "elements": [
            {
              "end": 18,
              "range": [
                17,
                18,
              ],
              "start": 17,
              "type": "Literal",
              "value": 2,
            },
          ],
          "end": 19,
          "range": [
            16,
            19,
          ],
          "start": 16,
          "type": "ArrayExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        20,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: (b).c = d} = [2]) 1`] = `
{
  "body": [
    {
      "end": 22,
      "expression": {
        "end": 21,
        "left": {
          "end": 15,
          "properties": [
            {
              "computed": false,
              "end": 14,
              "key": {
                "end": 3,
                "name": "a",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                14,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 14,
                "left": {
                  "computed": false,
                  "end": 10,
                  "object": {
                    "end": 7,
                    "name": "b",
                    "range": [
                      6,
                      7,
                    ],
                    "start": 6,
                    "type": "Identifier",
                  },
                  "optional": false,
                  "property": {
                    "end": 10,
                    "name": "c",
                    "range": [
                      9,
                      10,
                    ],
                    "start": 9,
                    "type": "Identifier",
                  },
                  "range": [
                    5,
                    10,
                  ],
                  "start": 5,
                  "type": "MemberExpression",
                },
                "range": [
                  5,
                  14,
                ],
                "right": {
                  "end": 14,
                  "name": "d",
                  "range": [
                    13,
                    14,
                  ],
                  "start": 13,
                  "type": "Identifier",
                },
                "start": 5,
                "type": "AssignmentPattern",
              },
            },
          ],
          "range": [
            1,
            15,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          21,
        ],
        "right": {
          "elements": [
            {
              "end": 20,
              "range": [
                19,
                20,
              ],
              "start": 19,
              "type": "Literal",
              "value": 2,
            },
          ],
          "end": 21,
          "range": [
            18,
            21,
          ],
          "start": 18,
          "type": "ArrayExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        22,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 22,
  "range": [
    0,
    22,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: (b).c} = [2]) 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "end": 17,
        "left": {
          "end": 11,
          "properties": [
            {
              "computed": false,
              "end": 10,
              "key": {
                "end": 3,
                "name": "a",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                10,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "computed": false,
                "end": 10,
                "object": {
                  "end": 7,
                  "name": "b",
                  "range": [
                    6,
                    7,
                  ],
                  "start": 6,
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "end": 10,
                  "name": "c",
                  "range": [
                    9,
                    10,
                  ],
                  "start": 9,
                  "type": "Identifier",
                },
                "range": [
                  5,
                  10,
                ],
                "start": 5,
                "type": "MemberExpression",
              },
            },
          ],
          "range": [
            1,
            11,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          17,
        ],
        "right": {
          "elements": [
            {
              "end": 16,
              "range": [
                15,
                16,
              ],
              "start": 15,
              "type": "Literal",
              "value": 2,
            },
          ],
          "end": 17,
          "range": [
            14,
            17,
          ],
          "start": 14,
          "type": "ArrayExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: {x = true} = true} = y) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true,
                      "type": "Property",
                      "value": {
                        "left": {
                          "name": "x",
                          "type": "Identifier",
                        },
                        "right": {
                          "type": "Literal",
                          "value": true,
                        },
                        "type": "AssignmentPattern",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
                "right": {
                  "type": "Literal",
                  "value": true,
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: {x} = true} = y) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true,
                      "type": "Property",
                      "value": {
                        "name": "x",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
                "right": {
                  "type": "Literal",
                  "value": true,
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: 1, a: 2, b: 3}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 2,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "b",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 3,
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: 1, a: 2}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 2,
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: 1, a}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "a",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: 1, b: 3, a: 2}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "b",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 3,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 2,
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: b = c} = [2]) 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "end": 17,
        "left": {
          "end": 11,
          "properties": [
            {
              "computed": false,
              "end": 10,
              "key": {
                "end": 3,
                "name": "a",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                10,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 10,
                "left": {
                  "end": 6,
                  "name": "b",
                  "range": [
                    5,
                    6,
                  ],
                  "start": 5,
                  "type": "Identifier",
                },
                "range": [
                  5,
                  10,
                ],
                "right": {
                  "end": 10,
                  "name": "c",
                  "range": [
                    9,
                    10,
                  ],
                  "start": 9,
                  "type": "Identifier",
                },
                "start": 5,
                "type": "AssignmentPattern",
              },
            },
          ],
          "range": [
            1,
            11,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          17,
        ],
        "right": {
          "elements": [
            {
              "end": 16,
              "range": [
                15,
                16,
              ],
              "start": 15,
              "type": "Literal",
              "value": 2,
            },
          ],
          "end": 17,
          "range": [
            14,
            17,
          ],
          "start": 14,
          "type": "ArrayExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a: x = true} = y) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "name": "x",
                  "type": "Identifier",
                },
                "right": {
                  "type": "Literal",
                  "value": true,
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a:b, c:d}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "c",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "obj",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a:b, c}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "c",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "c",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "obj",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a:b,...obj} = foo) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "obj",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "foo",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a:b,...obj} = foo) 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "obj",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "foo",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a:b,...obj}) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "expression": false,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
              {
                "argument": {
                  "name": "obj",
                  "type": "Identifier",
                },
                "type": "RestElement",
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a:b,...obj}) => {} 2`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "expression": false,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
              {
                "argument": {
                  "name": "obj",
                  "type": "Identifier",
                },
                "type": "RestElement",
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a:b}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "obj",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a:v=b}=c); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "name": "v",
                  "type": "Identifier",
                },
                "right": {
                  "name": "b",
                  "type": "Identifier",
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "c",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a=b}=c); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "right": {
                  "name": "b",
                  "type": "Identifier",
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "c",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({a}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "obj",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async "a b c"(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "a b c",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async "a b c"(){}}); 2`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "a b c",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async * typeof(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "typeof",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async *[x](){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": true,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async *5(){}}) 1`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 15,
        "properties": [
          {
            "computed": false,
            "end": 14,
            "key": {
              "end": 10,
              "range": [
                9,
                10,
              ],
              "start": 9,
              "type": "Literal",
              "value": 5,
            },
            "kind": "init",
            "method": true,
            "range": [
              2,
              14,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "end": 14,
                "range": [
                  12,
                  14,
                ],
                "start": 12,
                "type": "BlockStatement",
              },
              "end": 14,
              "generator": true,
              "id": null,
              "params": [],
              "range": [
                10,
                14,
              ],
              "start": 10,
              "type": "FunctionExpression",
            },
          },
        ],
        "range": [
          1,
          15,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async *ident(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "ident",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async 8(){}}) 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 14,
        "properties": [
          {
            "computed": false,
            "end": 13,
            "key": {
              "end": 9,
              "range": [
                8,
                9,
              ],
              "start": 8,
              "type": "Literal",
              "value": 8,
            },
            "kind": "init",
            "method": true,
            "range": [
              2,
              13,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "end": 13,
                "range": [
                  11,
                  13,
                ],
                "start": 11,
                "type": "BlockStatement",
              },
              "end": 13,
              "generator": false,
              "id": null,
              "params": [],
              "range": [
                9,
                13,
              ],
              "start": 9,
              "type": "FunctionExpression",
            },
          },
        ],
        "range": [
          1,
          14,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async 15(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "loc": {
          "end": {
            "column": 15,
            "line": 1,
          },
          "start": {
            "column": 1,
            "line": 1,
          },
        },
        "properties": [
          {
            "computed": false,
            "key": {
              "loc": {
                "end": {
                  "column": 10,
                  "line": 1,
                },
                "start": {
                  "column": 8,
                  "line": 1,
                },
              },
              "type": "Literal",
              "value": 15,
            },
            "kind": "init",
            "loc": {
              "end": {
                "column": 14,
                "line": 1,
              },
              "start": {
                "column": 2,
                "line": 1,
              },
            },
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "loc": {
                  "end": {
                    "column": 14,
                    "line": 1,
                  },
                  "start": {
                    "column": 12,
                    "line": 1,
                  },
                },
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "loc": {
                "end": {
                  "column": 14,
                  "line": 1,
                },
                "start": {
                  "column": 10,
                  "line": 1,
                },
              },
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "loc": {
        "end": {
          "column": 17,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "type": "ExpressionStatement",
    },
  ],
  "loc": {
    "end": {
      "column": 17,
      "line": 1,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async 15(){}}); 2`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 15,
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async foo(a) { await a }}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [
                  {
                    "expression": {
                      "argument": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "type": "AwaitExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "a",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async ident(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "ident",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async typeof(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "typeof",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({async, foo}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "async",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "async",
              "type": "Identifier",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "foo",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({b: x, a: 1, a: 2}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "b",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "name": "x",
              "type": "Identifier",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "type": "Literal",
              "value": 2,
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({eval} = x); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "eval",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "eval",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({eval}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "eval",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "eval",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({foo(){}, get bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({foo(){}, set bar(e){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "e",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({foo: true / false}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "left": {
                "type": "Literal",
                "value": true,
              },
              "operator": "/",
              "right": {
                "type": "Literal",
                "value": false,
              },
              "type": "BinaryExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({foo: typeof /x/}); 1`] = `
{
  "body": [
    {
      "end": 20,
      "expression": {
        "end": 18,
        "properties": [
          {
            "computed": false,
            "end": 17,
            "key": {
              "end": 5,
              "name": "foo",
              "range": [
                2,
                5,
              ],
              "start": 2,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              17,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "argument": {
                "end": 17,
                "range": [
                  14,
                  17,
                ],
                "regex": {
                  "flags": "",
                  "pattern": "x",
                },
                "start": 14,
                "type": "Literal",
                "value": /x/,
              },
              "end": 17,
              "operator": "typeof",
              "prefix": true,
              "range": [
                7,
                17,
              ],
              "start": 7,
              "type": "UnaryExpression",
            },
          },
        ],
        "range": [
          1,
          18,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        20,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({foo: typeof x}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "argument": {
                "name": "x",
                "type": "Identifier",
              },
              "operator": "typeof",
              "prefix": true,
              "type": "UnaryExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({foo: typeof x}); 2`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "argument": {
                "name": "x",
                "type": "Identifier",
              },
              "operator": "typeof",
              "prefix": true,
              "type": "UnaryExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get "a b c"(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "loc": {
          "end": {
            "column": 18,
            "line": 1,
          },
          "start": {
            "column": 1,
            "line": 1,
          },
        },
        "properties": [
          {
            "computed": false,
            "key": {
              "loc": {
                "end": {
                  "column": 13,
                  "line": 1,
                },
                "start": {
                  "column": 6,
                  "line": 1,
                },
              },
              "type": "Literal",
              "value": "a b c",
            },
            "kind": "get",
            "loc": {
              "end": {
                "column": 17,
                "line": 1,
              },
              "start": {
                "column": 2,
                "line": 1,
              },
            },
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "loc": {
                  "end": {
                    "column": 17,
                    "line": 1,
                  },
                  "start": {
                    "column": 15,
                    "line": 1,
                  },
                },
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "loc": {
                "end": {
                  "column": 17,
                  "line": 1,
                },
                "start": {
                  "column": 13,
                  "line": 1,
                },
              },
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "loc": {
        "end": {
          "column": 20,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "type": "ExpressionStatement",
    },
  ],
  "loc": {
    "end": {
      "column": 20,
      "line": 1,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get "a b c"(){}}); 2`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "a b c",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get "foo"(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "foo",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get "foo"(){}}); 2`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "foo",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get [foo](){}, [bar](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": true,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get [foo](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": true,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get 15(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 15,
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get 123(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 123,
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get foo(){}, bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get foo(){}, get bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get foo(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get get(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "get",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get ident(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "ident",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({get typeof(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "typeof",
              "type": "Identifier",
            },
            "kind": "get",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ident: [foo].length = x} = x) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "ident",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "computed": false,
                  "object": {
                    "elements": [
                      {
                        "name": "foo",
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrayExpression",
                  },
                  "optional": false,
                  "property": {
                    "name": "length",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
                "right": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ident: [foo].length} = x) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "ident",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "elements": [
                    {
                      "name": "foo",
                      "type": "Identifier",
                    },
                  ],
                  "type": "ArrayExpression",
                },
                "optional": false,
                "property": {
                  "name": "length",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ident: {}.length = x} = x) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "ident",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "computed": false,
                  "object": {
                    "properties": [],
                    "type": "ObjectExpression",
                  },
                  "optional": false,
                  "property": {
                    "name": "length",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
                "right": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ident: {}.length = x} = x) 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "ident",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "computed": false,
                  "object": {
                    "properties": [],
                    "type": "ObjectExpression",
                  },
                  "optional": false,
                  "property": {
                    "name": "length",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
                "right": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ident: {}.length} = x) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "ident",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "properties": [],
                  "type": "ObjectExpression",
                },
                "optional": false,
                "property": {
                  "name": "length",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({ident: {}.length} = x) 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "ident",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "properties": [],
                  "type": "ObjectExpression",
                },
                "optional": false,
                "property": {
                  "name": "length",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({l: 50..foo} = x) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "l",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "type": "Literal",
                  "value": 50,
                },
                "optional": false,
                "property": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({s: "foo".foo} = x) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "s",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "type": "Literal",
                  "value": "foo",
                },
                "optional": false,
                "property": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "x",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set "a b c"(x){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "a b c",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set "foo"(a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": "foo",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "a",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set [foo](a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": true,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "a",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set [foo](b){}, set [bar](d){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": true,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "b",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "d",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set [foo](c){}, [bar](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": true,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "c",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set 15(x){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 15,
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set 15(x){}}); 2`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 15,
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set 123(a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 123,
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "a",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set a(eval){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "eval",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set foo(a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "a",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set foo(b){}, set bar(d){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "b",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "d",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set foo(c){}, bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "c",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "bar",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set get(a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "get",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "a",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({set ident(ident){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "ident",
              "type": "Identifier",
            },
            "kind": "set",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "ident",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({typeof(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "typeof",
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "shorthand": false,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({typeof: x} = y); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "typeof",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({typeof: x}) => x; 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "name": "x",
          "type": "Identifier",
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "typeof",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "x",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({typeof: x}); 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "typeof",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "name": "x",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x = 1} = {}); 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 13,
        "left": {
          "end": 8,
          "properties": [
            {
              "computed": false,
              "end": 7,
              "key": {
                "end": 3,
                "name": "x",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                7,
              ],
              "shorthand": true,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 7,
                "left": {
                  "end": 3,
                  "name": "x",
                  "range": [
                    2,
                    3,
                  ],
                  "start": 2,
                  "type": "Identifier",
                },
                "range": [
                  2,
                  7,
                ],
                "right": {
                  "end": 7,
                  "range": [
                    6,
                    7,
                  ],
                  "start": 6,
                  "type": "Literal",
                  "value": 1,
                },
                "start": 2,
                "type": "AssignmentPattern",
              },
            },
          ],
          "range": [
            1,
            8,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          13,
        ],
        "right": {
          "end": 13,
          "properties": [],
          "range": [
            11,
            13,
          ],
          "start": 11,
          "type": "ObjectExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x, ...y, a, ...b, c}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "x",
              "type": "Identifier",
            },
          },
          {
            "argument": {
              "name": "y",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "a",
              "type": "Identifier",
            },
          },
          {
            "argument": {
              "name": "b",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
          {
            "computed": false,
            "key": {
              "name": "c",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "c",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x, ...y, a, ...b, c}) 2`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "x",
              "type": "Identifier",
            },
          },
          {
            "argument": {
              "name": "y",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "a",
              "type": "Identifier",
            },
          },
          {
            "argument": {
              "name": "b",
              "type": "Identifier",
            },
            "type": "SpreadElement",
          },
          {
            "computed": false,
            "key": {
              "name": "c",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "c",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x, ...y} = {x, ...y}) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x, y = 1, z = 2} = {}); 1`] = `
{
  "body": [
    {
      "end": 25,
      "expression": {
        "end": 23,
        "left": {
          "end": 18,
          "properties": [
            {
              "computed": false,
              "end": 3,
              "key": {
                "end": 3,
                "name": "x",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                3,
              ],
              "shorthand": true,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 3,
                "name": "x",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 10,
              "key": {
                "end": 6,
                "name": "y",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                5,
                10,
              ],
              "shorthand": true,
              "start": 5,
              "type": "Property",
              "value": {
                "end": 10,
                "left": {
                  "end": 6,
                  "name": "y",
                  "range": [
                    5,
                    6,
                  ],
                  "start": 5,
                  "type": "Identifier",
                },
                "range": [
                  5,
                  10,
                ],
                "right": {
                  "end": 10,
                  "range": [
                    9,
                    10,
                  ],
                  "start": 9,
                  "type": "Literal",
                  "value": 1,
                },
                "start": 5,
                "type": "AssignmentPattern",
              },
            },
            {
              "computed": false,
              "end": 17,
              "key": {
                "end": 13,
                "name": "z",
                "range": [
                  12,
                  13,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                12,
                17,
              ],
              "shorthand": true,
              "start": 12,
              "type": "Property",
              "value": {
                "end": 17,
                "left": {
                  "end": 13,
                  "name": "z",
                  "range": [
                    12,
                    13,
                  ],
                  "start": 12,
                  "type": "Identifier",
                },
                "range": [
                  12,
                  17,
                ],
                "right": {
                  "end": 17,
                  "range": [
                    16,
                    17,
                  ],
                  "start": 16,
                  "type": "Literal",
                  "value": 2,
                },
                "start": 12,
                "type": "AssignmentPattern",
              },
            },
          ],
          "range": [
            1,
            18,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          23,
        ],
        "right": {
          "end": 23,
          "properties": [],
          "range": [
            21,
            23,
          ],
          "start": 21,
          "type": "ObjectExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        25,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 25,
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x, y} = o) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "y",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "o",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x: y, z}) 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 10,
        "properties": [
          {
            "computed": false,
            "end": 6,
            "key": {
              "end": 3,
              "name": "x",
              "range": [
                2,
                3,
              ],
              "start": 2,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              6,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "end": 6,
              "name": "y",
              "range": [
                5,
                6,
              ],
              "start": 5,
              "type": "Identifier",
            },
          },
          {
            "computed": false,
            "end": 9,
            "key": {
              "end": 9,
              "name": "z",
              "range": [
                8,
                9,
              ],
              "start": 8,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              8,
              9,
            ],
            "shorthand": true,
            "start": 8,
            "type": "Property",
            "value": {
              "end": 9,
              "name": "z",
              "range": [
                8,
                9,
              ],
              "start": 8,
              "type": "Identifier",
            },
          },
        ],
        "range": [
          1,
          10,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x:a["x"]} = {x:20}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": true,
                "object": {
                  "name": "a",
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "type": "Literal",
                  "value": "x",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "type": "Literal",
                "value": 20,
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x:let} = null) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "let",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "type": "Literal",
          "value": null,
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x:let}) => null 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "type": "Literal",
          "value": null,
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "x",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "let",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x:let}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": false,
            "type": "Property",
            "value": {
              "name": "let",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x:y} = {}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "y",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "properties": [],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x=1} = {}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "left": {
                  "name": "x",
                  "type": "Identifier",
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "properties": [],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x} = foo ) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
        },
        "operator": "=",
        "right": {
          "name": "foo",
          "type": "Identifier",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({x}) 1`] = `
{
  "body": [
    {
      "expression": {
        "properties": [
          {
            "computed": false,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "shorthand": true,
            "type": "Property",
            "value": {
              "name": "x",
              "type": "Identifier",
            },
          },
        ],
        "type": "ObjectExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > ({y:y2} = {y:y2-2}) 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "end": 18,
        "left": {
          "end": 7,
          "properties": [
            {
              "computed": false,
              "end": 6,
              "key": {
                "end": 3,
                "name": "y",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                6,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 6,
                "name": "y2",
                "range": [
                  4,
                  6,
                ],
                "start": 4,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            1,
            7,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          18,
        ],
        "right": {
          "end": 18,
          "properties": [
            {
              "computed": false,
              "end": 17,
              "key": {
                "end": 12,
                "name": "y",
                "range": [
                  11,
                  12,
                ],
                "start": 11,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                11,
                17,
              ],
              "shorthand": false,
              "start": 11,
              "type": "Property",
              "value": {
                "end": 17,
                "left": {
                  "end": 15,
                  "name": "y2",
                  "range": [
                    13,
                    15,
                  ],
                  "start": 13,
                  "type": "Identifier",
                },
                "operator": "-",
                "range": [
                  13,
                  17,
                ],
                "right": {
                  "end": 17,
                  "range": [
                    16,
                    17,
                  ],
                  "raw": "2",
                  "start": 16,
                  "type": "Literal",
                  "value": 2,
                },
                "start": 13,
                "type": "BinaryExpression",
              },
            },
          ],
          "range": [
            10,
            18,
          ],
          "start": 10,
          "type": "ObjectExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > (a, {b}) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "expression": false,
        "generator": false,
        "params": [
          {
            "name": "a",
            "type": "Identifier",
          },
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "b",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > (function({x, ...y}) {}) 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "generator": false,
        "id": null,
        "params": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "x",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "x",
                  "type": "Identifier",
                },
              },
              {
                "argument": {
                  "name": "y",
                  "type": "Identifier",
                },
                "type": "RestElement",
              },
            ],
            "type": "ObjectPattern",
          },
        ],
        "type": "FunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > (z = {...x.y} = z) => z 1`] = `
{
  "body": [
    {
      "expression": {
        "async": false,
        "body": {
          "name": "z",
          "type": "Identifier",
        },
        "expression": true,
        "generator": false,
        "params": [
          {
            "left": {
              "name": "z",
              "type": "Identifier",
            },
            "right": {
              "left": {
                "properties": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "optional": false,
                      "property": {
                        "name": "y",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "RestElement",
                  },
                ],
                "type": "ObjectPattern",
              },
              "operator": "=",
              "right": {
                "name": "z",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "AssignmentPattern",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > [(function() {})] 1`] = `
{
  "body": [
    {
      "expression": {
        "elements": [
          {
            "async": false,
            "body": {
              "body": [],
              "type": "BlockStatement",
            },
            "generator": false,
            "id": null,
            "params": [],
            "type": "FunctionExpression",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > [...a] = [] 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 11,
        "left": {
          "elements": [
            {
              "argument": {
                "end": 5,
                "name": "a",
                "range": [
                  4,
                  5,
                ],
                "start": 4,
                "type": "Identifier",
              },
              "end": 5,
              "range": [
                1,
                5,
              ],
              "start": 1,
              "type": "RestElement",
            },
          ],
          "end": 6,
          "range": [
            0,
            6,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          11,
        ],
        "right": {
          "elements": [],
          "end": 11,
          "range": [
            9,
            11,
          ],
          "start": 9,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > [{x : [{y:{z = 1}, z1 = 2}] }, {x2 = 3}, {x3 : {y3:[{z3 = 4}]}} ] = [{x:[{y:{}}]}, {}, {x3:{y3:[{}]}}]; 1`] = `
{
  "body": [
    {
      "end": 103,
      "expression": {
        "end": 102,
        "left": {
          "elements": [
            {
              "end": 29,
              "properties": [
                {
                  "computed": false,
                  "end": 27,
                  "key": {
                    "end": 3,
                    "name": "x",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    2,
                    27,
                  ],
                  "shorthand": false,
                  "start": 2,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 26,
                        "properties": [
                          {
                            "computed": false,
                            "end": 17,
                            "key": {
                              "end": 9,
                              "name": "y",
                              "range": [
                                8,
                                9,
                              ],
                              "start": 8,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              8,
                              17,
                            ],
                            "shorthand": false,
                            "start": 8,
                            "type": "Property",
                            "value": {
                              "end": 17,
                              "properties": [
                                {
                                  "computed": false,
                                  "end": 16,
                                  "key": {
                                    "end": 12,
                                    "name": "z",
                                    "range": [
                                      11,
                                      12,
                                    ],
                                    "start": 11,
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "range": [
                                    11,
                                    16,
                                  ],
                                  "shorthand": true,
                                  "start": 11,
                                  "type": "Property",
                                  "value": {
                                    "end": 16,
                                    "left": {
                                      "end": 12,
                                      "name": "z",
                                      "range": [
                                        11,
                                        12,
                                      ],
                                      "start": 11,
                                      "type": "Identifier",
                                    },
                                    "range": [
                                      11,
                                      16,
                                    ],
                                    "right": {
                                      "end": 16,
                                      "range": [
                                        15,
                                        16,
                                      ],
                                      "raw": "1",
                                      "start": 15,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "start": 11,
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "range": [
                                10,
                                17,
                              ],
                              "start": 10,
                              "type": "ObjectPattern",
                            },
                          },
                          {
                            "computed": false,
                            "end": 25,
                            "key": {
                              "end": 21,
                              "name": "z1",
                              "range": [
                                19,
                                21,
                              ],
                              "start": 19,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              19,
                              25,
                            ],
                            "shorthand": true,
                            "start": 19,
                            "type": "Property",
                            "value": {
                              "end": 25,
                              "left": {
                                "end": 21,
                                "name": "z1",
                                "range": [
                                  19,
                                  21,
                                ],
                                "start": 19,
                                "type": "Identifier",
                              },
                              "range": [
                                19,
                                25,
                              ],
                              "right": {
                                "end": 25,
                                "range": [
                                  24,
                                  25,
                                ],
                                "raw": "2",
                                "start": 24,
                                "type": "Literal",
                                "value": 2,
                              },
                              "start": 19,
                              "type": "AssignmentPattern",
                            },
                          },
                        ],
                        "range": [
                          7,
                          26,
                        ],
                        "start": 7,
                        "type": "ObjectPattern",
                      },
                    ],
                    "end": 27,
                    "range": [
                      6,
                      27,
                    ],
                    "start": 6,
                    "type": "ArrayPattern",
                  },
                },
              ],
              "range": [
                1,
                29,
              ],
              "start": 1,
              "type": "ObjectPattern",
            },
            {
              "end": 39,
              "properties": [
                {
                  "computed": false,
                  "end": 38,
                  "key": {
                    "end": 34,
                    "name": "x2",
                    "range": [
                      32,
                      34,
                    ],
                    "start": 32,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    32,
                    38,
                  ],
                  "shorthand": true,
                  "start": 32,
                  "type": "Property",
                  "value": {
                    "end": 38,
                    "left": {
                      "end": 34,
                      "name": "x2",
                      "range": [
                        32,
                        34,
                      ],
                      "start": 32,
                      "type": "Identifier",
                    },
                    "range": [
                      32,
                      38,
                    ],
                    "right": {
                      "end": 38,
                      "range": [
                        37,
                        38,
                      ],
                      "raw": "3",
                      "start": 37,
                      "type": "Literal",
                      "value": 3,
                    },
                    "start": 32,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                31,
                39,
              ],
              "start": 31,
              "type": "ObjectPattern",
            },
            {
              "end": 63,
              "properties": [
                {
                  "computed": false,
                  "end": 62,
                  "key": {
                    "end": 44,
                    "name": "x3",
                    "range": [
                      42,
                      44,
                    ],
                    "start": 42,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    42,
                    62,
                  ],
                  "shorthand": false,
                  "start": 42,
                  "type": "Property",
                  "value": {
                    "end": 62,
                    "properties": [
                      {
                        "computed": false,
                        "end": 61,
                        "key": {
                          "end": 50,
                          "name": "y3",
                          "range": [
                            48,
                            50,
                          ],
                          "start": 48,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          48,
                          61,
                        ],
                        "shorthand": false,
                        "start": 48,
                        "type": "Property",
                        "value": {
                          "elements": [
                            {
                              "end": 60,
                              "properties": [
                                {
                                  "computed": false,
                                  "end": 59,
                                  "key": {
                                    "end": 55,
                                    "name": "z3",
                                    "range": [
                                      53,
                                      55,
                                    ],
                                    "start": 53,
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "range": [
                                    53,
                                    59,
                                  ],
                                  "shorthand": true,
                                  "start": 53,
                                  "type": "Property",
                                  "value": {
                                    "end": 59,
                                    "left": {
                                      "end": 55,
                                      "name": "z3",
                                      "range": [
                                        53,
                                        55,
                                      ],
                                      "start": 53,
                                      "type": "Identifier",
                                    },
                                    "range": [
                                      53,
                                      59,
                                    ],
                                    "right": {
                                      "end": 59,
                                      "range": [
                                        58,
                                        59,
                                      ],
                                      "raw": "4",
                                      "start": 58,
                                      "type": "Literal",
                                      "value": 4,
                                    },
                                    "start": 53,
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "range": [
                                52,
                                60,
                              ],
                              "start": 52,
                              "type": "ObjectPattern",
                            },
                          ],
                          "end": 61,
                          "range": [
                            51,
                            61,
                          ],
                          "start": 51,
                          "type": "ArrayPattern",
                        },
                      },
                    ],
                    "range": [
                      47,
                      62,
                    ],
                    "start": 47,
                    "type": "ObjectPattern",
                  },
                },
              ],
              "range": [
                41,
                63,
              ],
              "start": 41,
              "type": "ObjectPattern",
            },
          ],
          "end": 65,
          "range": [
            0,
            65,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          102,
        ],
        "right": {
          "elements": [
            {
              "end": 81,
              "properties": [
                {
                  "computed": false,
                  "end": 80,
                  "key": {
                    "end": 71,
                    "name": "x",
                    "range": [
                      70,
                      71,
                    ],
                    "start": 70,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    70,
                    80,
                  ],
                  "shorthand": false,
                  "start": 70,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 79,
                        "properties": [
                          {
                            "computed": false,
                            "end": 78,
                            "key": {
                              "end": 75,
                              "name": "y",
                              "range": [
                                74,
                                75,
                              ],
                              "start": 74,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              74,
                              78,
                            ],
                            "shorthand": false,
                            "start": 74,
                            "type": "Property",
                            "value": {
                              "end": 78,
                              "properties": [],
                              "range": [
                                76,
                                78,
                              ],
                              "start": 76,
                              "type": "ObjectExpression",
                            },
                          },
                        ],
                        "range": [
                          73,
                          79,
                        ],
                        "start": 73,
                        "type": "ObjectExpression",
                      },
                    ],
                    "end": 80,
                    "range": [
                      72,
                      80,
                    ],
                    "start": 72,
                    "type": "ArrayExpression",
                  },
                },
              ],
              "range": [
                69,
                81,
              ],
              "start": 69,
              "type": "ObjectExpression",
            },
            {
              "end": 85,
              "properties": [],
              "range": [
                83,
                85,
              ],
              "start": 83,
              "type": "ObjectExpression",
            },
            {
              "end": 101,
              "properties": [
                {
                  "computed": false,
                  "end": 100,
                  "key": {
                    "end": 90,
                    "name": "x3",
                    "range": [
                      88,
                      90,
                    ],
                    "start": 88,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    88,
                    100,
                  ],
                  "shorthand": false,
                  "start": 88,
                  "type": "Property",
                  "value": {
                    "end": 100,
                    "properties": [
                      {
                        "computed": false,
                        "end": 99,
                        "key": {
                          "end": 94,
                          "name": "y3",
                          "range": [
                            92,
                            94,
                          ],
                          "start": 92,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          92,
                          99,
                        ],
                        "shorthand": false,
                        "start": 92,
                        "type": "Property",
                        "value": {
                          "elements": [
                            {
                              "end": 98,
                              "properties": [],
                              "range": [
                                96,
                                98,
                              ],
                              "start": 96,
                              "type": "ObjectExpression",
                            },
                          ],
                          "end": 99,
                          "range": [
                            95,
                            99,
                          ],
                          "start": 95,
                          "type": "ArrayExpression",
                        },
                      },
                    ],
                    "range": [
                      91,
                      100,
                    ],
                    "start": 91,
                    "type": "ObjectExpression",
                  },
                },
              ],
              "range": [
                87,
                101,
              ],
              "start": 87,
              "type": "ObjectExpression",
            },
          ],
          "end": 102,
          "range": [
            68,
            102,
          ],
          "start": 68,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        103,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 103,
  "range": [
    0,
    103,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > [{x : [{y:{z = 1}, z1 = 2}] }, {x2 = 3}, {x3 : {y3:[{z3 = 4}]}} ] = [{x:[{y:{}}]}, {}, {x3:{y3:[{}]}}]; 2`] = `
{
  "body": [
    {
      "end": 103,
      "expression": {
        "end": 102,
        "left": {
          "elements": [
            {
              "end": 29,
              "properties": [
                {
                  "computed": false,
                  "end": 27,
                  "key": {
                    "end": 3,
                    "name": "x",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    2,
                    27,
                  ],
                  "shorthand": false,
                  "start": 2,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 26,
                        "properties": [
                          {
                            "computed": false,
                            "end": 17,
                            "key": {
                              "end": 9,
                              "name": "y",
                              "range": [
                                8,
                                9,
                              ],
                              "start": 8,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              8,
                              17,
                            ],
                            "shorthand": false,
                            "start": 8,
                            "type": "Property",
                            "value": {
                              "end": 17,
                              "properties": [
                                {
                                  "computed": false,
                                  "end": 16,
                                  "key": {
                                    "end": 12,
                                    "name": "z",
                                    "range": [
                                      11,
                                      12,
                                    ],
                                    "start": 11,
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "range": [
                                    11,
                                    16,
                                  ],
                                  "shorthand": true,
                                  "start": 11,
                                  "type": "Property",
                                  "value": {
                                    "end": 16,
                                    "left": {
                                      "end": 12,
                                      "name": "z",
                                      "range": [
                                        11,
                                        12,
                                      ],
                                      "start": 11,
                                      "type": "Identifier",
                                    },
                                    "range": [
                                      11,
                                      16,
                                    ],
                                    "right": {
                                      "end": 16,
                                      "range": [
                                        15,
                                        16,
                                      ],
                                      "raw": "1",
                                      "start": 15,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "start": 11,
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "range": [
                                10,
                                17,
                              ],
                              "start": 10,
                              "type": "ObjectPattern",
                            },
                          },
                          {
                            "computed": false,
                            "end": 25,
                            "key": {
                              "end": 21,
                              "name": "z1",
                              "range": [
                                19,
                                21,
                              ],
                              "start": 19,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              19,
                              25,
                            ],
                            "shorthand": true,
                            "start": 19,
                            "type": "Property",
                            "value": {
                              "end": 25,
                              "left": {
                                "end": 21,
                                "name": "z1",
                                "range": [
                                  19,
                                  21,
                                ],
                                "start": 19,
                                "type": "Identifier",
                              },
                              "range": [
                                19,
                                25,
                              ],
                              "right": {
                                "end": 25,
                                "range": [
                                  24,
                                  25,
                                ],
                                "raw": "2",
                                "start": 24,
                                "type": "Literal",
                                "value": 2,
                              },
                              "start": 19,
                              "type": "AssignmentPattern",
                            },
                          },
                        ],
                        "range": [
                          7,
                          26,
                        ],
                        "start": 7,
                        "type": "ObjectPattern",
                      },
                    ],
                    "end": 27,
                    "range": [
                      6,
                      27,
                    ],
                    "start": 6,
                    "type": "ArrayPattern",
                  },
                },
              ],
              "range": [
                1,
                29,
              ],
              "start": 1,
              "type": "ObjectPattern",
            },
            {
              "end": 39,
              "properties": [
                {
                  "computed": false,
                  "end": 38,
                  "key": {
                    "end": 34,
                    "name": "x2",
                    "range": [
                      32,
                      34,
                    ],
                    "start": 32,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    32,
                    38,
                  ],
                  "shorthand": true,
                  "start": 32,
                  "type": "Property",
                  "value": {
                    "end": 38,
                    "left": {
                      "end": 34,
                      "name": "x2",
                      "range": [
                        32,
                        34,
                      ],
                      "start": 32,
                      "type": "Identifier",
                    },
                    "range": [
                      32,
                      38,
                    ],
                    "right": {
                      "end": 38,
                      "range": [
                        37,
                        38,
                      ],
                      "raw": "3",
                      "start": 37,
                      "type": "Literal",
                      "value": 3,
                    },
                    "start": 32,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                31,
                39,
              ],
              "start": 31,
              "type": "ObjectPattern",
            },
            {
              "end": 63,
              "properties": [
                {
                  "computed": false,
                  "end": 62,
                  "key": {
                    "end": 44,
                    "name": "x3",
                    "range": [
                      42,
                      44,
                    ],
                    "start": 42,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    42,
                    62,
                  ],
                  "shorthand": false,
                  "start": 42,
                  "type": "Property",
                  "value": {
                    "end": 62,
                    "properties": [
                      {
                        "computed": false,
                        "end": 61,
                        "key": {
                          "end": 50,
                          "name": "y3",
                          "range": [
                            48,
                            50,
                          ],
                          "start": 48,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          48,
                          61,
                        ],
                        "shorthand": false,
                        "start": 48,
                        "type": "Property",
                        "value": {
                          "elements": [
                            {
                              "end": 60,
                              "properties": [
                                {
                                  "computed": false,
                                  "end": 59,
                                  "key": {
                                    "end": 55,
                                    "name": "z3",
                                    "range": [
                                      53,
                                      55,
                                    ],
                                    "start": 53,
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "range": [
                                    53,
                                    59,
                                  ],
                                  "shorthand": true,
                                  "start": 53,
                                  "type": "Property",
                                  "value": {
                                    "end": 59,
                                    "left": {
                                      "end": 55,
                                      "name": "z3",
                                      "range": [
                                        53,
                                        55,
                                      ],
                                      "start": 53,
                                      "type": "Identifier",
                                    },
                                    "range": [
                                      53,
                                      59,
                                    ],
                                    "right": {
                                      "end": 59,
                                      "range": [
                                        58,
                                        59,
                                      ],
                                      "raw": "4",
                                      "start": 58,
                                      "type": "Literal",
                                      "value": 4,
                                    },
                                    "start": 53,
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "range": [
                                52,
                                60,
                              ],
                              "start": 52,
                              "type": "ObjectPattern",
                            },
                          ],
                          "end": 61,
                          "range": [
                            51,
                            61,
                          ],
                          "start": 51,
                          "type": "ArrayPattern",
                        },
                      },
                    ],
                    "range": [
                      47,
                      62,
                    ],
                    "start": 47,
                    "type": "ObjectPattern",
                  },
                },
              ],
              "range": [
                41,
                63,
              ],
              "start": 41,
              "type": "ObjectPattern",
            },
          ],
          "end": 65,
          "range": [
            0,
            65,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          102,
        ],
        "right": {
          "elements": [
            {
              "end": 81,
              "properties": [
                {
                  "computed": false,
                  "end": 80,
                  "key": {
                    "end": 71,
                    "name": "x",
                    "range": [
                      70,
                      71,
                    ],
                    "start": 70,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    70,
                    80,
                  ],
                  "shorthand": false,
                  "start": 70,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 79,
                        "properties": [
                          {
                            "computed": false,
                            "end": 78,
                            "key": {
                              "end": 75,
                              "name": "y",
                              "range": [
                                74,
                                75,
                              ],
                              "start": 74,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              74,
                              78,
                            ],
                            "shorthand": false,
                            "start": 74,
                            "type": "Property",
                            "value": {
                              "end": 78,
                              "properties": [],
                              "range": [
                                76,
                                78,
                              ],
                              "start": 76,
                              "type": "ObjectExpression",
                            },
                          },
                        ],
                        "range": [
                          73,
                          79,
                        ],
                        "start": 73,
                        "type": "ObjectExpression",
                      },
                    ],
                    "end": 80,
                    "range": [
                      72,
                      80,
                    ],
                    "start": 72,
                    "type": "ArrayExpression",
                  },
                },
              ],
              "range": [
                69,
                81,
              ],
              "start": 69,
              "type": "ObjectExpression",
            },
            {
              "end": 85,
              "properties": [],
              "range": [
                83,
                85,
              ],
              "start": 83,
              "type": "ObjectExpression",
            },
            {
              "end": 101,
              "properties": [
                {
                  "computed": false,
                  "end": 100,
                  "key": {
                    "end": 90,
                    "name": "x3",
                    "range": [
                      88,
                      90,
                    ],
                    "start": 88,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    88,
                    100,
                  ],
                  "shorthand": false,
                  "start": 88,
                  "type": "Property",
                  "value": {
                    "end": 100,
                    "properties": [
                      {
                        "computed": false,
                        "end": 99,
                        "key": {
                          "end": 94,
                          "name": "y3",
                          "range": [
                            92,
                            94,
                          ],
                          "start": 92,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          92,
                          99,
                        ],
                        "shorthand": false,
                        "start": 92,
                        "type": "Property",
                        "value": {
                          "elements": [
                            {
                              "end": 98,
                              "properties": [],
                              "range": [
                                96,
                                98,
                              ],
                              "start": 96,
                              "type": "ObjectExpression",
                            },
                          ],
                          "end": 99,
                          "range": [
                            95,
                            99,
                          ],
                          "start": 95,
                          "type": "ArrayExpression",
                        },
                      },
                    ],
                    "range": [
                      91,
                      100,
                    ],
                    "start": 91,
                    "type": "ObjectExpression",
                  },
                },
              ],
              "range": [
                87,
                101,
              ],
              "start": 87,
              "type": "ObjectExpression",
            },
          ],
          "end": 102,
          "range": [
            68,
            102,
          ],
          "start": 68,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        103,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 103,
  "range": [
    0,
    103,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > [{x : [{y:{z = 1}}] }] = [{x:[{y:{}}]}]; 1`] = `
{
  "body": [
    {
      "end": 40,
      "expression": {
        "end": 39,
        "left": {
          "elements": [
            {
              "end": 21,
              "properties": [
                {
                  "computed": false,
                  "end": 19,
                  "key": {
                    "end": 3,
                    "name": "x",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    2,
                    19,
                  ],
                  "shorthand": false,
                  "start": 2,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 18,
                        "properties": [
                          {
                            "computed": false,
                            "end": 17,
                            "key": {
                              "end": 9,
                              "name": "y",
                              "range": [
                                8,
                                9,
                              ],
                              "start": 8,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              8,
                              17,
                            ],
                            "shorthand": false,
                            "start": 8,
                            "type": "Property",
                            "value": {
                              "end": 17,
                              "properties": [
                                {
                                  "computed": false,
                                  "end": 16,
                                  "key": {
                                    "end": 12,
                                    "name": "z",
                                    "range": [
                                      11,
                                      12,
                                    ],
                                    "start": 11,
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "range": [
                                    11,
                                    16,
                                  ],
                                  "shorthand": true,
                                  "start": 11,
                                  "type": "Property",
                                  "value": {
                                    "end": 16,
                                    "left": {
                                      "end": 12,
                                      "name": "z",
                                      "range": [
                                        11,
                                        12,
                                      ],
                                      "start": 11,
                                      "type": "Identifier",
                                    },
                                    "range": [
                                      11,
                                      16,
                                    ],
                                    "right": {
                                      "end": 16,
                                      "range": [
                                        15,
                                        16,
                                      ],
                                      "start": 15,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "start": 11,
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "range": [
                                10,
                                17,
                              ],
                              "start": 10,
                              "type": "ObjectPattern",
                            },
                          },
                        ],
                        "range": [
                          7,
                          18,
                        ],
                        "start": 7,
                        "type": "ObjectPattern",
                      },
                    ],
                    "end": 19,
                    "range": [
                      6,
                      19,
                    ],
                    "start": 6,
                    "type": "ArrayPattern",
                  },
                },
              ],
              "range": [
                1,
                21,
              ],
              "start": 1,
              "type": "ObjectPattern",
            },
          ],
          "end": 22,
          "range": [
            0,
            22,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          39,
        ],
        "right": {
          "elements": [
            {
              "end": 38,
              "properties": [
                {
                  "computed": false,
                  "end": 37,
                  "key": {
                    "end": 28,
                    "name": "x",
                    "range": [
                      27,
                      28,
                    ],
                    "start": 27,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    27,
                    37,
                  ],
                  "shorthand": false,
                  "start": 27,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 36,
                        "properties": [
                          {
                            "computed": false,
                            "end": 35,
                            "key": {
                              "end": 32,
                              "name": "y",
                              "range": [
                                31,
                                32,
                              ],
                              "start": 31,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              31,
                              35,
                            ],
                            "shorthand": false,
                            "start": 31,
                            "type": "Property",
                            "value": {
                              "end": 35,
                              "properties": [],
                              "range": [
                                33,
                                35,
                              ],
                              "start": 33,
                              "type": "ObjectExpression",
                            },
                          },
                        ],
                        "range": [
                          30,
                          36,
                        ],
                        "start": 30,
                        "type": "ObjectExpression",
                      },
                    ],
                    "end": 37,
                    "range": [
                      29,
                      37,
                    ],
                    "start": 29,
                    "type": "ArrayExpression",
                  },
                },
              ],
              "range": [
                26,
                38,
              ],
              "start": 26,
              "type": "ObjectExpression",
            },
          ],
          "end": 39,
          "range": [
            25,
            39,
          ],
          "start": 25,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        40,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 40,
  "range": [
    0,
    40,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > [{x:x = 1, y:y = 2}, [a = 3, b = 4, c = 5]] = {}; 1`] = `
{
  "body": [
    {
      "end": 49,
      "expression": {
        "end": 48,
        "left": {
          "elements": [
            {
              "end": 19,
              "properties": [
                {
                  "computed": false,
                  "end": 9,
                  "key": {
                    "end": 3,
                    "name": "x",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    2,
                    9,
                  ],
                  "shorthand": false,
                  "start": 2,
                  "type": "Property",
                  "value": {
                    "end": 9,
                    "left": {
                      "end": 5,
                      "name": "x",
                      "range": [
                        4,
                        5,
                      ],
                      "start": 4,
                      "type": "Identifier",
                    },
                    "range": [
                      4,
                      9,
                    ],
                    "right": {
                      "end": 9,
                      "range": [
                        8,
                        9,
                      ],
                      "raw": "1",
                      "start": 8,
                      "type": "Literal",
                      "value": 1,
                    },
                    "start": 4,
                    "type": "AssignmentPattern",
                  },
                },
                {
                  "computed": false,
                  "end": 18,
                  "key": {
                    "end": 12,
                    "name": "y",
                    "range": [
                      11,
                      12,
                    ],
                    "start": 11,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    11,
                    18,
                  ],
                  "shorthand": false,
                  "start": 11,
                  "type": "Property",
                  "value": {
                    "end": 18,
                    "left": {
                      "end": 14,
                      "name": "y",
                      "range": [
                        13,
                        14,
                      ],
                      "start": 13,
                      "type": "Identifier",
                    },
                    "range": [
                      13,
                      18,
                    ],
                    "right": {
                      "end": 18,
                      "range": [
                        17,
                        18,
                      ],
                      "raw": "2",
                      "start": 17,
                      "type": "Literal",
                      "value": 2,
                    },
                    "start": 13,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                1,
                19,
              ],
              "start": 1,
              "type": "ObjectPattern",
            },
            {
              "elements": [
                {
                  "end": 27,
                  "left": {
                    "end": 23,
                    "name": "a",
                    "range": [
                      22,
                      23,
                    ],
                    "start": 22,
                    "type": "Identifier",
                  },
                  "range": [
                    22,
                    27,
                  ],
                  "right": {
                    "end": 27,
                    "range": [
                      26,
                      27,
                    ],
                    "raw": "3",
                    "start": 26,
                    "type": "Literal",
                    "value": 3,
                  },
                  "start": 22,
                  "type": "AssignmentPattern",
                },
                {
                  "end": 34,
                  "left": {
                    "end": 30,
                    "name": "b",
                    "range": [
                      29,
                      30,
                    ],
                    "start": 29,
                    "type": "Identifier",
                  },
                  "range": [
                    29,
                    34,
                  ],
                  "right": {
                    "end": 34,
                    "range": [
                      33,
                      34,
                    ],
                    "raw": "4",
                    "start": 33,
                    "type": "Literal",
                    "value": 4,
                  },
                  "start": 29,
                  "type": "AssignmentPattern",
                },
                {
                  "end": 41,
                  "left": {
                    "end": 37,
                    "name": "c",
                    "range": [
                      36,
                      37,
                    ],
                    "start": 36,
                    "type": "Identifier",
                  },
                  "range": [
                    36,
                    41,
                  ],
                  "right": {
                    "end": 41,
                    "range": [
                      40,
                      41,
                    ],
                    "raw": "5",
                    "start": 40,
                    "type": "Literal",
                    "value": 5,
                  },
                  "start": 36,
                  "type": "AssignmentPattern",
                },
              ],
              "end": 42,
              "range": [
                21,
                42,
              ],
              "start": 21,
              "type": "ArrayPattern",
            },
          ],
          "end": 43,
          "range": [
            0,
            43,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          48,
        ],
        "right": {
          "end": 48,
          "properties": [],
          "range": [
            46,
            48,
          ],
          "start": 46,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        49,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 49,
  "range": [
    0,
    49,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > a = {"a": b} = b 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "a",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "b",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > a = {"a": b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > a = {} = b 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "b",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > a = {} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > a={"b":c=d} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "b",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "name": "c",
                  "type": "Identifier",
                },
                "operator": "=",
                "right": {
                  "name": "d",
                  "type": "Identifier",
                },
                "type": "AssignmentExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > assignmentResult = { x: x = yield } = value 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "assignmentResult",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "x",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "left": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "right": {
                    "name": "yield",
                    "type": "Identifier",
                  },
                  "type": "AssignmentPattern",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "value",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > async ({a: b = c}) 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "left": {
                    "name": "b",
                    "type": "Identifier",
                  },
                  "operator": "=",
                  "right": {
                    "name": "c",
                    "type": "Identifier",
                  },
                  "type": "AssignmentExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "async",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > async function wrap() { ({a = await b} = obj) } 1`] = `
{
  "body": [
    {
      "async": true,
      "body": {
        "body": [
          {
            "expression": {
              "left": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": true,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "right": {
                        "argument": {
                          "name": "b",
                          "type": "Identifier",
                        },
                        "type": "AwaitExpression",
                      },
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "type": "ObjectPattern",
              },
              "operator": "=",
              "right": {
                "name": "obj",
                "type": "Identifier",
              },
              "type": "AssignmentExpression",
            },
            "type": "ExpressionStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "wrap",
        "type": "Identifier",
      },
      "params": [],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > f(a, ...1 + 1, b) 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "arguments": [
          {
            "end": 3,
            "name": "a",
            "range": [
              2,
              3,
            ],
            "start": 2,
            "type": "Identifier",
          },
          {
            "argument": {
              "end": 13,
              "left": {
                "end": 9,
                "range": [
                  8,
                  9,
                ],
                "start": 8,
                "type": "Literal",
                "value": 1,
              },
              "operator": "+",
              "range": [
                8,
                13,
              ],
              "right": {
                "end": 13,
                "range": [
                  12,
                  13,
                ],
                "start": 12,
                "type": "Literal",
                "value": 1,
              },
              "start": 8,
              "type": "BinaryExpression",
            },
            "end": 13,
            "range": [
              5,
              13,
            ],
            "start": 5,
            "type": "SpreadElement",
          },
          {
            "end": 16,
            "name": "b",
            "range": [
              15,
              16,
            ],
            "start": 15,
            "type": "Identifier",
          },
        ],
        "callee": {
          "end": 1,
          "name": "f",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "end": 17,
        "optional": false,
        "range": [
          0,
          17,
        ],
        "start": 0,
        "type": "CallExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > fn = ({text = "default", ...props}) => text + props.children 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "fn",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "async": false,
          "body": {
            "left": {
              "name": "text",
              "type": "Identifier",
            },
            "operator": "+",
            "right": {
              "computed": false,
              "object": {
                "name": "props",
                "type": "Identifier",
              },
              "optional": false,
              "property": {
                "name": "children",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "BinaryExpression",
          },
          "expression": true,
          "generator": false,
          "params": [
            {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "text",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "text",
                      "type": "Identifier",
                    },
                    "right": {
                      "type": "Literal",
                      "value": "default",
                    },
                    "type": "AssignmentPattern",
                  },
                },
                {
                  "argument": {
                    "name": "props",
                    "type": "Identifier",
                  },
                  "type": "RestElement",
                },
              ],
              "type": "ObjectPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function *f(){   s = {"foo": yield /x/}   } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "expression": {
              "left": {
                "name": "s",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "type": "Literal",
                      "value": "foo",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "argument": {
                        "regex": {
                          "flags": "",
                          "pattern": "x",
                        },
                        "type": "Literal",
                        "value": /x/,
                      },
                      "delegate": false,
                      "type": "YieldExpression",
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
              "type": "AssignmentExpression",
            },
            "type": "ExpressionStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "generator": true,
      "id": {
        "name": "f",
        "type": "Identifier",
      },
      "params": [],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function *f(){   s = {"foo": yield /x/g}   } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "expression": {
              "left": {
                "name": "s",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "type": "Literal",
                      "value": "foo",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "argument": {
                        "regex": {
                          "flags": "g",
                          "pattern": "x",
                        },
                        "type": "Literal",
                        "value": /x/g,
                      },
                      "delegate": false,
                      "type": "YieldExpression",
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
              "type": "AssignmentExpression",
            },
            "type": "ExpressionStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "generator": true,
      "id": {
        "name": "f",
        "type": "Identifier",
      },
      "params": [],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function *f(){   s = {"foo": yield}   } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "end": 35,
            "expression": {
              "end": 35,
              "left": {
                "end": 18,
                "name": "s",
                "range": [
                  17,
                  18,
                ],
                "start": 17,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                17,
                35,
              ],
              "right": {
                "end": 35,
                "properties": [
                  {
                    "computed": false,
                    "end": 34,
                    "key": {
                      "end": 27,
                      "range": [
                        22,
                        27,
                      ],
                      "start": 22,
                      "type": "Literal",
                      "value": "foo",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      22,
                      34,
                    ],
                    "shorthand": false,
                    "start": 22,
                    "type": "Property",
                    "value": {
                      "argument": null,
                      "delegate": false,
                      "end": 34,
                      "range": [
                        29,
                        34,
                      ],
                      "start": 29,
                      "type": "YieldExpression",
                    },
                  },
                ],
                "range": [
                  21,
                  35,
                ],
                "start": 21,
                "type": "ObjectExpression",
              },
              "start": 17,
              "type": "AssignmentExpression",
            },
            "range": [
              17,
              35,
            ],
            "start": 17,
            "type": "ExpressionStatement",
          },
        ],
        "end": 39,
        "range": [
          13,
          39,
        ],
        "start": 13,
        "type": "BlockStatement",
      },
      "end": 39,
      "generator": true,
      "id": {
        "end": 11,
        "name": "f",
        "range": [
          10,
          11,
        ],
        "start": 10,
        "type": "Identifier",
      },
      "params": [],
      "range": [
        0,
        39,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 39,
  "range": [
    0,
    39,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function *f(){   s = {"foo": yield}   } 2`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "expression": {
              "left": {
                "name": "s",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "type": "Literal",
                      "value": "foo",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "argument": null,
                      "delegate": false,
                      "type": "YieldExpression",
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
              "type": "AssignmentExpression",
            },
            "type": "ExpressionStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "generator": true,
      "id": {
        "name": "f",
        "type": "Identifier",
      },
      "params": [],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function *f(){   s = {foo: yield /x/}   } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "end": 37,
            "expression": {
              "end": 37,
              "left": {
                "end": 18,
                "name": "s",
                "range": [
                  17,
                  18,
                ],
                "start": 17,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                17,
                37,
              ],
              "right": {
                "end": 37,
                "properties": [
                  {
                    "computed": false,
                    "end": 36,
                    "key": {
                      "end": 25,
                      "name": "foo",
                      "range": [
                        22,
                        25,
                      ],
                      "start": 22,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      22,
                      36,
                    ],
                    "shorthand": false,
                    "start": 22,
                    "type": "Property",
                    "value": {
                      "argument": {
                        "end": 36,
                        "range": [
                          33,
                          36,
                        ],
                        "regex": {
                          "flags": "",
                          "pattern": "x",
                        },
                        "start": 33,
                        "type": "Literal",
                        "value": /x/,
                      },
                      "delegate": false,
                      "end": 36,
                      "range": [
                        27,
                        36,
                      ],
                      "start": 27,
                      "type": "YieldExpression",
                    },
                  },
                ],
                "range": [
                  21,
                  37,
                ],
                "start": 21,
                "type": "ObjectExpression",
              },
              "start": 17,
              "type": "AssignmentExpression",
            },
            "range": [
              17,
              37,
            ],
            "start": 17,
            "type": "ExpressionStatement",
          },
        ],
        "end": 41,
        "range": [
          13,
          41,
        ],
        "start": 13,
        "type": "BlockStatement",
      },
      "end": 41,
      "generator": true,
      "id": {
        "end": 11,
        "name": "f",
        "range": [
          10,
          11,
        ],
        "start": 10,
        "type": "Identifier",
      },
      "params": [],
      "range": [
        0,
        41,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 41,
  "range": [
    0,
    41,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function *f(){   s = {foo: yield /x/g}   } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "end": 38,
            "expression": {
              "end": 38,
              "left": {
                "end": 18,
                "loc": {
                  "end": {
                    "column": 18,
                    "line": 1,
                  },
                  "start": {
                    "column": 17,
                    "line": 1,
                  },
                },
                "name": "s",
                "range": [
                  17,
                  18,
                ],
                "start": 17,
                "type": "Identifier",
              },
              "loc": {
                "end": {
                  "column": 38,
                  "line": 1,
                },
                "start": {
                  "column": 17,
                  "line": 1,
                },
              },
              "operator": "=",
              "range": [
                17,
                38,
              ],
              "right": {
                "end": 38,
                "loc": {
                  "end": {
                    "column": 38,
                    "line": 1,
                  },
                  "start": {
                    "column": 21,
                    "line": 1,
                  },
                },
                "properties": [
                  {
                    "computed": false,
                    "end": 37,
                    "key": {
                      "end": 25,
                      "loc": {
                        "end": {
                          "column": 25,
                          "line": 1,
                        },
                        "start": {
                          "column": 22,
                          "line": 1,
                        },
                      },
                      "name": "foo",
                      "range": [
                        22,
                        25,
                      ],
                      "start": 22,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "loc": {
                      "end": {
                        "column": 37,
                        "line": 1,
                      },
                      "start": {
                        "column": 22,
                        "line": 1,
                      },
                    },
                    "method": false,
                    "range": [
                      22,
                      37,
                    ],
                    "shorthand": false,
                    "start": 22,
                    "type": "Property",
                    "value": {
                      "argument": {
                        "end": 37,
                        "loc": {
                          "end": {
                            "column": 37,
                            "line": 1,
                          },
                          "start": {
                            "column": 33,
                            "line": 1,
                          },
                        },
                        "range": [
                          33,
                          37,
                        ],
                        "regex": {
                          "flags": "g",
                          "pattern": "x",
                        },
                        "start": 33,
                        "type": "Literal",
                        "value": /x/g,
                      },
                      "delegate": false,
                      "end": 37,
                      "loc": {
                        "end": {
                          "column": 37,
                          "line": 1,
                        },
                        "start": {
                          "column": 27,
                          "line": 1,
                        },
                      },
                      "range": [
                        27,
                        37,
                      ],
                      "start": 27,
                      "type": "YieldExpression",
                    },
                  },
                ],
                "range": [
                  21,
                  38,
                ],
                "start": 21,
                "type": "ObjectExpression",
              },
              "start": 17,
              "type": "AssignmentExpression",
            },
            "loc": {
              "end": {
                "column": 38,
                "line": 1,
              },
              "start": {
                "column": 17,
                "line": 1,
              },
            },
            "range": [
              17,
              38,
            ],
            "start": 17,
            "type": "ExpressionStatement",
          },
        ],
        "end": 42,
        "loc": {
          "end": {
            "column": 42,
            "line": 1,
          },
          "start": {
            "column": 13,
            "line": 1,
          },
        },
        "range": [
          13,
          42,
        ],
        "start": 13,
        "type": "BlockStatement",
      },
      "end": 42,
      "generator": true,
      "id": {
        "end": 11,
        "loc": {
          "end": {
            "column": 11,
            "line": 1,
          },
          "start": {
            "column": 10,
            "line": 1,
          },
        },
        "name": "f",
        "range": [
          10,
          11,
        ],
        "start": 10,
        "type": "Identifier",
      },
      "loc": {
        "end": {
          "column": 42,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "params": [],
      "range": [
        0,
        42,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 42,
  "loc": {
    "end": {
      "column": 42,
      "line": 1,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    42,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function *f(){   s = {foo: yield}   } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "expression": {
              "left": {
                "name": "s",
                "type": "Identifier",
              },
              "operator": "=",
              "right": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "foo",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "argument": null,
                      "delegate": false,
                      "type": "YieldExpression",
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
              "type": "AssignmentExpression",
            },
            "type": "ExpressionStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "generator": true,
      "id": {
        "name": "f",
        "type": "Identifier",
      },
      "params": [],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function f([...[a, b]]){} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "end": 25,
        "range": [
          23,
          25,
        ],
        "start": 23,
        "type": "BlockStatement",
      },
      "end": 25,
      "generator": false,
      "id": {
        "end": 10,
        "name": "f",
        "range": [
          9,
          10,
        ],
        "start": 9,
        "type": "Identifier",
      },
      "params": [
        {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "end": 17,
                    "name": "a",
                    "range": [
                      16,
                      17,
                    ],
                    "start": 16,
                    "type": "Identifier",
                  },
                  {
                    "end": 20,
                    "name": "b",
                    "range": [
                      19,
                      20,
                    ],
                    "start": 19,
                    "type": "Identifier",
                  },
                ],
                "end": 21,
                "range": [
                  15,
                  21,
                ],
                "start": 15,
                "type": "ArrayPattern",
              },
              "end": 21,
              "range": [
                12,
                21,
              ],
              "start": 12,
              "type": "RestElement",
            },
          ],
          "end": 22,
          "range": [
            11,
            22,
          ],
          "start": 11,
          "type": "ArrayPattern",
        },
      ],
      "range": [
        0,
        25,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 25,
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function f({ x, y, ...z }) {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "f",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "y",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "z",
                "type": "Identifier",
              },
              "type": "RestElement",
            },
          ],
          "type": "ObjectPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function f({...a}){} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "end": 20,
        "loc": {
          "end": {
            "column": 20,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "range": [
          18,
          20,
        ],
        "start": 18,
        "type": "BlockStatement",
      },
      "end": 20,
      "generator": false,
      "id": {
        "end": 10,
        "loc": {
          "end": {
            "column": 10,
            "line": 1,
          },
          "start": {
            "column": 9,
            "line": 1,
          },
        },
        "name": "f",
        "range": [
          9,
          10,
        ],
        "start": 9,
        "type": "Identifier",
      },
      "loc": {
        "end": {
          "column": 20,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "params": [
        {
          "end": 17,
          "loc": {
            "end": {
              "column": 17,
              "line": 1,
            },
            "start": {
              "column": 11,
              "line": 1,
            },
          },
          "properties": [
            {
              "argument": {
                "end": 16,
                "loc": {
                  "end": {
                    "column": 16,
                    "line": 1,
                  },
                  "start": {
                    "column": 15,
                    "line": 1,
                  },
                },
                "name": "a",
                "range": [
                  15,
                  16,
                ],
                "start": 15,
                "type": "Identifier",
              },
              "end": 16,
              "loc": {
                "end": {
                  "column": 16,
                  "line": 1,
                },
                "start": {
                  "column": 12,
                  "line": 1,
                },
              },
              "range": [
                12,
                16,
              ],
              "start": 12,
              "type": "RestElement",
            },
          ],
          "range": [
            11,
            17,
          ],
          "start": 11,
          "type": "ObjectPattern",
        },
      ],
      "range": [
        0,
        20,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 20,
  "loc": {
    "end": {
      "column": 20,
      "line": 1,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > function x([a, b]){} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "x",
        "type": "Identifier",
      },
      "params": [
        {
          "elements": [
            {
              "name": "a",
              "type": "Identifier",
            },
            {
              "name": "b",
              "type": "Identifier",
            },
          ],
          "type": "ArrayPattern",
        },
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > let { x4: { ...y4 } } = z; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 25,
          "id": {
            "end": 21,
            "properties": [
              {
                "computed": false,
                "end": 19,
                "key": {
                  "end": 8,
                  "name": "x4",
                  "range": [
                    6,
                    8,
                  ],
                  "start": 6,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  6,
                  19,
                ],
                "shorthand": false,
                "start": 6,
                "type": "Property",
                "value": {
                  "end": 19,
                  "properties": [
                    {
                      "argument": {
                        "end": 17,
                        "name": "y4",
                        "range": [
                          15,
                          17,
                        ],
                        "start": 15,
                        "type": "Identifier",
                      },
                      "end": 17,
                      "range": [
                        12,
                        17,
                      ],
                      "start": 12,
                      "type": "RestElement",
                    },
                  ],
                  "range": [
                    10,
                    19,
                  ],
                  "start": 10,
                  "type": "ObjectPattern",
                },
              },
            ],
            "range": [
              4,
              21,
            ],
            "start": 4,
            "type": "ObjectPattern",
          },
          "init": {
            "end": 25,
            "name": "z",
            "range": [
              24,
              25,
            ],
            "start": 24,
            "type": "Identifier",
          },
          "range": [
            4,
            25,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 26,
      "kind": "let",
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > let z = {...x} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "z",
            "type": "Identifier",
          },
          "init": {
            "properties": [
              {
                "argument": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "SpreadElement",
              },
            ],
            "type": "ObjectExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "let",
      "type": "VariableDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > o = {f(f) { }} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "o",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "f",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "f",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > o({async await() { }}) 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "await",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": true,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "o",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > result = [x[yield]] = vals; 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "result",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "elements": [
              {
                "computed": true,
                "object": {
                  "name": "x",
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "name": "yield",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            ],
            "type": "ArrayPattern",
          },
          "operator": "=",
          "right": {
            "name": "vals",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > s = {"foo": await = x} = x 1`] = `
{
  "body": [
    {
      "end": 26,
      "expression": {
        "end": 26,
        "left": {
          "end": 1,
          "name": "s",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          26,
        ],
        "right": {
          "end": 26,
          "left": {
            "end": 22,
            "properties": [
              {
                "computed": false,
                "end": 21,
                "key": {
                  "end": 10,
                  "range": [
                    5,
                    10,
                  ],
                  "start": 5,
                  "type": "Literal",
                  "value": "foo",
                },
                "kind": "init",
                "method": false,
                "range": [
                  5,
                  21,
                ],
                "shorthand": false,
                "start": 5,
                "type": "Property",
                "value": {
                  "end": 21,
                  "left": {
                    "end": 17,
                    "name": "await",
                    "range": [
                      12,
                      17,
                    ],
                    "start": 12,
                    "type": "Identifier",
                  },
                  "range": [
                    12,
                    21,
                  ],
                  "right": {
                    "end": 21,
                    "name": "x",
                    "range": [
                      20,
                      21,
                    ],
                    "start": 20,
                    "type": "Identifier",
                  },
                  "start": 12,
                  "type": "AssignmentPattern",
                },
              },
            ],
            "range": [
              4,
              22,
            ],
            "start": 4,
            "type": "ObjectPattern",
          },
          "operator": "=",
          "range": [
            4,
            26,
          ],
          "right": {
            "end": 26,
            "name": "x",
            "range": [
              25,
              26,
            ],
            "start": 25,
            "type": "Identifier",
          },
          "start": 4,
          "type": "AssignmentExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > s = {"foo": this} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "s",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "type": "ThisExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > s = {"foo": yield /x/g} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "s",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "left": {
                    "name": "yield",
                    "type": "Identifier",
                  },
                  "operator": "/",
                  "right": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "type": "BinaryExpression",
                },
                "operator": "/",
                "right": {
                  "name": "g",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > s = {foo: yield / x} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "s",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "name": "yield",
                  "type": "Identifier",
                },
                "operator": "/",
                "right": {
                  "name": "x",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > s = {foo: yield /x/g} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "s",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "left": {
                    "name": "yield",
                    "type": "Identifier",
                  },
                  "operator": "/",
                  "right": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "type": "BinaryExpression",
                },
                "operator": "/",
                "right": {
                  "name": "g",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > s = {foo: yield} 1`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 16,
        "left": {
          "end": 1,
          "name": "s",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          16,
        ],
        "right": {
          "end": 16,
          "properties": [
            {
              "computed": false,
              "end": 15,
              "key": {
                "end": 8,
                "name": "foo",
                "range": [
                  5,
                  8,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                5,
                15,
              ],
              "shorthand": false,
              "start": 5,
              "type": "Property",
              "value": {
                "end": 15,
                "name": "yield",
                "range": [
                  10,
                  15,
                ],
                "start": 10,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            4,
            16,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > s = {s: this} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "s",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "s",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "type": "ThisExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > s = {s: true} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "s",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "s",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "type": "Literal",
                "value": true,
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > someObject = { someKey: { ...mapGetters([ "some_val_1", "some_val_2" ]) } } 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "someObject",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "someKey",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "properties": [
                  {
                    "argument": {
                      "arguments": [
                        {
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "some_val_1",
                            },
                            {
                              "type": "Literal",
                              "value": "some_val_2",
                            },
                          ],
                          "type": "ArrayExpression",
                        },
                      ],
                      "callee": {
                        "name": "mapGetters",
                        "type": "Identifier",
                      },
                      "optional": false,
                      "type": "CallExpression",
                    },
                    "type": "SpreadElement",
                  },
                ],
                "type": "ObjectExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > var {  a, "b": b1, [\`c\`]: c1, [d + "e"]: d1, [\`\${d}e\`]: d2, ...e1 } = e; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 71,
          "id": {
            "end": 67,
            "properties": [
              {
                "computed": false,
                "end": 8,
                "key": {
                  "end": 8,
                  "name": "a",
                  "range": [
                    7,
                    8,
                  ],
                  "start": 7,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  7,
                  8,
                ],
                "shorthand": true,
                "start": 7,
                "type": "Property",
                "value": {
                  "end": 8,
                  "name": "a",
                  "range": [
                    7,
                    8,
                  ],
                  "start": 7,
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "end": 17,
                "key": {
                  "end": 13,
                  "range": [
                    10,
                    13,
                  ],
                  "raw": ""b"",
                  "start": 10,
                  "type": "Literal",
                  "value": "b",
                },
                "kind": "init",
                "method": false,
                "range": [
                  10,
                  17,
                ],
                "shorthand": false,
                "start": 10,
                "type": "Property",
                "value": {
                  "end": 17,
                  "name": "b1",
                  "range": [
                    15,
                    17,
                  ],
                  "start": 15,
                  "type": "Identifier",
                },
              },
              {
                "computed": true,
                "end": 28,
                "key": {
                  "end": 23,
                  "expressions": [],
                  "quasis": [
                    {
                      "end": 22,
                      "range": [
                        21,
                        22,
                      ],
                      "start": 21,
                      "tail": true,
                      "type": "TemplateElement",
                      "value": {
                        "cooked": "c",
                        "raw": "c",
                      },
                    },
                  ],
                  "range": [
                    20,
                    23,
                  ],
                  "start": 20,
                  "type": "TemplateLiteral",
                },
                "kind": "init",
                "method": false,
                "range": [
                  19,
                  28,
                ],
                "shorthand": false,
                "start": 19,
                "type": "Property",
                "value": {
                  "end": 28,
                  "name": "c1",
                  "range": [
                    26,
                    28,
                  ],
                  "start": 26,
                  "type": "Identifier",
                },
              },
              {
                "computed": true,
                "end": 43,
                "key": {
                  "end": 38,
                  "left": {
                    "end": 32,
                    "name": "d",
                    "range": [
                      31,
                      32,
                    ],
                    "start": 31,
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "range": [
                    31,
                    38,
                  ],
                  "right": {
                    "end": 38,
                    "range": [
                      35,
                      38,
                    ],
                    "raw": ""e"",
                    "start": 35,
                    "type": "Literal",
                    "value": "e",
                  },
                  "start": 31,
                  "type": "BinaryExpression",
                },
                "kind": "init",
                "method": false,
                "range": [
                  30,
                  43,
                ],
                "shorthand": false,
                "start": 30,
                "type": "Property",
                "value": {
                  "end": 43,
                  "name": "d1",
                  "range": [
                    41,
                    43,
                  ],
                  "start": 41,
                  "type": "Identifier",
                },
              },
              {
                "computed": true,
                "end": 58,
                "key": {
                  "end": 53,
                  "expressions": [
                    {
                      "end": 50,
                      "name": "d",
                      "range": [
                        49,
                        50,
                      ],
                      "start": 49,
                      "type": "Identifier",
                    },
                  ],
                  "quasis": [
                    {
                      "end": 47,
                      "range": [
                        47,
                        47,
                      ],
                      "start": 47,
                      "tail": false,
                      "type": "TemplateElement",
                      "value": {
                        "cooked": "",
                        "raw": "",
                      },
                    },
                    {
                      "end": 52,
                      "range": [
                        51,
                        52,
                      ],
                      "start": 51,
                      "tail": true,
                      "type": "TemplateElement",
                      "value": {
                        "cooked": "e",
                        "raw": "e",
                      },
                    },
                  ],
                  "range": [
                    46,
                    53,
                  ],
                  "start": 46,
                  "type": "TemplateLiteral",
                },
                "kind": "init",
                "method": false,
                "range": [
                  45,
                  58,
                ],
                "shorthand": false,
                "start": 45,
                "type": "Property",
                "value": {
                  "end": 58,
                  "name": "d2",
                  "range": [
                    56,
                    58,
                  ],
                  "start": 56,
                  "type": "Identifier",
                },
              },
              {
                "argument": {
                  "end": 65,
                  "name": "e1",
                  "range": [
                    63,
                    65,
                  ],
                  "start": 63,
                  "type": "Identifier",
                },
                "end": 65,
                "range": [
                  60,
                  65,
                ],
                "start": 60,
                "type": "RestElement",
              },
            ],
            "range": [
              4,
              67,
            ],
            "start": 4,
            "type": "ObjectPattern",
          },
          "init": {
            "end": 71,
            "name": "e",
            "range": [
              70,
              71,
            ],
            "start": 70,
            "type": "Identifier",
          },
          "range": [
            4,
            71,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 72,
      "kind": "var",
      "range": [
        0,
        72,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 72,
  "range": [
    0,
    72,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > var a = { __proto__: { abc: 123 } }; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 35,
          "id": {
            "end": 5,
            "name": "a",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "end": 35,
            "properties": [
              {
                "computed": false,
                "end": 33,
                "key": {
                  "end": 19,
                  "name": "__proto__",
                  "range": [
                    10,
                    19,
                  ],
                  "start": 10,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  10,
                  33,
                ],
                "shorthand": false,
                "start": 10,
                "type": "Property",
                "value": {
                  "end": 33,
                  "properties": [
                    {
                      "computed": false,
                      "end": 31,
                      "key": {
                        "end": 26,
                        "name": "abc",
                        "range": [
                          23,
                          26,
                        ],
                        "start": 23,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        23,
                        31,
                      ],
                      "shorthand": false,
                      "start": 23,
                      "type": "Property",
                      "value": {
                        "end": 31,
                        "range": [
                          28,
                          31,
                        ],
                        "start": 28,
                        "type": "Literal",
                        "value": 123,
                      },
                    },
                  ],
                  "range": [
                    21,
                    33,
                  ],
                  "start": 21,
                  "type": "ObjectExpression",
                },
              },
            ],
            "range": [
              8,
              35,
            ],
            "start": 8,
            "type": "ObjectExpression",
          },
          "range": [
            4,
            35,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 36,
      "kind": "var",
      "range": [
        0,
        36,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 36,
  "range": [
    0,
    36,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > var b = { ["__proto__"]: { abc: 123 }}; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 38,
          "id": {
            "end": 5,
            "name": "b",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "end": 38,
            "properties": [
              {
                "computed": true,
                "end": 37,
                "key": {
                  "end": 22,
                  "range": [
                    11,
                    22,
                  ],
                  "start": 11,
                  "type": "Literal",
                  "value": "__proto__",
                },
                "kind": "init",
                "method": false,
                "range": [
                  10,
                  37,
                ],
                "shorthand": false,
                "start": 10,
                "type": "Property",
                "value": {
                  "end": 37,
                  "properties": [
                    {
                      "computed": false,
                      "end": 35,
                      "key": {
                        "end": 30,
                        "name": "abc",
                        "range": [
                          27,
                          30,
                        ],
                        "start": 27,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        27,
                        35,
                      ],
                      "shorthand": false,
                      "start": 27,
                      "type": "Property",
                      "value": {
                        "end": 35,
                        "range": [
                          32,
                          35,
                        ],
                        "start": 32,
                        "type": "Literal",
                        "value": 123,
                      },
                    },
                  ],
                  "range": [
                    25,
                    37,
                  ],
                  "start": 25,
                  "type": "ObjectExpression",
                },
              },
            ],
            "range": [
              8,
              38,
            ],
            "start": 8,
            "type": "ObjectExpression",
          },
          "range": [
            4,
            38,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 39,
      "kind": "var",
      "range": [
        0,
        39,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 39,
  "range": [
    0,
    39,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > var callCount = 0;

  var C = class { static async *gen() {
      callCount += 1;
      yield {
          ...yield,
          y: 1,
          ...yield yield,
        };
  }} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 17,
          "id": {
            "end": 13,
            "name": "callCount",
            "range": [
              4,
              13,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "end": 17,
            "range": [
              16,
              17,
            ],
            "start": 16,
            "type": "Literal",
            "value": 0,
          },
          "range": [
            4,
            17,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 18,
      "kind": "var",
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
    {
      "declarations": [
        {
          "end": 173,
          "id": {
            "end": 27,
            "name": "C",
            "range": [
              26,
              27,
            ],
            "start": 26,
            "type": "Identifier",
          },
          "init": {
            "body": {
              "body": [
                {
                  "computed": false,
                  "end": 172,
                  "key": {
                    "end": 55,
                    "name": "gen",
                    "range": [
                      52,
                      55,
                    ],
                    "start": 52,
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "range": [
                    38,
                    172,
                  ],
                  "start": 38,
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": true,
                    "body": {
                      "body": [
                        {
                          "end": 81,
                          "expression": {
                            "end": 80,
                            "left": {
                              "end": 75,
                              "name": "callCount",
                              "range": [
                                66,
                                75,
                              ],
                              "start": 66,
                              "type": "Identifier",
                            },
                            "operator": "+=",
                            "range": [
                              66,
                              80,
                            ],
                            "right": {
                              "end": 80,
                              "range": [
                                79,
                                80,
                              ],
                              "start": 79,
                              "type": "Literal",
                              "value": 1,
                            },
                            "start": 66,
                            "type": "AssignmentExpression",
                          },
                          "range": [
                            66,
                            81,
                          ],
                          "start": 66,
                          "type": "ExpressionStatement",
                        },
                        {
                          "end": 168,
                          "expression": {
                            "argument": {
                              "end": 167,
                              "properties": [
                                {
                                  "argument": {
                                    "argument": null,
                                    "delegate": false,
                                    "end": 114,
                                    "range": [
                                      109,
                                      114,
                                    ],
                                    "start": 109,
                                    "type": "YieldExpression",
                                  },
                                  "end": 114,
                                  "range": [
                                    106,
                                    114,
                                  ],
                                  "start": 106,
                                  "type": "SpreadElement",
                                },
                                {
                                  "computed": false,
                                  "end": 130,
                                  "key": {
                                    "end": 127,
                                    "name": "y",
                                    "range": [
                                      126,
                                      127,
                                    ],
                                    "start": 126,
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "range": [
                                    126,
                                    130,
                                  ],
                                  "shorthand": false,
                                  "start": 126,
                                  "type": "Property",
                                  "value": {
                                    "end": 130,
                                    "range": [
                                      129,
                                      130,
                                    ],
                                    "start": 129,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                },
                                {
                                  "argument": {
                                    "argument": {
                                      "argument": null,
                                      "delegate": false,
                                      "end": 156,
                                      "range": [
                                        151,
                                        156,
                                      ],
                                      "start": 151,
                                      "type": "YieldExpression",
                                    },
                                    "delegate": false,
                                    "end": 156,
                                    "range": [
                                      145,
                                      156,
                                    ],
                                    "start": 145,
                                    "type": "YieldExpression",
                                  },
                                  "end": 156,
                                  "range": [
                                    142,
                                    156,
                                  ],
                                  "start": 142,
                                  "type": "SpreadElement",
                                },
                              ],
                              "range": [
                                94,
                                167,
                              ],
                              "start": 94,
                              "type": "ObjectExpression",
                            },
                            "delegate": false,
                            "end": 167,
                            "range": [
                              88,
                              167,
                            ],
                            "start": 88,
                            "type": "YieldExpression",
                          },
                          "range": [
                            88,
                            168,
                          ],
                          "start": 88,
                          "type": "ExpressionStatement",
                        },
                      ],
                      "end": 172,
                      "range": [
                        58,
                        172,
                      ],
                      "start": 58,
                      "type": "BlockStatement",
                    },
                    "end": 172,
                    "generator": true,
                    "id": null,
                    "params": [],
                    "range": [
                      55,
                      172,
                    ],
                    "start": 55,
                    "type": "FunctionExpression",
                  },
                },
              ],
              "end": 173,
              "range": [
                36,
                173,
              ],
              "start": 36,
              "type": "ClassBody",
            },
            "end": 173,
            "id": null,
            "range": [
              30,
              173,
            ],
            "start": 30,
            "superClass": null,
            "type": "ClassExpression",
          },
          "range": [
            26,
            173,
          ],
          "start": 26,
          "type": "VariableDeclarator",
        },
      ],
      "end": 173,
      "kind": "var",
      "range": [
        22,
        173,
      ],
      "start": 22,
      "type": "VariableDeclaration",
    },
  ],
  "end": 173,
  "range": [
    0,
    173,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > var someObject = { someKey: { ...mapGetters([ "some_val_1", "some_val_2" ]) } } 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "someObject",
            "type": "Identifier",
          },
          "init": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "someKey",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "properties": [
                    {
                      "argument": {
                        "arguments": [
                          {
                            "elements": [
                              {
                                "type": "Literal",
                                "value": "some_val_1",
                              },
                              {
                                "type": "Literal",
                                "value": "some_val_2",
                              },
                            ],
                            "type": "ArrayExpression",
                          },
                        ],
                        "callee": {
                          "name": "mapGetters",
                          "type": "Identifier",
                        },
                        "optional": false,
                        "type": "CallExpression",
                      },
                      "type": "SpreadElement",
                    },
                  ],
                  "type": "ObjectExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "type": "VariableDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({"a":b, "c":d}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "type": "Literal",
                    "value": "a",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "b",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "type": "Literal",
                    "value": "c",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "d",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({"a":b}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "type": "Literal",
                    "value": "a",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "b",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({* foo(){},*bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({*"foo"(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "foo",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({*[foo](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({*123(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": 123,
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({*async(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "async",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({*foo(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({*get(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "get",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({*set(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "set",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": true,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({[a]:b, [15]:d}=obj); 1`] = `
{
  "body": [
    {
      "end": 26,
      "expression": {
        "arguments": [
          {
            "end": 24,
            "left": {
              "end": 20,
              "properties": [
                {
                  "computed": true,
                  "end": 11,
                  "key": {
                    "end": 8,
                    "name": "a",
                    "range": [
                      7,
                      8,
                    ],
                    "start": 7,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    6,
                    11,
                  ],
                  "shorthand": false,
                  "start": 6,
                  "type": "Property",
                  "value": {
                    "end": 11,
                    "name": "b",
                    "range": [
                      10,
                      11,
                    ],
                    "start": 10,
                    "type": "Identifier",
                  },
                },
                {
                  "computed": true,
                  "end": 19,
                  "key": {
                    "end": 16,
                    "range": [
                      14,
                      16,
                    ],
                    "start": 14,
                    "type": "Literal",
                    "value": 15,
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    13,
                    19,
                  ],
                  "shorthand": false,
                  "start": 13,
                  "type": "Property",
                  "value": {
                    "end": 19,
                    "name": "d",
                    "range": [
                      18,
                      19,
                    ],
                    "start": 18,
                    "type": "Identifier",
                  },
                },
              ],
              "range": [
                5,
                20,
              ],
              "start": 5,
              "type": "ObjectPattern",
            },
            "operator": "=",
            "range": [
              5,
              24,
            ],
            "right": {
              "end": 24,
              "name": "obj",
              "range": [
                21,
                24,
              ],
              "start": 21,
              "type": "Identifier",
            },
            "start": 5,
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "end": 4,
          "name": "wrap",
          "range": [
            0,
            4,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "end": 25,
        "optional": false,
        "range": [
          0,
          25,
        ],
        "start": 0,
        "type": "CallExpression",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({[a]:b}=obj); 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "arguments": [
          {
            "end": 16,
            "left": {
              "end": 12,
              "properties": [
                {
                  "computed": true,
                  "end": 11,
                  "key": {
                    "end": 8,
                    "name": "a",
                    "range": [
                      7,
                      8,
                    ],
                    "start": 7,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    6,
                    11,
                  ],
                  "shorthand": false,
                  "start": 6,
                  "type": "Property",
                  "value": {
                    "end": 11,
                    "name": "b",
                    "range": [
                      10,
                      11,
                    ],
                    "start": 10,
                    "type": "Identifier",
                  },
                },
              ],
              "range": [
                5,
                12,
              ],
              "start": 5,
              "type": "ObjectPattern",
            },
            "operator": "=",
            "range": [
              5,
              16,
            ],
            "right": {
              "end": 16,
              "name": "obj",
              "range": [
                13,
                16,
              ],
              "start": 13,
              "type": "Identifier",
            },
            "start": 5,
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "end": 4,
          "name": "wrap",
          "range": [
            0,
            4,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "end": 17,
        "optional": false,
        "range": [
          0,
          17,
        ],
        "start": 0,
        "type": "CallExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({[foo](){}, get [bar](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": true,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({}=x); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "x",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({1:b, 2:d}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": 1,
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": 2,
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "d",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a, b}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "a",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "b",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "b",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a, c:d}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "a",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "c",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "d",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a:b, c:d}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "b",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "c",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "d",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a:b, c}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "b",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "c",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "c",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a:b=x}=y); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "b",
                      "type": "Identifier",
                    },
                    "right": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "y",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a:b}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "name": "b",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a:v=b}=c); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "v",
                      "type": "Identifier",
                    },
                    "right": {
                      "name": "b",
                      "type": "Identifier",
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "c",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a=b}=c); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "right": {
                      "name": "b",
                      "type": "Identifier",
                    },
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "c",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({a}=obj); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "a",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "obj",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({async "foo"(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "foo",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": true,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({async [foo](){}}); 1`] = `
{
  "body": [
    {
      "end": 24,
      "expression": {
        "arguments": [
          {
            "end": 22,
            "properties": [
              {
                "computed": true,
                "end": 21,
                "key": {
                  "end": 16,
                  "name": "foo",
                  "range": [
                    13,
                    16,
                  ],
                  "start": 13,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "range": [
                  6,
                  21,
                ],
                "shorthand": false,
                "start": 6,
                "type": "Property",
                "value": {
                  "async": true,
                  "body": {
                    "body": [],
                    "end": 21,
                    "range": [
                      19,
                      21,
                    ],
                    "start": 19,
                    "type": "BlockStatement",
                  },
                  "end": 21,
                  "generator": false,
                  "id": null,
                  "params": [],
                  "range": [
                    17,
                    21,
                  ],
                  "start": 17,
                  "type": "FunctionExpression",
                },
              },
            ],
            "range": [
              5,
              22,
            ],
            "start": 5,
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "end": 4,
          "name": "wrap",
          "range": [
            0,
            4,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "end": 23,
        "optional": false,
        "range": [
          0,
          23,
        ],
        "start": 0,
        "type": "CallExpression",
      },
      "range": [
        0,
        24,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 24,
  "range": [
    0,
    24,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({async 100(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": 100,
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": true,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({foo(){}, async bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": true,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({foo(){}, get bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get "foo"(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "foo",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get [foo](){}, [bar](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": true,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get [foo](){}, get [bar](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": true,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get [foo](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get 123(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": 123,
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get foo(){}, bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get foo(){}, get bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get foo(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({get get(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "get",
                  "type": "Identifier",
                },
                "kind": "get",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set "foo"(a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "foo",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "a",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set [foo]([a, b]){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "elements": [
                        {
                          "name": "a",
                          "type": "Identifier",
                        },
                        {
                          "name": "b",
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrayPattern",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set [foo](a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "a",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set [foo](b){}, set [bar](d){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "b",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": true,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "d",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set [foo](c){}, [bar](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": true,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "c",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": true,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set 123(a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": 123,
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "a",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set foo(b){}, set bar(d){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "b",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "d",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set foo(c){}, bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "foo",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "c",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > wrap({set get(a){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [
          {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "get",
                  "type": "Identifier",
                },
                "kind": "set",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "name": "a",
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ObjectExpression",
          },
        ],
        "callee": {
          "name": "wrap",
          "type": "Identifier",
        },
        "optional": false,
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({"a":b, "c":d}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "c",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({"a":b, "c":d}); 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "c",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({"a":b}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({"a":b}); 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({"foo"(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({* foo(){}, bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({* foo(){},*bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({*"foo"(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({*[foo](){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({*123(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 123,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({*async(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({*foo(){}}); 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "end": 16,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          16,
        ],
        "right": {
          "end": 15,
          "properties": [
            {
              "computed": false,
              "end": 14,
              "key": {
                "end": 10,
                "name": "foo",
                "range": [
                  7,
                  10,
                ],
                "start": 7,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                6,
                14,
              ],
              "shorthand": false,
              "start": 6,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 14,
                  "range": [
                    12,
                    14,
                  ],
                  "start": 12,
                  "type": "BlockStatement",
                },
                "end": 14,
                "generator": true,
                "id": null,
                "params": [],
                "range": [
                  10,
                  14,
                ],
                "start": 10,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            5,
            15,
          ],
          "start": 5,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({*get(){}}); 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "end": 16,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          16,
        ],
        "right": {
          "end": 15,
          "properties": [
            {
              "computed": false,
              "end": 14,
              "key": {
                "end": 10,
                "name": "get",
                "range": [
                  7,
                  10,
                ],
                "start": 7,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                6,
                14,
              ],
              "shorthand": false,
              "start": 6,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 14,
                  "range": [
                    12,
                    14,
                  ],
                  "start": 12,
                  "type": "BlockStatement",
                },
                "end": 14,
                "generator": true,
                "id": null,
                "params": [],
                "range": [
                  10,
                  14,
                ],
                "start": 10,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            5,
            15,
          ],
          "start": 5,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({[a]:b, [15]:d}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": true,
              "key": {
                "type": "Literal",
                "value": 15,
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({[a]:b}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({1(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 1,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({a, c:d} = x); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "a",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "c",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "d",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({a, c:d}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "c",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({a:b, c:d}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "c",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({a:b, c} = x); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "c",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "c",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({a:b, c}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "c",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "c",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({async "foo"(){}}); 1`] = `
{
  "body": [
    {
      "end": 24,
      "expression": {
        "end": 23,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          23,
        ],
        "right": {
          "end": 22,
          "properties": [
            {
              "computed": false,
              "end": 21,
              "key": {
                "end": 17,
                "range": [
                  12,
                  17,
                ],
                "start": 12,
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": true,
              "range": [
                6,
                21,
              ],
              "shorthand": false,
              "start": 6,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 21,
                  "range": [
                    19,
                    21,
                  ],
                  "start": 19,
                  "type": "BlockStatement",
                },
                "end": 21,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  17,
                  21,
                ],
                "start": 17,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            5,
            22,
          ],
          "start": 5,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        24,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 24,
  "range": [
    0,
    24,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({async 100(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 100,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({async async(){}}); 1`] = `
{
  "body": [
    {
      "end": 24,
      "expression": {
        "end": 23,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          23,
        ],
        "right": {
          "end": 22,
          "properties": [
            {
              "computed": false,
              "end": 21,
              "key": {
                "end": 17,
                "name": "async",
                "range": [
                  12,
                  17,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                6,
                21,
              ],
              "shorthand": false,
              "start": 6,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 21,
                  "range": [
                    19,
                    21,
                  ],
                  "start": 19,
                  "type": "BlockStatement",
                },
                "end": 21,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  17,
                  21,
                ],
                "start": 17,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            5,
            22,
          ],
          "start": 5,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        24,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 24,
  "range": [
    0,
    24,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({async foo(){}, async bar(){}}); 1`] = `
{
  "body": [
    {
      "end": 37,
      "expression": {
        "end": 36,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          36,
        ],
        "right": {
          "end": 35,
          "properties": [
            {
              "computed": false,
              "end": 19,
              "key": {
                "end": 15,
                "name": "foo",
                "range": [
                  12,
                  15,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                6,
                19,
              ],
              "shorthand": false,
              "start": 6,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 19,
                  "range": [
                    17,
                    19,
                  ],
                  "start": 17,
                  "type": "BlockStatement",
                },
                "end": 19,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  15,
                  19,
                ],
                "start": 15,
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "end": 34,
              "key": {
                "end": 30,
                "name": "bar",
                "range": [
                  27,
                  30,
                ],
                "start": 27,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                21,
                34,
              ],
              "shorthand": false,
              "start": 21,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 34,
                  "range": [
                    32,
                    34,
                  ],
                  "start": 32,
                  "type": "BlockStatement",
                },
                "end": 34,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  30,
                  34,
                ],
                "start": 30,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            5,
            35,
          ],
          "start": 5,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        37,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 37,
  "range": [
    0,
    37,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({async foo(){}, bar(){}}); 1`] = `
{
  "body": [
    {
      "end": 31,
      "expression": {
        "end": 30,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          30,
        ],
        "right": {
          "end": 29,
          "properties": [
            {
              "computed": false,
              "end": 19,
              "key": {
                "end": 15,
                "name": "foo",
                "range": [
                  12,
                  15,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                6,
                19,
              ],
              "shorthand": false,
              "start": 6,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 19,
                  "range": [
                    17,
                    19,
                  ],
                  "start": 17,
                  "type": "BlockStatement",
                },
                "end": 19,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  15,
                  19,
                ],
                "start": 15,
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "end": 28,
              "key": {
                "end": 24,
                "name": "bar",
                "range": [
                  21,
                  24,
                ],
                "start": 21,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                21,
                28,
              ],
              "shorthand": false,
              "start": 21,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 28,
                  "range": [
                    26,
                    28,
                  ],
                  "start": 26,
                  "type": "BlockStatement",
                },
                "end": 28,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  24,
                  28,
                ],
                "start": 24,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            5,
            29,
          ],
          "start": 5,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        31,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 31,
  "range": [
    0,
    31,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({async foo(){}}); 1`] = `
{
  "body": [
    {
      "end": 22,
      "expression": {
        "end": 21,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          21,
        ],
        "right": {
          "end": 20,
          "properties": [
            {
              "computed": false,
              "end": 19,
              "key": {
                "end": 15,
                "name": "foo",
                "range": [
                  12,
                  15,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                6,
                19,
              ],
              "shorthand": false,
              "start": 6,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 19,
                  "range": [
                    17,
                    19,
                  ],
                  "start": 17,
                  "type": "BlockStatement",
                },
                "end": 19,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  15,
                  19,
                ],
                "start": 15,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            5,
            20,
          ],
          "start": 5,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        22,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 22,
  "range": [
    0,
    22,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({async get(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({async(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({foo(){}, *bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({foo(){}, async bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({foo(){}, bar(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({foo(){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = ({foo(a,b,c){}}); 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                  {
                    "name": "b",
                    "type": "Identifier",
                  },
                  {
                    "name": "c",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = { *a() {} } 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = { async *[y](){} } 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"a":b, "c":d} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "c",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"a":b} 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 11,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          11,
        ],
        "right": {
          "end": 11,
          "properties": [
            {
              "computed": false,
              "end": 10,
              "key": {
                "end": 8,
                "range": [
                  5,
                  8,
                ],
                "start": 5,
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "range": [
                5,
                10,
              ],
              "shorthand": false,
              "start": 5,
              "type": "Property",
              "value": {
                "end": 10,
                "name": "b",
                "range": [
                  9,
                  10,
                ],
                "start": 9,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            4,
            11,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"foo"(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": [y + x]} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "elements": [
                  {
                    "left": {
                      "name": "y",
                      "type": "Identifier",
                    },
                    "operator": "+",
                    "right": {
                      "name": "x",
                      "type": "Identifier",
                    },
                    "type": "BinaryExpression",
                  },
                ],
                "type": "ArrayExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": [y].slice(0)} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 0,
                  },
                ],
                "callee": {
                  "computed": false,
                  "object": {
                    "elements": [
                      {
                        "name": "y",
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrayExpression",
                  },
                  "optional": false,
                  "property": {
                    "name": "slice",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
                "optional": false,
                "type": "CallExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": [y]} = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "x",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "elements": [
                    {
                      "name": "y",
                      "type": "Identifier",
                    },
                  ],
                  "type": "ArrayPattern",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": [y]} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "elements": [
                  {
                    "name": "y",
                    "type": "Identifier",
                  },
                ],
                "type": "ArrayExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": {a: y + x}.slice(0)} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 0,
                  },
                ],
                "callee": {
                  "computed": false,
                  "object": {
                    "properties": [
                      {
                        "computed": false,
                        "key": {
                          "name": "a",
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false,
                        "type": "Property",
                        "value": {
                          "left": {
                            "name": "y",
                            "type": "Identifier",
                          },
                          "operator": "+",
                          "right": {
                            "name": "x",
                            "type": "Identifier",
                          },
                          "type": "BinaryExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "optional": false,
                  "property": {
                    "name": "slice",
                    "type": "Identifier",
                  },
                  "type": "MemberExpression",
                },
                "optional": false,
                "type": "CallExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": {a: y + x}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "a",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "left": {
                        "name": "y",
                        "type": "Identifier",
                      },
                      "operator": "+",
                      "right": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": {y: z}} = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "type": "Literal",
                  "value": "x",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "y",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false,
                      "type": "Property",
                      "value": {
                        "name": "z",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": {y: z}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "y",
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false,
                    "type": "Property",
                    "value": {
                      "name": "z",
                      "type": "Identifier",
                    },
                  },
                ],
                "type": "ObjectExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": 600..xyz} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "computed": false,
                "object": {
                  "type": "Literal",
                  "value": 600,
                },
                "optional": false,
                "property": {
                  "name": "xyz",
                  "type": "Identifier",
                },
                "type": "MemberExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": 600} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "type": "Literal",
                "value": 600,
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {"x": y+z} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "name": "y",
                  "type": "Identifier",
                },
                "operator": "+",
                "right": {
                  "name": "z",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {* foo(){}, bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {* foo(){},*bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {*"foo"(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {*[foo](){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {*123(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 123,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {*async(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {*foo(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {*get(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {*set(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "set",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...[a, b]} 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 15,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          15,
        ],
        "right": {
          "end": 15,
          "properties": [
            {
              "argument": {
                "elements": [
                  {
                    "end": 10,
                    "name": "a",
                    "range": [
                      9,
                      10,
                    ],
                    "start": 9,
                    "type": "Identifier",
                  },
                  {
                    "end": 13,
                    "name": "b",
                    "range": [
                      12,
                      13,
                    ],
                    "start": 12,
                    "type": "Identifier",
                  },
                ],
                "end": 14,
                "range": [
                  8,
                  14,
                ],
                "start": 8,
                "type": "ArrayExpression",
              },
              "end": 14,
              "range": [
                5,
                14,
              ],
              "start": 5,
              "type": "SpreadElement",
            },
          ],
          "range": [
            4,
            15,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...{a, b}} 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 15,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          15,
        ],
        "right": {
          "end": 15,
          "properties": [
            {
              "argument": {
                "end": 14,
                "properties": [
                  {
                    "computed": false,
                    "end": 10,
                    "key": {
                      "end": 10,
                      "name": "a",
                      "range": [
                        9,
                        10,
                      ],
                      "start": 9,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      9,
                      10,
                    ],
                    "shorthand": true,
                    "start": 9,
                    "type": "Property",
                    "value": {
                      "end": 10,
                      "name": "a",
                      "range": [
                        9,
                        10,
                      ],
                      "start": 9,
                      "type": "Identifier",
                    },
                  },
                  {
                    "computed": false,
                    "end": 13,
                    "key": {
                      "end": 13,
                      "name": "b",
                      "range": [
                        12,
                        13,
                      ],
                      "start": 12,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      12,
                      13,
                    ],
                    "shorthand": true,
                    "start": 12,
                    "type": "Property",
                    "value": {
                      "end": 13,
                      "name": "b",
                      "range": [
                        12,
                        13,
                      ],
                      "start": 12,
                      "type": "Identifier",
                    },
                  },
                ],
                "range": [
                  8,
                  14,
                ],
                "start": 8,
                "type": "ObjectExpression",
              },
              "end": 14,
              "range": [
                5,
                14,
              ],
              "start": 5,
              "type": "SpreadElement",
            },
          ],
          "range": [
            4,
            15,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...a + b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "argument": {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "operator": "+",
                "right": {
                  "name": "b",
                  "type": "Identifier",
                },
                "type": "BinaryExpression",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...a + b} 2`] = `
{
  "body": [
    {
      "end": 14,
      "expression": {
        "end": 14,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          14,
        ],
        "right": {
          "end": 14,
          "properties": [
            {
              "argument": {
                "end": 13,
                "left": {
                  "end": 9,
                  "name": "a",
                  "range": [
                    8,
                    9,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
                "operator": "+",
                "range": [
                  8,
                  13,
                ],
                "right": {
                  "end": 13,
                  "name": "b",
                  "range": [
                    12,
                    13,
                  ],
                  "start": 12,
                  "type": "Identifier",
                },
                "start": 8,
                "type": "BinaryExpression",
              },
              "end": 13,
              "range": [
                5,
                13,
              ],
              "start": 5,
              "type": "SpreadElement",
            },
          ],
          "range": [
            4,
            14,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...a, ...b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "argument": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
            {
              "argument": {
                "name": "b",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...a,} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "argument": {
                "name": "a",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...a=b} 1`] = `
{
  "body": [
    {
      "end": 12,
      "expression": {
        "end": 12,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          12,
        ],
        "right": {
          "end": 12,
          "properties": [
            {
              "argument": {
                "end": 11,
                "left": {
                  "end": 9,
                  "name": "a",
                  "range": [
                    8,
                    9,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
                "operator": "=",
                "range": [
                  8,
                  11,
                ],
                "right": {
                  "end": 11,
                  "name": "b",
                  "range": [
                    10,
                    11,
                  ],
                  "start": 10,
                  "type": "Identifier",
                },
                "start": 8,
                "type": "AssignmentExpression",
              },
              "end": 11,
              "range": [
                5,
                11,
              ],
              "start": 5,
              "type": "SpreadElement",
            },
          ],
          "range": [
            4,
            12,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...a=b} 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "argument": {
                "left": {
                  "name": "a",
                  "type": "Identifier",
                },
                "operator": "=",
                "right": {
                  "name": "b",
                  "type": "Identifier",
                },
                "type": "AssignmentExpression",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...y, b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
            {
              "computed": false,
              "key": {
                "name": "b",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...y} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {...y} 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {.9(){}, 0x84(){}, 0b1(){}, 0o27(){}, 1e234(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 0.9,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 132,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 1,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 23,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 1e+234,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {.9:a, 0x84:b, 0b1:c, 0o27:d, 1e234:e} 1`] = `
{
  "body": [
    {
      "end": 42,
      "expression": {
        "end": 42,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          42,
        ],
        "right": {
          "end": 42,
          "properties": [
            {
              "computed": false,
              "end": 9,
              "key": {
                "end": 7,
                "range": [
                  5,
                  7,
                ],
                "start": 5,
                "type": "Literal",
                "value": 0.9,
              },
              "kind": "init",
              "method": false,
              "range": [
                5,
                9,
              ],
              "shorthand": false,
              "start": 5,
              "type": "Property",
              "value": {
                "end": 9,
                "name": "a",
                "range": [
                  8,
                  9,
                ],
                "start": 8,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 17,
              "key": {
                "end": 15,
                "range": [
                  11,
                  15,
                ],
                "start": 11,
                "type": "Literal",
                "value": 132,
              },
              "kind": "init",
              "method": false,
              "range": [
                11,
                17,
              ],
              "shorthand": false,
              "start": 11,
              "type": "Property",
              "value": {
                "end": 17,
                "name": "b",
                "range": [
                  16,
                  17,
                ],
                "start": 16,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 24,
              "key": {
                "end": 22,
                "range": [
                  19,
                  22,
                ],
                "start": 19,
                "type": "Literal",
                "value": 1,
              },
              "kind": "init",
              "method": false,
              "range": [
                19,
                24,
              ],
              "shorthand": false,
              "start": 19,
              "type": "Property",
              "value": {
                "end": 24,
                "name": "c",
                "range": [
                  23,
                  24,
                ],
                "start": 23,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 32,
              "key": {
                "end": 30,
                "range": [
                  26,
                  30,
                ],
                "start": 26,
                "type": "Literal",
                "value": 23,
              },
              "kind": "init",
              "method": false,
              "range": [
                26,
                32,
              ],
              "shorthand": false,
              "start": 26,
              "type": "Property",
              "value": {
                "end": 32,
                "name": "d",
                "range": [
                  31,
                  32,
                ],
                "start": 31,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 41,
              "key": {
                "end": 39,
                "range": [
                  34,
                  39,
                ],
                "start": 34,
                "type": "Literal",
                "value": 1e+234,
              },
              "kind": "init",
              "method": false,
              "range": [
                34,
                41,
              ],
              "shorthand": false,
              "start": 34,
              "type": "Property",
              "value": {
                "end": 41,
                "name": "e",
                "range": [
                  40,
                  41,
                ],
                "start": 40,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            4,
            42,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        42,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 42,
  "range": [
    0,
    42,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {[a]:b, [15]:d} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": true,
              "key": {
                "type": "Literal",
                "value": 15,
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {[a]:b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {[foo](){}, get [bar](){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": true,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {__proto__(){}, __proto__(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "__proto__",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "__proto__",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {__proto__(){}, __proto__: 2} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "__proto__",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "__proto__",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "type": "Literal",
                "value": 2,
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {__proto__: a, __proto__: b} = y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "__proto__",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "a",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "__proto__",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "y",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {0(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 0,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {1:b, 0:d} 1`] = `
{
  "body": [
    {
      "end": 14,
      "expression": {
        "end": 14,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          14,
        ],
        "right": {
          "end": 14,
          "properties": [
            {
              "computed": false,
              "end": 8,
              "key": {
                "end": 6,
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Literal",
                "value": 1,
              },
              "kind": "init",
              "method": false,
              "range": [
                5,
                8,
              ],
              "shorthand": false,
              "start": 5,
              "type": "Property",
              "value": {
                "end": 8,
                "name": "b",
                "range": [
                  7,
                  8,
                ],
                "start": 7,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 13,
              "key": {
                "end": 11,
                "range": [
                  10,
                  11,
                ],
                "start": 10,
                "type": "Literal",
                "value": 0,
              },
              "kind": "init",
              "method": false,
              "range": [
                10,
                13,
              ],
              "shorthand": false,
              "start": 10,
              "type": "Property",
              "value": {
                "end": 13,
                "name": "d",
                "range": [
                  12,
                  13,
                ],
                "start": 12,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            4,
            14,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {15:b} 1`] = `
{
  "body": [
    {
      "end": 10,
      "expression": {
        "end": 10,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          10,
        ],
        "right": {
          "end": 10,
          "properties": [
            {
              "computed": false,
              "end": 9,
              "key": {
                "end": 7,
                "range": [
                  5,
                  7,
                ],
                "start": 5,
                "type": "Literal",
                "value": 15,
              },
              "kind": "init",
              "method": false,
              "range": [
                5,
                9,
              ],
              "shorthand": false,
              "start": 5,
              "type": "Property",
              "value": {
                "end": 9,
                "name": "b",
                "range": [
                  8,
                  9,
                ],
                "start": 8,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            4,
            10,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        10,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 10,
  "range": [
    0,
    10,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a, ...y, b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
            {
              "computed": false,
              "key": {
                "name": "b",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a, ...y, b} 2`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 16,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          16,
        ],
        "right": {
          "end": 16,
          "properties": [
            {
              "computed": false,
              "end": 6,
              "key": {
                "end": 6,
                "name": "a",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                5,
                6,
              ],
              "shorthand": true,
              "start": 5,
              "type": "Property",
              "value": {
                "end": 6,
                "name": "a",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "end": 12,
                "name": "y",
                "range": [
                  11,
                  12,
                ],
                "start": 11,
                "type": "Identifier",
              },
              "end": 12,
              "range": [
                8,
                12,
              ],
              "start": 8,
              "type": "SpreadElement",
            },
            {
              "computed": false,
              "end": 15,
              "key": {
                "end": 15,
                "name": "b",
                "range": [
                  14,
                  15,
                ],
                "start": 14,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                14,
                15,
              ],
              "shorthand": true,
              "start": 14,
              "type": "Property",
              "value": {
                "end": 15,
                "name": "b",
                "range": [
                  14,
                  15,
                ],
                "start": 14,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            4,
            16,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a, b} = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "a",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "b",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a, b} = y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "a",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "b",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "y",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a, b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "b",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a, c:d} = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "a",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "c",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "d",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a, c:d} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "a",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "c",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a:b, c:d} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "c",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "d",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a:b, c} = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "a",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "type": "Property",
                "value": {
                  "name": "b",
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "c",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "c",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {a:b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {arguments} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "arguments",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "arguments",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async "foo"(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async [foo](){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async __proto__(){}, *__proto__(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "__proto__",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "__proto__",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async 100(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 100,
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async async(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async foo(){}, async bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async foo(){}, bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async foo(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async:b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async} = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "async",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "async",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {async} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "async",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {await}  = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "await",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "await",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {eval} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "eval",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "eval",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {foo(){}, *bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {foo(){}, async bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {foo(){}, get bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {foo: true / false} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "left": {
                  "type": "Literal",
                  "value": true,
                },
                "operator": "/",
                "right": {
                  "type": "Literal",
                  "value": false,
                },
                "type": "BinaryExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {foo: typeof x} 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "end": 19,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          19,
        ],
        "right": {
          "end": 19,
          "properties": [
            {
              "computed": false,
              "end": 18,
              "key": {
                "end": 8,
                "name": "foo",
                "range": [
                  5,
                  8,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                5,
                18,
              ],
              "shorthand": false,
              "start": 5,
              "type": "Property",
              "value": {
                "argument": {
                  "end": 18,
                  "name": "x",
                  "range": [
                    17,
                    18,
                  ],
                  "start": 17,
                  "type": "Identifier",
                },
                "end": 18,
                "operator": "typeof",
                "prefix": true,
                "range": [
                  10,
                  18,
                ],
                "start": 10,
                "type": "UnaryExpression",
              },
            },
          ],
          "range": [
            4,
            19,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get "foo"(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get [foo](){}, [bar](){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": true,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get [foo](){}, get [bar](){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": true,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get [foo](){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get 123(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 123,
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get foo(){}, bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get foo(){}, get bar(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get foo(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get get(){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "get",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get:b} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "name": "b",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get} = x 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "left": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "get",
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "get",
                  "type": "Identifier",
                },
              },
            ],
            "type": "ObjectPattern",
          },
          "operator": "=",
          "right": {
            "name": "x",
            "type": "Identifier",
          },
          "type": "AssignmentExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {get} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "get",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {set foo(a){}} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "set",
              "method": false,
              "shorthand": false,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {set get(a){}} 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "end": 18,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          18,
        ],
        "right": {
          "end": 18,
          "properties": [
            {
              "computed": false,
              "end": 17,
              "key": {
                "end": 12,
                "name": "get",
                "range": [
                  9,
                  12,
                ],
                "start": 9,
                "type": "Identifier",
              },
              "kind": "set",
              "method": false,
              "range": [
                5,
                17,
              ],
              "shorthand": false,
              "start": 5,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 17,
                  "range": [
                    15,
                    17,
                  ],
                  "start": 15,
                  "type": "BlockStatement",
                },
                "end": 17,
                "generator": false,
                "id": null,
                "params": [
                  {
                    "end": 14,
                    "name": "a",
                    "range": [
                      13,
                      14,
                    ],
                    "start": 13,
                    "type": "Identifier",
                  },
                ],
                "range": [
                  12,
                  17,
                ],
                "start": 12,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            4,
            18,
          ],
          "start": 4,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {x, ...y} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x = {x, ...y} 2`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x, {foo = y, bar} = doo 1`] = `
{
  "body": [
    {
      "expression": {
        "expressions": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "foo",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "left": {
                      "name": "foo",
                      "type": "Identifier",
                    },
                    "right": {
                      "name": "y",
                      "type": "Identifier",
                    },
                    "type": "AssignmentPattern",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "bar",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "bar",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "doo",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "SequenceExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x, {foo, bar} = doo 1`] = `
{
  "body": [
    {
      "expression": {
        "expressions": [
          {
            "name": "x",
            "type": "Identifier",
          },
          {
            "left": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "foo",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "foo",
                    "type": "Identifier",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "bar",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": true,
                  "type": "Property",
                  "value": {
                    "name": "bar",
                    "type": "Identifier",
                  },
                },
              ],
              "type": "ObjectPattern",
            },
            "operator": "=",
            "right": {
              "name": "doo",
              "type": "Identifier",
            },
            "type": "AssignmentExpression",
          },
        ],
        "type": "SequenceExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x= { prototype(){} } 1`] = `
{
  "body": [
    {
      "end": 20,
      "expression": {
        "end": 20,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          20,
        ],
        "right": {
          "end": 20,
          "properties": [
            {
              "computed": false,
              "end": 18,
              "key": {
                "end": 14,
                "name": "prototype",
                "range": [
                  5,
                  14,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "kind": "init",
              "method": true,
              "range": [
                5,
                18,
              ],
              "shorthand": false,
              "start": 5,
              "type": "Property",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 18,
                  "range": [
                    16,
                    18,
                  ],
                  "start": 16,
                  "type": "BlockStatement",
                },
                "end": 18,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  14,
                  18,
                ],
                "start": 14,
                "type": "FunctionExpression",
              },
            },
          ],
          "range": [
            3,
            20,
          ],
          "start": 3,
          "type": "ObjectExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        20,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > x={...true} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "argument": {
                "type": "Literal",
                "value": true,
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Object > Expressions - Object (pass) > z = {x, ...y} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "z",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "shorthand": true,
              "type": "Property",
              "value": {
                "name": "x",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "y",
                "type": "Identifier",
              },
              "type": "SpreadElement",
            },
          ],
          "type": "ObjectExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;
