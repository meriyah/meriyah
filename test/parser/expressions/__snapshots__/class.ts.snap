// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"constructor"(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "constructor",
              },
              "kind": "constructor",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"constructor"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "constructor",
              },
              "kind": "constructor",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"constructor"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "constructor",
              },
              "kind": "constructor",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"constructor"(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "constructor",
              },
              "kind": "constructor",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"set"(){} "get"(){} "async"(){}}) 1`] = `
{
  "body": [
    {
      "end": 43,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 19,
              "key": {
                "end": 15,
                "range": [
                  10,
                  15,
                ],
                "start": 10,
                "type": "Literal",
                "value": "set",
              },
              "kind": "method",
              "range": [
                10,
                19,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 19,
                  "range": [
                    17,
                    19,
                  ],
                  "start": 17,
                  "type": "BlockStatement",
                },
                "end": 19,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  15,
                  19,
                ],
                "start": 15,
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "end": 29,
              "key": {
                "end": 25,
                "range": [
                  20,
                  25,
                ],
                "start": 20,
                "type": "Literal",
                "value": "get",
              },
              "kind": "method",
              "range": [
                20,
                29,
              ],
              "start": 20,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 29,
                  "range": [
                    27,
                    29,
                  ],
                  "start": 27,
                  "type": "BlockStatement",
                },
                "end": 29,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  25,
                  29,
                ],
                "start": 25,
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "end": 41,
              "key": {
                "end": 37,
                "range": [
                  30,
                  37,
                ],
                "start": 30,
                "type": "Literal",
                "value": "async",
              },
              "kind": "method",
              "range": [
                30,
                41,
              ],
              "start": 30,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 41,
                  "range": [
                    39,
                    41,
                  ],
                  "start": 39,
                  "type": "BlockStatement",
                },
                "end": 41,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  37,
                  41,
                ],
                "start": 37,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 42,
          "range": [
            9,
            42,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 42,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          42,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        43,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 43,
  "range": [
    0,
    43,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"set"(){} "get"(){} "async"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "set",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "get",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "async",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"set"(){} "get"(){} "async"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "set",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "get",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "async",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"set"(){} "get"(){} "async"(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "set",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "get",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "async",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"x"(){}}) 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 17,
              "key": {
                "end": 13,
                "range": [
                  10,
                  13,
                ],
                "start": 10,
                "type": "Literal",
                "value": "x",
              },
              "kind": "method",
              "range": [
                10,
                17,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 17,
                  "range": [
                    15,
                    17,
                  ],
                  "start": 15,
                  "type": "BlockStatement",
                },
                "end": 17,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  13,
                  17,
                ],
                "start": 13,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 18,
          "range": [
            9,
            18,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 18,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          18,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"x"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"x"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {"x"(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*"foo"(){}}) 1`] = `
{
  "body": [
    {
      "end": 22,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 20,
              "key": {
                "end": 16,
                "range": [
                  11,
                  16,
                ],
                "start": 11,
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "range": [
                10,
                20,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 20,
                  "range": [
                    18,
                    20,
                  ],
                  "start": 18,
                  "type": "BlockStatement",
                },
                "end": 20,
                "generator": true,
                "id": null,
                "params": [],
                "range": [
                  16,
                  20,
                ],
                "start": 16,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 21,
          "range": [
            9,
            21,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 21,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          21,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        22,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 22,
  "range": [
    0,
    22,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*"foo"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*"foo"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*"foo"(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*[foo](){}}) 1`] = `
{
  "body": [
    {
      "end": 22,
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "end": 20,
              "key": {
                "end": 15,
                "name": "foo",
                "range": [
                  12,
                  15,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                10,
                20,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 20,
                  "range": [
                    18,
                    20,
                  ],
                  "start": 18,
                  "type": "BlockStatement",
                },
                "end": 20,
                "generator": true,
                "id": null,
                "params": [],
                "range": [
                  16,
                  20,
                ],
                "start": 16,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 21,
          "range": [
            9,
            21,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 21,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          21,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        22,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 22,
  "range": [
    0,
    22,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*[foo](){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*[foo](){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*4(){}}) 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 16,
              "key": {
                "end": 12,
                "range": [
                  11,
                  12,
                ],
                "start": 11,
                "type": "Literal",
                "value": 4,
              },
              "kind": "method",
              "range": [
                10,
                16,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 16,
                  "range": [
                    14,
                    16,
                  ],
                  "start": 14,
                  "type": "BlockStatement",
                },
                "end": 16,
                "generator": true,
                "id": null,
                "params": [],
                "range": [
                  12,
                  16,
                ],
                "start": 12,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 17,
          "range": [
            9,
            17,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 17,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          17,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*foo(){}}) 1`] = `
{
  "body": [
    {
      "end": 20,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 18,
              "key": {
                "end": 14,
                "name": "foo",
                "range": [
                  11,
                  14,
                ],
                "start": 11,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                10,
                18,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 18,
                  "range": [
                    16,
                    18,
                  ],
                  "start": 16,
                  "type": "BlockStatement",
                },
                "end": 18,
                "generator": true,
                "id": null,
                "params": [],
                "range": [
                  14,
                  18,
                ],
                "start": 14,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 19,
          "range": [
            9,
            19,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 19,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          19,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        20,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*foo(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {*foo(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {; ;; ;}) 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "body": {
          "body": [],
          "end": 17,
          "range": [
            9,
            17,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 17,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          17,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {[a](){}}) 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "end": 17,
              "key": {
                "end": 12,
                "name": "a",
                "range": [
                  11,
                  12,
                ],
                "start": 11,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                10,
                17,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 17,
                  "range": [
                    15,
                    17,
                  ],
                  "start": 15,
                  "type": "BlockStatement",
                },
                "end": 17,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  13,
                  17,
                ],
                "start": 13,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 18,
          "range": [
            9,
            18,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 18,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          18,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {[a](){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {[a](){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {1(){}}) 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 15,
              "key": {
                "end": 11,
                "range": [
                  10,
                  11,
                ],
                "start": 10,
                "type": "Literal",
                "value": 1,
              },
              "kind": "method",
              "range": [
                10,
                15,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 15,
                  "range": [
                    13,
                    15,
                  ],
                  "start": 13,
                  "type": "BlockStatement",
                },
                "end": 15,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  11,
                  15,
                ],
                "start": 11,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 16,
          "range": [
            9,
            16,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 16,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          16,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {1(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 1,
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {a(){}}) 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 15,
              "key": {
                "end": 11,
                "name": "a",
                "range": [
                  10,
                  11,
                ],
                "start": 10,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                10,
                15,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 15,
                  "range": [
                    13,
                    15,
                  ],
                  "start": 13,
                  "type": "BlockStatement",
                },
                "end": 15,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  11,
                  15,
                ],
                "start": 11,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 16,
          "range": [
            9,
            16,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 16,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          16,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async "foo"(){}}) 1`] = `
{
  "body": [
    {
      "end": 27,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 25,
              "key": {
                "end": 21,
                "range": [
                  16,
                  21,
                ],
                "start": 16,
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "range": [
                10,
                25,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 25,
                  "range": [
                    23,
                    25,
                  ],
                  "start": 23,
                  "type": "BlockStatement",
                },
                "end": 25,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  21,
                  25,
                ],
                "start": 21,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 26,
          "range": [
            9,
            26,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 26,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          26,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        27,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 27,
  "range": [
    0,
    27,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async "foo"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async "foo"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async "foo"(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async * 34(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 34,
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async * 34(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 34,
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async * 34(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 34,
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async 3(){}}) 1`] = `
{
  "body": [
    {
      "end": 23,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 21,
              "key": {
                "end": 17,
                "range": [
                  16,
                  17,
                ],
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "kind": "method",
              "range": [
                10,
                21,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 21,
                  "range": [
                    19,
                    21,
                  ],
                  "start": 19,
                  "type": "BlockStatement",
                },
                "end": 21,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  17,
                  21,
                ],
                "start": 17,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 22,
          "range": [
            9,
            22,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 22,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          22,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        23,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 23,
  "range": [
    0,
    23,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async foo(){}}) 1`] = `
{
  "body": [
    {
      "end": 25,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 23,
              "key": {
                "end": 19,
                "name": "foo",
                "range": [
                  16,
                  19,
                ],
                "start": 16,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                10,
                23,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "end": 23,
                  "range": [
                    21,
                    23,
                  ],
                  "start": 21,
                  "type": "BlockStatement",
                },
                "end": 23,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  19,
                  23,
                ],
                "start": 19,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 24,
          "range": [
            9,
            24,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 24,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          24,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        25,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 25,
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async foo(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {async foo(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {constructor(){}}) 1`] = `
{
  "body": [
    {
      "end": 27,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 25,
              "key": {
                "end": 21,
                "name": "constructor",
                "range": [
                  10,
                  21,
                ],
                "start": 10,
                "type": "Identifier",
              },
              "kind": "constructor",
              "range": [
                10,
                25,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 25,
                  "range": [
                    23,
                    25,
                  ],
                  "start": 23,
                  "type": "BlockStatement",
                },
                "end": 25,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  21,
                  25,
                ],
                "start": 21,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 26,
          "range": [
            9,
            26,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 26,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          26,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        27,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 27,
  "range": [
    0,
    27,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get "foo"(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get "foo"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get "foo"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get "foo"(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get "set"(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "set",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get "set"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "set",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get "set"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "set",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get "set"(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "set",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get [foo](){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get [foo](){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get [foo](){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get 5(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 5,
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get 5(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 5,
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get 5(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 5,
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get foo(){}}) 1`] = `
{
  "body": [
    {
      "end": 23,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 21,
              "key": {
                "end": 17,
                "name": "foo",
                "range": [
                  14,
                  17,
                ],
                "start": 14,
                "type": "Identifier",
              },
              "kind": "get",
              "range": [
                10,
                21,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 21,
                  "range": [
                    19,
                    21,
                  ],
                  "start": 19,
                  "type": "BlockStatement",
                },
                "end": 21,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  17,
                  21,
                ],
                "start": 17,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 22,
          "range": [
            9,
            22,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 22,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          22,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        23,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 23,
  "range": [
    0,
    23,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get foo(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get foo(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get set(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "set",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {get set(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "set",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set "foo"(x){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set "foo"(x){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set "foo"(x){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set "foo"(x){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set "get"(x){}}) 1`] = `
{
  "body": [
    {
      "end": 26,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 24,
              "key": {
                "end": 19,
                "range": [
                  14,
                  19,
                ],
                "start": 14,
                "type": "Literal",
                "value": "get",
              },
              "kind": "set",
              "range": [
                10,
                24,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 24,
                  "range": [
                    22,
                    24,
                  ],
                  "start": 22,
                  "type": "BlockStatement",
                },
                "end": 24,
                "generator": false,
                "id": null,
                "params": [
                  {
                    "end": 21,
                    "name": "x",
                    "range": [
                      20,
                      21,
                    ],
                    "start": 20,
                    "type": "Identifier",
                  },
                ],
                "range": [
                  19,
                  24,
                ],
                "start": 19,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 25,
          "range": [
            9,
            25,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 25,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          25,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set "get"(x){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "get",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set "get"(x){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "get",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set "get"(x){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "get",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set [foo](x){}}) 1`] = `
{
  "body": [
    {
      "end": 26,
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "end": 24,
              "key": {
                "end": 18,
                "name": "foo",
                "range": [
                  15,
                  18,
                ],
                "start": 15,
                "type": "Identifier",
              },
              "kind": "set",
              "range": [
                10,
                24,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 24,
                  "range": [
                    22,
                    24,
                  ],
                  "start": 22,
                  "type": "BlockStatement",
                },
                "end": 24,
                "generator": false,
                "id": null,
                "params": [
                  {
                    "end": 21,
                    "name": "x",
                    "range": [
                      20,
                      21,
                    ],
                    "start": 20,
                    "type": "Identifier",
                  },
                ],
                "range": [
                  19,
                  24,
                ],
                "start": 19,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 25,
          "range": [
            9,
            25,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 25,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          25,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set [foo](x){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set [foo](x){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set 9(x){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 9,
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set 9(x){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 9,
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set 9(x){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 9,
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set foo(x){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set foo(x){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set foo(x){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set get(x){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set get(x){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set get(x){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set(){} get(){} async(){}}) 1`] = `
{
  "body": [
    {
      "end": 37,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 17,
              "key": {
                "end": 13,
                "name": "set",
                "range": [
                  10,
                  13,
                ],
                "start": 10,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                10,
                17,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 17,
                  "range": [
                    15,
                    17,
                  ],
                  "start": 15,
                  "type": "BlockStatement",
                },
                "end": 17,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  13,
                  17,
                ],
                "start": 13,
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "end": 25,
              "key": {
                "end": 21,
                "name": "get",
                "range": [
                  18,
                  21,
                ],
                "start": 18,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                18,
                25,
              ],
              "start": 18,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 25,
                  "range": [
                    23,
                    25,
                  ],
                  "start": 23,
                  "type": "BlockStatement",
                },
                "end": 25,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  21,
                  25,
                ],
                "start": 21,
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "end": 35,
              "key": {
                "end": 31,
                "name": "async",
                "range": [
                  26,
                  31,
                ],
                "start": 26,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                26,
                35,
              ],
              "start": 26,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 35,
                  "range": [
                    33,
                    35,
                  ],
                  "start": 33,
                  "type": "BlockStatement",
                },
                "end": 35,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  31,
                  35,
                ],
                "start": 31,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 36,
          "range": [
            9,
            36,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 36,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          36,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        37,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 37,
  "range": [
    0,
    37,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set(){} get(){} async(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "set",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set(){} get(){} async(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "set",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {set(){} get(){} async(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "set",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "get",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "async",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static "constructor"(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "constructor",
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static "constructor"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "constructor",
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static "x"(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "x",
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static 2(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 2,
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static 2(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 2,
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static 2(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 2,
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static a(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static a(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "a",
                "type": "Identifier",
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static constructor(){}}) 1`] = `
{
  "body": [
    {
      "end": 34,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 32,
              "key": {
                "end": 28,
                "name": "constructor",
                "range": [
                  17,
                  28,
                ],
                "start": 17,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                10,
                32,
              ],
              "start": 10,
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 32,
                  "range": [
                    30,
                    32,
                  ],
                  "start": 30,
                  "type": "BlockStatement",
                },
                "end": 32,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  28,
                  32,
                ],
                "start": 28,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 33,
          "range": [
            9,
            33,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 33,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          33,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        34,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 34,
  "range": [
    0,
    34,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static constructor(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "constructor",
                "type": "Identifier",
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static constructor(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "constructor",
                "type": "Identifier",
              },
              "kind": "method",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static get "foo"(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "get",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static get "foo"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "get",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static get "foo"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "get",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static get foo(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "get",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static set "foo"(x){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "set",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static set "foo"(x){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "set",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static set "foo"(x){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "set",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A {static set foo(x){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "set",
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "x",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A extends {} {}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": {
          "properties": [],
          "type": "ObjectExpression",
        },
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A extends B { constructor() { super() } }) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "constructor",
                "type": "Identifier",
              },
              "kind": "constructor",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [
                    {
                      "expression": {
                        "arguments": [],
                        "callee": {
                          "type": "Super",
                        },
                        "type": "CallExpression",
                      },
                      "type": "ExpressionStatement",
                    },
                  ],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "A",
          "type": "Identifier",
        },
        "superClass": {
          "name": "B",
          "type": "Identifier",
        },
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A extends B { constructor() { super() } }) 2`] = `
{
  "body": [
    {
      "end": 49,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 46,
              "key": {
                "end": 32,
                "name": "constructor",
                "range": [
                  21,
                  32,
                ],
                "start": 21,
                "type": "Identifier",
              },
              "kind": "constructor",
              "range": [
                21,
                46,
              ],
              "start": 21,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [
                    {
                      "end": 44,
                      "expression": {
                        "arguments": [],
                        "callee": {
                          "end": 42,
                          "range": [
                            37,
                            42,
                          ],
                          "start": 37,
                          "type": "Super",
                        },
                        "end": 44,
                        "range": [
                          37,
                          44,
                        ],
                        "start": 37,
                        "type": "CallExpression",
                      },
                      "range": [
                        37,
                        44,
                      ],
                      "start": 37,
                      "type": "ExpressionStatement",
                    },
                  ],
                  "end": 46,
                  "range": [
                    35,
                    46,
                  ],
                  "start": 35,
                  "type": "BlockStatement",
                },
                "end": 46,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  32,
                  46,
                ],
                "start": 32,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 48,
          "range": [
            19,
            48,
          ],
          "start": 19,
          "type": "ClassBody",
        },
        "end": 48,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          48,
        ],
        "start": 1,
        "superClass": {
          "end": 18,
          "name": "B",
          "range": [
            17,
            18,
          ],
          "start": 17,
          "type": "Identifier",
        },
        "type": "ClassExpression",
      },
      "range": [
        0,
        49,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 49,
  "range": [
    0,
    49,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A extends B {}) 1`] = `
{
  "body": [
    {
      "end": 22,
      "expression": {
        "body": {
          "body": [],
          "end": 21,
          "range": [
            19,
            21,
          ],
          "start": 19,
          "type": "ClassBody",
        },
        "end": 21,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          21,
        ],
        "start": 1,
        "superClass": {
          "end": 18,
          "name": "B",
          "range": [
            17,
            18,
          ],
          "start": 17,
          "type": "Identifier",
        },
        "type": "ClassExpression",
      },
      "range": [
        0,
        22,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 22,
  "range": [
    0,
    22,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class A extends foo() {}) 1`] = `
{
  "body": [
    {
      "end": 26,
      "expression": {
        "body": {
          "body": [],
          "end": 25,
          "range": [
            23,
            25,
          ],
          "start": 23,
          "type": "ClassBody",
        },
        "end": 25,
        "id": {
          "end": 8,
          "name": "A",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          25,
        ],
        "start": 1,
        "superClass": {
          "arguments": [],
          "callee": {
            "end": 20,
            "name": "foo",
            "range": [
              17,
              20,
            ],
            "start": 17,
            "type": "Identifier",
          },
          "end": 22,
          "range": [
            17,
            22,
          ],
          "start": 17,
          "type": "CallExpression",
        },
        "type": "ClassExpression",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class M { static foo() {} get foo() {} set foo(x) {}}) 1`] = `
{
  "body": [
    {
      "end": 55,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 26,
              "key": {
                "end": 21,
                "name": "foo",
                "range": [
                  18,
                  21,
                ],
                "start": 18,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                11,
                26,
              ],
              "start": 11,
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 26,
                  "range": [
                    24,
                    26,
                  ],
                  "start": 24,
                  "type": "BlockStatement",
                },
                "end": 26,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  21,
                  26,
                ],
                "start": 21,
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "end": 39,
              "key": {
                "end": 34,
                "name": "foo",
                "range": [
                  31,
                  34,
                ],
                "start": 31,
                "type": "Identifier",
              },
              "kind": "get",
              "range": [
                27,
                39,
              ],
              "start": 27,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 39,
                  "range": [
                    37,
                    39,
                  ],
                  "start": 37,
                  "type": "BlockStatement",
                },
                "end": 39,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  34,
                  39,
                ],
                "start": 34,
                "type": "FunctionExpression",
              },
            },
            {
              "computed": false,
              "end": 53,
              "key": {
                "end": 47,
                "name": "foo",
                "range": [
                  44,
                  47,
                ],
                "start": 44,
                "type": "Identifier",
              },
              "kind": "set",
              "range": [
                40,
                53,
              ],
              "start": 40,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "end": 53,
                  "range": [
                    51,
                    53,
                  ],
                  "start": 51,
                  "type": "BlockStatement",
                },
                "end": 53,
                "generator": false,
                "id": null,
                "params": [
                  {
                    "end": 49,
                    "name": "x",
                    "range": [
                      48,
                      49,
                    ],
                    "start": 48,
                    "type": "Identifier",
                  },
                ],
                "range": [
                  47,
                  53,
                ],
                "start": 47,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 54,
          "range": [
            9,
            54,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 54,
        "id": {
          "end": 8,
          "name": "M",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          54,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        55,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 55,
  "range": [
    0,
    55,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class OnlyStaticSetter { static set setter(x) { p("ssetter " + x) } }) 1`] = `
{
  "body": [
    {
      "end": 71,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 68,
              "key": {
                "end": 43,
                "name": "setter",
                "range": [
                  37,
                  43,
                ],
                "start": 37,
                "type": "Identifier",
              },
              "kind": "set",
              "range": [
                26,
                68,
              ],
              "start": 26,
              "static": true,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [
                    {
                      "end": 66,
                      "expression": {
                        "arguments": [
                          {
                            "end": 65,
                            "left": {
                              "end": 61,
                              "range": [
                                51,
                                61,
                              ],
                              "start": 51,
                              "type": "Literal",
                              "value": "ssetter ",
                            },
                            "operator": "+",
                            "range": [
                              51,
                              65,
                            ],
                            "right": {
                              "end": 65,
                              "name": "x",
                              "range": [
                                64,
                                65,
                              ],
                              "start": 64,
                              "type": "Identifier",
                            },
                            "start": 51,
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": {
                          "end": 50,
                          "name": "p",
                          "range": [
                            49,
                            50,
                          ],
                          "start": 49,
                          "type": "Identifier",
                        },
                        "end": 66,
                        "range": [
                          49,
                          66,
                        ],
                        "start": 49,
                        "type": "CallExpression",
                      },
                      "range": [
                        49,
                        66,
                      ],
                      "start": 49,
                      "type": "ExpressionStatement",
                    },
                  ],
                  "end": 68,
                  "range": [
                    47,
                    68,
                  ],
                  "start": 47,
                  "type": "BlockStatement",
                },
                "end": 68,
                "generator": false,
                "id": null,
                "params": [
                  {
                    "end": 45,
                    "name": "x",
                    "range": [
                      44,
                      45,
                    ],
                    "start": 44,
                    "type": "Identifier",
                  },
                ],
                "range": [
                  43,
                  68,
                ],
                "start": 43,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 70,
          "range": [
            24,
            70,
          ],
          "start": 24,
          "type": "ClassBody",
        },
        "end": 70,
        "id": {
          "end": 23,
          "name": "OnlyStaticSetter",
          "range": [
            7,
            23,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          70,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        71,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 71,
  "range": [
    0,
    71,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class o {f(){ function x(){}}}) 1`] = `
{
  "body": [
    {
      "end": 32,
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "end": 30,
              "key": {
                "end": 11,
                "name": "f",
                "range": [
                  10,
                  11,
                ],
                "start": 10,
                "type": "Identifier",
              },
              "kind": "method",
              "range": [
                10,
                30,
              ],
              "start": 10,
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [
                    {
                      "async": false,
                      "body": {
                        "body": [],
                        "end": 29,
                        "range": [
                          27,
                          29,
                        ],
                        "start": 27,
                        "type": "BlockStatement",
                      },
                      "end": 29,
                      "generator": false,
                      "id": {
                        "end": 25,
                        "name": "x",
                        "range": [
                          24,
                          25,
                        ],
                        "start": 24,
                        "type": "Identifier",
                      },
                      "params": [],
                      "range": [
                        15,
                        29,
                      ],
                      "start": 15,
                      "type": "FunctionDeclaration",
                    },
                  ],
                  "end": 30,
                  "range": [
                    13,
                    30,
                  ],
                  "start": 13,
                  "type": "BlockStatement",
                },
                "end": 30,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  11,
                  30,
                ],
                "start": 11,
                "type": "FunctionExpression",
              },
            },
          ],
          "end": 31,
          "range": [
            9,
            31,
          ],
          "start": 9,
          "type": "ClassBody",
        },
        "end": 31,
        "id": {
          "end": 8,
          "name": "o",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          1,
          31,
        ],
        "start": 1,
        "superClass": null,
        "type": "ClassExpression",
      },
      "range": [
        0,
        32,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 32,
  "range": [
    0,
    32,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class o {f(f) { }}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "f",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "f",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "o",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { *[y](){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { *[y](){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { *[y](){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { async *[y](){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { async *[y](){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { async *[y](){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { async *[y](){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { get [y](){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { get [y](){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { get [y](){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { get [y](){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "get",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { set [y](z){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "z",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { set [y](z){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "z",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { set [y](z){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "z",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x { set [y](z){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "y",
                "type": "Identifier",
              },
              "kind": "set",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": false,
                "id": null,
                "params": [
                  {
                    "name": "z",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x {}()) 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [],
        "callee": {
          "body": {
            "body": [],
            "type": "ClassBody",
          },
          "id": {
            "name": "x",
            "type": "Identifier",
          },
          "superClass": null,
          "type": "ClassExpression",
        },
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x {}.foo()) 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [],
        "callee": {
          "computed": false,
          "object": {
            "body": {
              "body": [],
              "type": "ClassBody",
            },
            "id": {
              "name": "x",
              "type": "Identifier",
            },
            "superClass": null,
            "type": "ClassExpression",
          },
          "property": {
            "name": "foo",
            "type": "Identifier",
          },
          "type": "MemberExpression",
        },
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x {}.foo) 1`] = `
{
  "body": [
    {
      "expression": {
        "computed": false,
        "object": {
          "body": {
            "body": [],
            "type": "ClassBody",
          },
          "id": {
            "name": "x",
            "type": "Identifier",
          },
          "superClass": null,
          "type": "ClassExpression",
        },
        "property": {
          "name": "foo",
          "type": "Identifier",
        },
        "type": "MemberExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*"foo"(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*"foo"(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*"foo"(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*"foo"(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*[x](){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*[x](){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*[x](){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*[x](){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*555(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 555,
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*555(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 555,
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*foo(){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*foo(){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*foo(){}}) 3`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{*foo(){}}) 4`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": false,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{}()) 1`] = `
{
  "body": [
    {
      "end": 13,
      "expression": {
        "arguments": [],
        "callee": {
          "body": {
            "body": [],
            "end": 10,
            "range": [
              8,
              10,
            ],
            "start": 8,
            "type": "ClassBody",
          },
          "end": 10,
          "id": {
            "end": 8,
            "name": "x",
            "range": [
              7,
              8,
            ],
            "start": 7,
            "type": "Identifier",
          },
          "range": [
            1,
            10,
          ],
          "start": 1,
          "superClass": null,
          "type": "ClassExpression",
        },
        "end": 12,
        "range": [
          1,
          12,
        ],
        "start": 1,
        "type": "CallExpression",
      },
      "range": [
        0,
        13,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 13,
  "range": [
    0,
    13,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{}.foo()) 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "arguments": [],
        "callee": {
          "computed": false,
          "end": 14,
          "object": {
            "body": {
              "body": [],
              "end": 10,
              "range": [
                8,
                10,
              ],
              "start": 8,
              "type": "ClassBody",
            },
            "end": 10,
            "id": {
              "end": 8,
              "name": "x",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
            "range": [
              1,
              10,
            ],
            "start": 1,
            "superClass": null,
            "type": "ClassExpression",
          },
          "property": {
            "end": 14,
            "name": "foo",
            "range": [
              11,
              14,
            ],
            "start": 11,
            "type": "Identifier",
          },
          "range": [
            1,
            14,
          ],
          "start": 1,
          "type": "MemberExpression",
        },
        "end": 16,
        "range": [
          1,
          16,
        ],
        "start": 1,
        "type": "CallExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{}.foo) 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "computed": false,
        "end": 14,
        "object": {
          "body": {
            "body": [],
            "end": 10,
            "range": [
              8,
              10,
            ],
            "start": 8,
            "type": "ClassBody",
          },
          "end": 10,
          "id": {
            "end": 8,
            "name": "x",
            "range": [
              7,
              8,
            ],
            "start": 7,
            "type": "Identifier",
          },
          "range": [
            1,
            10,
          ],
          "start": 1,
          "superClass": null,
          "type": "ClassExpression",
        },
        "property": {
          "end": 14,
          "name": "foo",
          "range": [
            11,
            14,
          ],
          "start": 11,
          "type": "Identifier",
        },
        "range": [
          1,
          14,
        ],
        "start": 1,
        "type": "MemberExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{async *"foo"(a){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{async *"foo"(a){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": "foo",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{async *[x](a){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{async *[x](a){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": true,
              "key": {
                "name": "x",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{async *555(a){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 555,
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{async *555(a){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "type": "Literal",
                "value": 555,
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{async *foo(a){}}) 1`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class x{async *foo(a){}}) 2`] = `
{
  "body": [
    {
      "expression": {
        "body": {
          "body": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "kind": "method",
              "static": false,
              "type": "MethodDefinition",
              "value": {
                "async": true,
                "body": {
                  "body": [],
                  "type": "BlockStatement",
                },
                "generator": true,
                "id": null,
                "params": [
                  {
                    "name": "a",
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
            },
          ],
          "type": "ClassBody",
        },
        "id": {
          "name": "x",
          "type": "Identifier",
        },
        "superClass": null,
        "type": "ClassExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > (class{} 
 / foo / g) 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "left": {
            "body": {
              "body": [],
              "type": "ClassBody",
            },
            "id": null,
            "superClass": null,
            "type": "ClassExpression",
          },
          "operator": "/",
          "right": {
            "name": "foo",
            "type": "Identifier",
          },
          "type": "BinaryExpression",
        },
        "operator": "/",
        "right": {
          "name": "g",
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class A {
        constructor() {
          count++;
        }
        increment() {
          count++;
        }
        decrement() {
          count--;
        }
        getCount()
        {
          return count;
        }
        1() { return 1; }
        2() { return 2; }
        1.1() { return 1.1; }
        2.2() { return 2.2; }
        static [1+3]() { return 4; }
        [1.1+1]() { return 2.1; }
        ["foo"+1]() { return "foo1"; }
        [sym1](){return "bart";}
      } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "argument": {
                        "name": "count",
                        "type": "Identifier",
                      },
                      "operator": "++",
                      "prefix": false,
                      "type": "UpdateExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "increment",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "argument": {
                        "name": "count",
                        "type": "Identifier",
                      },
                      "operator": "++",
                      "prefix": false,
                      "type": "UpdateExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "decrement",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "argument": {
                        "name": "count",
                        "type": "Identifier",
                      },
                      "operator": "--",
                      "prefix": false,
                      "type": "UpdateExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "getCount",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "name": "count",
                      "type": "Identifier",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 1,
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 2,
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 2,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 1.1,
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 1.1,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "type": "Literal",
              "value": 2.2,
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 2.2,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "left": {
                "type": "Literal",
                "value": 1,
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "value": 3,
              },
              "type": "BinaryExpression",
            },
            "kind": "method",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 4,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "left": {
                "type": "Literal",
                "value": 1.1,
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "value": 1,
              },
              "type": "BinaryExpression",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 2.1,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "left": {
                "type": "Literal",
                "value": "foo",
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "value": 1,
              },
              "type": "BinaryExpression",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": "foo1",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "key": {
              "name": "sym1",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": "bart",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class A { [1n](){} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": true,
            "key": {
              "bigint": "1",
              "type": "Literal",
              "value": 1n,
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class A { static = 1 } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "decorators": [],
            "key": {
              "name": "static",
              "type": "Identifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
        ],
        "type": "ClassBody",
      },
      "decorators": [],
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "module",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class A { static } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "decorators": [],
            "key": {
              "name": "static",
              "type": "Identifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "type": "ClassBody",
      },
      "decorators": [],
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "module",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class A { static; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "decorators": [],
            "key": {
              "name": "static",
              "type": "Identifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "type": "ClassBody",
      },
      "decorators": [],
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "module",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class A extends B { *get() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "get",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": {
        "name": "B",
        "type": "Identifier",
      },
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class C { async *gen() {
            yield {
                ...yield,
                y: 1,
                ...yield yield,
              };
        }} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "gen",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": true,
              "body": {
                "body": [
                  {
                    "expression": {
                      "argument": {
                        "properties": [
                          {
                            "argument": {
                              "argument": null,
                              "delegate": false,
                              "type": "YieldExpression",
                            },
                            "type": "SpreadElement",
                          },
                          {
                            "computed": false,
                            "key": {
                              "name": "y",
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false,
                            "type": "Property",
                            "value": {
                              "type": "Literal",
                              "value": 1,
                            },
                          },
                          {
                            "argument": {
                              "argument": {
                                "argument": null,
                                "delegate": false,
                                "type": "YieldExpression",
                              },
                              "delegate": false,
                              "type": "YieldExpression",
                            },
                            "type": "SpreadElement",
                          },
                        ],
                        "type": "ObjectExpression",
                      },
                      "delegate": false,
                      "type": "YieldExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "C",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class SimpleParent {
          constructor() {
              this.foo = 'SimpleParent';
          }
      }

      let calls_to_ConstructorCountingParent = 0;
      class ConstructorCountingParent {
          constructor() {
              calls_to_ConstructorCountingParent++;
          }
      }

      class UninitializedThisReturningArgumentConstructor extends SimpleParent {
          constructor(arg) {
              return arg;
          }
      };

      class InitializedThisReturningArgumentConstructor extends SimpleParent {
          constructor(arg) {
              super();
              return arg;
          }
      }; 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "property": {
                          "name": "foo",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "type": "Literal",
                        "value": "SimpleParent",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "SimpleParent",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
    {
      "declarations": [
        {
          "id": {
            "name": "calls_to_ConstructorCountingParent",
            "type": "Identifier",
          },
          "init": {
            "type": "Literal",
            "value": 0,
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "let",
      "type": "VariableDeclaration",
    },
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "argument": {
                        "name": "calls_to_ConstructorCountingParent",
                        "type": "Identifier",
                      },
                      "operator": "++",
                      "prefix": false,
                      "type": "UpdateExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "ConstructorCountingParent",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "name": "arg",
                      "type": "Identifier",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "arg",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "UninitializedThisReturningArgumentConstructor",
        "type": "Identifier",
      },
      "superClass": {
        "name": "SimpleParent",
        "type": "Identifier",
      },
      "type": "ClassDeclaration",
    },
    {
      "type": "EmptyStatement",
    },
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "arguments": [],
                      "callee": {
                        "type": "Super",
                      },
                      "type": "CallExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "argument": {
                      "name": "arg",
                      "type": "Identifier",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "arg",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "InitializedThisReturningArgumentConstructor",
        "type": "Identifier",
      },
      "superClass": {
        "name": "SimpleParent",
        "type": "Identifier",
      },
      "type": "ClassDeclaration",
    },
    {
      "type": "EmptyStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class a { async *get(){} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "get",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "a",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class a extends [] { static set [a] ({w=a}) { for (;;) a } } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": true,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "set",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "body": {
                      "expression": {
                        "name": "a",
                        "type": "Identifier",
                      },
                      "type": "ExpressionStatement",
                    },
                    "init": null,
                    "test": null,
                    "type": "ForStatement",
                    "update": null,
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "w",
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true,
                      "type": "Property",
                      "value": {
                        "left": {
                          "name": "w",
                          "type": "Identifier",
                        },
                        "right": {
                          "name": "a",
                          "type": "Identifier",
                        },
                        "type": "AssignmentPattern",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "a",
        "type": "Identifier",
      },
      "superClass": {
        "elements": [],
        "type": "ArrayExpression",
      },
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class async {} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "end": 14,
        "range": [
          12,
          14,
        ],
        "start": 12,
        "type": "ClassBody",
      },
      "end": 14,
      "id": {
        "end": 11,
        "name": "async",
        "range": [
          6,
          11,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class await { } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "end": 15,
        "range": [
          12,
          15,
        ],
        "start": 12,
        "type": "ClassBody",
      },
      "end": 15,
      "id": {
        "end": 11,
        "name": "await",
        "range": [
          6,
          11,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class await {} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "end": 14,
        "range": [
          12,
          14,
        ],
        "start": 12,
        "type": "ClassBody",
      },
      "end": 14,
      "id": {
        "end": 11,
        "name": "await",
        "range": [
          6,
          11,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class c { static *[false]() { "use strict"; } set [this] (q) { "use strict"; } set [true] (u) { "use strict"; } } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": true,
            "end": 45,
            "key": {
              "end": 24,
              "range": [
                19,
                24,
              ],
              "start": 19,
              "type": "Literal",
              "value": false,
            },
            "kind": "method",
            "range": [
              10,
              45,
            ],
            "start": 10,
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "directive": "use strict",
                    "end": 43,
                    "expression": {
                      "end": 42,
                      "range": [
                        30,
                        42,
                      ],
                      "start": 30,
                      "type": "Literal",
                      "value": "use strict",
                    },
                    "range": [
                      30,
                      43,
                    ],
                    "start": 30,
                    "type": "ExpressionStatement",
                  },
                ],
                "end": 45,
                "range": [
                  28,
                  45,
                ],
                "start": 28,
                "type": "BlockStatement",
              },
              "end": 45,
              "generator": true,
              "id": null,
              "params": [],
              "range": [
                25,
                45,
              ],
              "start": 25,
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "end": 78,
            "key": {
              "end": 55,
              "range": [
                51,
                55,
              ],
              "start": 51,
              "type": "ThisExpression",
            },
            "kind": "set",
            "range": [
              46,
              78,
            ],
            "start": 46,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "directive": "use strict",
                    "end": 76,
                    "expression": {
                      "end": 75,
                      "range": [
                        63,
                        75,
                      ],
                      "start": 63,
                      "type": "Literal",
                      "value": "use strict",
                    },
                    "range": [
                      63,
                      76,
                    ],
                    "start": 63,
                    "type": "ExpressionStatement",
                  },
                ],
                "end": 78,
                "range": [
                  61,
                  78,
                ],
                "start": 61,
                "type": "BlockStatement",
              },
              "end": 78,
              "generator": false,
              "id": null,
              "params": [
                {
                  "end": 59,
                  "name": "q",
                  "range": [
                    58,
                    59,
                  ],
                  "start": 58,
                  "type": "Identifier",
                },
              ],
              "range": [
                57,
                78,
              ],
              "start": 57,
              "type": "FunctionExpression",
            },
          },
          {
            "computed": true,
            "end": 111,
            "key": {
              "end": 88,
              "range": [
                84,
                88,
              ],
              "start": 84,
              "type": "Literal",
              "value": true,
            },
            "kind": "set",
            "range": [
              79,
              111,
            ],
            "start": 79,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "directive": "use strict",
                    "end": 109,
                    "expression": {
                      "end": 108,
                      "range": [
                        96,
                        108,
                      ],
                      "start": 96,
                      "type": "Literal",
                      "value": "use strict",
                    },
                    "range": [
                      96,
                      109,
                    ],
                    "start": 96,
                    "type": "ExpressionStatement",
                  },
                ],
                "end": 111,
                "range": [
                  94,
                  111,
                ],
                "start": 94,
                "type": "BlockStatement",
              },
              "end": 111,
              "generator": false,
              "id": null,
              "params": [
                {
                  "end": 92,
                  "name": "u",
                  "range": [
                    91,
                    92,
                  ],
                  "start": 91,
                  "type": "Identifier",
                },
              ],
              "range": [
                90,
                111,
              ],
              "start": 90,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 113,
        "range": [
          8,
          113,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 113,
      "id": {
        "end": 7,
        "name": "c",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        113,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 113,
  "range": [
    0,
    113,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class v extends.9 {} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "ClassBody",
      },
      "id": {
        "name": "v",
        "type": "Identifier",
      },
      "superClass": {
        "type": "Literal",
        "value": 0.9,
      },
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class v extends[x] {} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "ClassBody",
      },
      "id": {
        "name": "v",
        "type": "Identifier",
      },
      "superClass": {
        "elements": [
          {
            "name": "x",
            "type": "Identifier",
          },
        ],
        "type": "ArrayExpression",
      },
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x { [await](){} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": true,
            "end": 21,
            "key": {
              "end": 16,
              "name": "await",
              "range": [
                11,
                16,
              ],
              "start": 11,
              "type": "Identifier",
            },
            "kind": "method",
            "range": [
              10,
              21,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 21,
                "range": [
                  19,
                  21,
                ],
                "start": 19,
                "type": "BlockStatement",
              },
              "end": 21,
              "generator": false,
              "id": null,
              "params": [],
              "range": [
                17,
                21,
              ],
              "start": 17,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 23,
        "range": [
          8,
          23,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 23,
      "id": {
        "end": 7,
        "name": "x",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        23,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 23,
  "range": [
    0,
    23,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x { foo(await){} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 22,
            "key": {
              "end": 13,
              "name": "foo",
              "range": [
                10,
                13,
              ],
              "start": 10,
              "type": "Identifier",
            },
            "kind": "method",
            "range": [
              10,
              22,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 22,
                "range": [
                  20,
                  22,
                ],
                "start": 20,
                "type": "BlockStatement",
              },
              "end": 22,
              "generator": false,
              "id": null,
              "params": [
                {
                  "end": 19,
                  "name": "await",
                  "range": [
                    14,
                    19,
                  ],
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "range": [
                13,
                22,
              ],
              "start": 13,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 24,
        "range": [
          8,
          24,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 24,
      "id": {
        "end": 7,
        "name": "x",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        24,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 24,
  "range": [
    0,
    24,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x { foo(x=await){} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 24,
            "key": {
              "end": 13,
              "name": "foo",
              "range": [
                10,
                13,
              ],
              "start": 10,
              "type": "Identifier",
            },
            "kind": "method",
            "range": [
              10,
              24,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 24,
                "range": [
                  22,
                  24,
                ],
                "start": 22,
                "type": "BlockStatement",
              },
              "end": 24,
              "generator": false,
              "id": null,
              "params": [
                {
                  "end": 21,
                  "left": {
                    "end": 15,
                    "name": "x",
                    "range": [
                      14,
                      15,
                    ],
                    "start": 14,
                    "type": "Identifier",
                  },
                  "range": [
                    14,
                    21,
                  ],
                  "right": {
                    "end": 21,
                    "name": "await",
                    "range": [
                      16,
                      21,
                    ],
                    "start": 16,
                    "type": "Identifier",
                  },
                  "start": 14,
                  "type": "AssignmentPattern",
                },
              ],
              "range": [
                13,
                24,
              ],
              "start": 13,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 26,
        "range": [
          8,
          26,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 26,
      "id": {
        "end": 7,
        "name": "x",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x { foo(x=new (await)()){} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 32,
            "key": {
              "end": 13,
              "name": "foo",
              "range": [
                10,
                13,
              ],
              "start": 10,
              "type": "Identifier",
            },
            "kind": "method",
            "range": [
              10,
              32,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 32,
                "range": [
                  30,
                  32,
                ],
                "start": 30,
                "type": "BlockStatement",
              },
              "end": 32,
              "generator": false,
              "id": null,
              "params": [
                {
                  "end": 29,
                  "left": {
                    "end": 15,
                    "name": "x",
                    "range": [
                      14,
                      15,
                    ],
                    "start": 14,
                    "type": "Identifier",
                  },
                  "range": [
                    14,
                    29,
                  ],
                  "right": {
                    "arguments": [],
                    "callee": {
                      "end": 26,
                      "name": "await",
                      "range": [
                        21,
                        26,
                      ],
                      "start": 21,
                      "type": "Identifier",
                    },
                    "end": 29,
                    "range": [
                      16,
                      29,
                    ],
                    "start": 16,
                    "type": "NewExpression",
                  },
                  "start": 14,
                  "type": "AssignmentPattern",
                },
              ],
              "range": [
                13,
                32,
              ],
              "start": 13,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 34,
        "range": [
          8,
          34,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 34,
      "id": {
        "end": 7,
        "name": "x",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        34,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 34,
  "range": [
    0,
    34,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x extends {} {} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "ClassBody",
      },
      "id": {
        "name": "x",
        "type": "Identifier",
      },
      "superClass": {
        "properties": [],
        "type": "ObjectExpression",
      },
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x extends await { } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "end": 25,
        "range": [
          22,
          25,
        ],
        "start": 22,
        "type": "ClassBody",
      },
      "end": 25,
      "id": {
        "end": 7,
        "name": "x",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        25,
      ],
      "start": 0,
      "superClass": {
        "end": 21,
        "name": "await",
        "range": [
          16,
          21,
        ],
        "start": 16,
        "type": "Identifier",
      },
      "type": "ClassDeclaration",
    },
  ],
  "end": 25,
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x extends feh(await) { } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "end": 30,
        "range": [
          27,
          30,
        ],
        "start": 27,
        "type": "ClassBody",
      },
      "end": 30,
      "id": {
        "end": 7,
        "name": "x",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        30,
      ],
      "start": 0,
      "superClass": {
        "arguments": [
          {
            "end": 25,
            "name": "await",
            "range": [
              20,
              25,
            ],
            "start": 20,
            "type": "Identifier",
          },
        ],
        "callee": {
          "end": 19,
          "name": "feh",
          "range": [
            16,
            19,
          ],
          "start": 16,
          "type": "Identifier",
        },
        "end": 26,
        "range": [
          16,
          26,
        ],
        "start": 16,
        "type": "CallExpression",
      },
      "type": "ClassDeclaration",
    },
  ],
  "end": 30,
  "range": [
    0,
    30,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x{[x](a=await){}} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": true,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "left": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "right": {
                    "name": "await",
                    "type": "Identifier",
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "x",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x{[x](a=await){}} 2`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": true,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "left": {
                    "name": "a",
                    "type": "Identifier",
                  },
                  "right": {
                    "name": "await",
                    "type": "Identifier",
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "x",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > class x{[x](await){}} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": true,
            "key": {
              "name": "x",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "await",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "x",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > f = ([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }]) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "f",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "async": false,
          "body": {
            "body": [],
            "type": "BlockStatement",
          },
          "expression": false,
          "generator": false,
          "params": [
            {
              "elements": [
                {
                  "left": {
                    "name": "cls",
                    "type": "Identifier",
                  },
                  "right": {
                    "body": {
                      "body": [],
                      "type": "ClassBody",
                    },
                    "id": null,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "type": "AssignmentPattern",
                },
                {
                  "left": {
                    "name": "xCls",
                    "type": "Identifier",
                  },
                  "right": {
                    "body": {
                      "body": [],
                      "type": "ClassBody",
                    },
                    "id": {
                      "name": "X",
                      "type": "Identifier",
                    },
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "type": "AssignmentPattern",
                },
                {
                  "left": {
                    "name": "xCls2",
                    "type": "Identifier",
                  },
                  "right": {
                    "body": {
                      "body": [
                        {
                          "computed": false,
                          "key": {
                            "name": "name",
                            "type": "Identifier",
                          },
                          "kind": "method",
                          "static": true,
                          "type": "MethodDefinition",
                          "value": {
                            "async": false,
                            "body": {
                              "body": [],
                              "type": "BlockStatement",
                            },
                            "generator": false,
                            "id": null,
                            "params": [],
                            "type": "FunctionExpression",
                          },
                        },
                      ],
                      "type": "ClassBody",
                    },
                    "id": null,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > f = ([cls = class {}]) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "f",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "async": false,
          "body": {
            "body": [],
            "type": "BlockStatement",
          },
          "expression": false,
          "generator": false,
          "params": [
            {
              "elements": [
                {
                  "left": {
                    "name": "cls",
                    "type": "Identifier",
                  },
                  "right": {
                    "body": {
                      "body": [],
                      "type": "ClassBody",
                    },
                    "id": null,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > f = ([xCls = class X {}]) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "f",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "async": false,
          "body": {
            "body": [],
            "type": "BlockStatement",
          },
          "expression": false,
          "generator": false,
          "params": [
            {
              "elements": [
                {
                  "left": {
                    "name": "xCls",
                    "type": "Identifier",
                  },
                  "right": {
                    "body": {
                      "body": [],
                      "type": "ClassBody",
                    },
                    "id": {
                      "name": "X",
                      "type": "Identifier",
                    },
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > f = ([xCls2 = class { name() {} }]) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "f",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "async": false,
          "body": {
            "body": [],
            "type": "BlockStatement",
          },
          "expression": false,
          "generator": false,
          "params": [
            {
              "elements": [
                {
                  "left": {
                    "name": "xCls2",
                    "type": "Identifier",
                  },
                  "right": {
                    "body": {
                      "body": [
                        {
                          "computed": false,
                          "key": {
                            "name": "name",
                            "type": "Identifier",
                          },
                          "kind": "method",
                          "static": false,
                          "type": "MethodDefinition",
                          "value": {
                            "async": false,
                            "body": {
                              "body": [],
                              "type": "BlockStatement",
                            },
                            "generator": false,
                            "id": null,
                            "params": [],
                            "type": "FunctionExpression",
                          },
                        },
                      ],
                      "type": "ClassBody",
                    },
                    "id": null,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > f = ([xCls2 = class { static name() {} }]) => {} 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "f",
          "type": "Identifier",
        },
        "operator": "=",
        "right": {
          "async": false,
          "body": {
            "body": [],
            "type": "BlockStatement",
          },
          "expression": false,
          "generator": false,
          "params": [
            {
              "elements": [
                {
                  "left": {
                    "name": "xCls2",
                    "type": "Identifier",
                  },
                  "right": {
                    "body": {
                      "body": [
                        {
                          "computed": false,
                          "key": {
                            "name": "name",
                            "type": "Identifier",
                          },
                          "kind": "method",
                          "static": true,
                          "type": "MethodDefinition",
                          "value": {
                            "async": false,
                            "body": {
                              "body": [],
                              "type": "BlockStatement",
                            },
                            "generator": false,
                            "id": null,
                            "params": [],
                            "type": "FunctionExpression",
                          },
                        },
                      ],
                      "type": "ClassBody",
                    },
                    "id": null,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "type": "AssignmentPattern",
                },
              ],
              "type": "ArrayPattern",
            },
          ],
          "type": "ArrowFunctionExpression",
        },
        "type": "AssignmentExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > new class {
        start() {
          new class {
            constructor() {}
          }
        }
        constructor() {}
      } 1`] = `
{
  "body": [
    {
      "expression": {
        "arguments": [],
        "callee": {
          "body": {
            "body": [
              {
                "computed": false,
                "key": {
                  "name": "start",
                  "type": "Identifier",
                },
                "kind": "method",
                "static": false,
                "type": "MethodDefinition",
                "value": {
                  "async": false,
                  "body": {
                    "body": [
                      {
                        "expression": {
                          "arguments": [],
                          "callee": {
                            "body": {
                              "body": [
                                {
                                  "computed": false,
                                  "key": {
                                    "name": "constructor",
                                    "type": "Identifier",
                                  },
                                  "kind": "constructor",
                                  "static": false,
                                  "type": "MethodDefinition",
                                  "value": {
                                    "async": false,
                                    "body": {
                                      "body": [],
                                      "type": "BlockStatement",
                                    },
                                    "generator": false,
                                    "id": null,
                                    "params": [],
                                    "type": "FunctionExpression",
                                  },
                                },
                              ],
                              "type": "ClassBody",
                            },
                            "id": null,
                            "superClass": null,
                            "type": "ClassExpression",
                          },
                          "type": "NewExpression",
                        },
                        "type": "ExpressionStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "key": {
                  "name": "constructor",
                  "type": "Identifier",
                },
                "kind": "constructor",
                "static": false,
                "type": "MethodDefinition",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "type": "BlockStatement",
                  },
                  "generator": false,
                  "id": null,
                  "params": [],
                  "type": "FunctionExpression",
                },
              },
            ],
            "type": "ClassBody",
          },
          "id": null,
          "superClass": null,
          "type": "ClassExpression",
        },
        "type": "NewExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > var C = class { static async *gen() {
        callCount += 1;
        yield [...yield];
    }} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "C",
            "type": "Identifier",
          },
          "init": {
            "body": {
              "body": [
                {
                  "computed": false,
                  "key": {
                    "name": "gen",
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": true,
                    "body": {
                      "body": [
                        {
                          "expression": {
                            "left": {
                              "name": "callCount",
                              "type": "Identifier",
                            },
                            "operator": "+=",
                            "right": {
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "AssignmentExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                        {
                          "expression": {
                            "argument": {
                              "elements": [
                                {
                                  "argument": {
                                    "argument": null,
                                    "delegate": false,
                                    "type": "YieldExpression",
                                  },
                                  "type": "SpreadElement",
                                },
                              ],
                              "type": "ArrayExpression",
                            },
                            "delegate": false,
                            "type": "YieldExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": true,
                    "id": null,
                    "params": [],
                    "type": "FunctionExpression",
                  },
                },
              ],
              "type": "ClassBody",
            },
            "id": null,
            "superClass": null,
            "type": "ClassExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "type": "VariableDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > var C = class { static async *gen() { yield [...yield yield]; }} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 64,
          "id": {
            "end": 5,
            "name": "C",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "body": {
              "body": [
                {
                  "computed": false,
                  "end": 63,
                  "key": {
                    "end": 33,
                    "name": "gen",
                    "range": [
                      30,
                      33,
                    ],
                    "start": 30,
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "range": [
                    16,
                    63,
                  ],
                  "start": 16,
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": true,
                    "body": {
                      "body": [
                        {
                          "end": 61,
                          "expression": {
                            "argument": {
                              "elements": [
                                {
                                  "argument": {
                                    "argument": {
                                      "argument": null,
                                      "delegate": false,
                                      "end": 59,
                                      "range": [
                                        54,
                                        59,
                                      ],
                                      "start": 54,
                                      "type": "YieldExpression",
                                    },
                                    "delegate": false,
                                    "end": 59,
                                    "range": [
                                      48,
                                      59,
                                    ],
                                    "start": 48,
                                    "type": "YieldExpression",
                                  },
                                  "end": 59,
                                  "range": [
                                    45,
                                    59,
                                  ],
                                  "start": 45,
                                  "type": "SpreadElement",
                                },
                              ],
                              "end": 60,
                              "range": [
                                44,
                                60,
                              ],
                              "start": 44,
                              "type": "ArrayExpression",
                            },
                            "delegate": false,
                            "end": 60,
                            "range": [
                              38,
                              60,
                            ],
                            "start": 38,
                            "type": "YieldExpression",
                          },
                          "range": [
                            38,
                            61,
                          ],
                          "start": 38,
                          "type": "ExpressionStatement",
                        },
                      ],
                      "end": 63,
                      "range": [
                        36,
                        63,
                      ],
                      "start": 36,
                      "type": "BlockStatement",
                    },
                    "end": 63,
                    "generator": true,
                    "id": null,
                    "params": [],
                    "range": [
                      33,
                      63,
                    ],
                    "start": 33,
                    "type": "FunctionExpression",
                  },
                },
              ],
              "end": 64,
              "range": [
                14,
                64,
              ],
              "start": 14,
              "type": "ClassBody",
            },
            "end": 64,
            "id": null,
            "range": [
              8,
              64,
            ],
            "start": 8,
            "superClass": null,
            "type": "ClassExpression",
          },
          "range": [
            4,
            64,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 64,
      "kind": "var",
      "range": [
        0,
        64,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 64,
  "range": [
    0,
    64,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > var C = class { static async *gen() { yield { ...yield, y: 1, ...yield yield, };}} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "C",
            "type": "Identifier",
          },
          "init": {
            "body": {
              "body": [
                {
                  "computed": false,
                  "key": {
                    "name": "gen",
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": true,
                    "body": {
                      "body": [
                        {
                          "expression": {
                            "argument": {
                              "properties": [
                                {
                                  "argument": {
                                    "argument": null,
                                    "delegate": false,
                                    "type": "YieldExpression",
                                  },
                                  "type": "SpreadElement",
                                },
                                {
                                  "computed": false,
                                  "key": {
                                    "name": "y",
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": false,
                                  "type": "Property",
                                  "value": {
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                },
                                {
                                  "argument": {
                                    "argument": {
                                      "argument": null,
                                      "delegate": false,
                                      "type": "YieldExpression",
                                    },
                                    "delegate": false,
                                    "type": "YieldExpression",
                                  },
                                  "type": "SpreadElement",
                                },
                              ],
                              "type": "ObjectExpression",
                            },
                            "delegate": false,
                            "type": "YieldExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": true,
                    "id": null,
                    "params": [],
                    "type": "FunctionExpression",
                  },
                },
              ],
              "type": "ClassBody",
            },
            "id": null,
            "superClass": null,
            "type": "ClassExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "type": "VariableDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > var gen = {
          async *method() {
            callCount += 1;
            yield [...yield];
          }
        }.method; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "gen",
            "type": "Identifier",
          },
          "init": {
            "computed": false,
            "object": {
              "properties": [
                {
                  "computed": false,
                  "key": {
                    "name": "method",
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": true,
                  "shorthand": false,
                  "type": "Property",
                  "value": {
                    "async": true,
                    "body": {
                      "body": [
                        {
                          "expression": {
                            "left": {
                              "name": "callCount",
                              "type": "Identifier",
                            },
                            "operator": "+=",
                            "right": {
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "AssignmentExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                        {
                          "expression": {
                            "argument": {
                              "elements": [
                                {
                                  "argument": {
                                    "argument": null,
                                    "delegate": false,
                                    "type": "YieldExpression",
                                  },
                                  "type": "SpreadElement",
                                },
                              ],
                              "type": "ArrayExpression",
                            },
                            "delegate": false,
                            "type": "YieldExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": true,
                    "id": null,
                    "params": [],
                    "type": "FunctionExpression",
                  },
                },
              ],
              "type": "ObjectExpression",
            },
            "property": {
              "name": "method",
              "type": "Identifier",
            },
            "type": "MemberExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "type": "VariableDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Class > Expressions - Class (pass) > x = class{} / x 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 15,
        "left": {
          "end": 1,
          "name": "x",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          15,
        ],
        "right": {
          "end": 15,
          "left": {
            "body": {
              "body": [],
              "end": 11,
              "range": [
                9,
                11,
              ],
              "start": 9,
              "type": "ClassBody",
            },
            "end": 11,
            "id": null,
            "range": [
              4,
              11,
            ],
            "start": 4,
            "superClass": null,
            "type": "ClassExpression",
          },
          "operator": "/",
          "range": [
            4,
            15,
          ],
          "right": {
            "end": 15,
            "name": "x",
            "range": [
              14,
              15,
            ],
            "start": 14,
            "type": "Identifier",
          },
          "start": 4,
          "type": "BinaryExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;
