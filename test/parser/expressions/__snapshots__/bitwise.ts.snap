// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Expressions - Conditional > Expressions - Conditional (pass) > ~a 1`] = `
{
  "body": [
    {
      "expression": {
        "argument": {
          "loc": {
            "end": {
              "column": 2,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "name": "a",
          "type": "Identifier",
        },
        "loc": {
          "end": {
            "column": 2,
            "line": 1,
          },
          "start": {
            "column": 0,
            "line": 1,
          },
        },
        "operator": "~",
        "prefix": true,
        "type": "UnaryExpression",
      },
      "loc": {
        "end": {
          "column": 2,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "type": "ExpressionStatement",
    },
  ],
  "loc": {
    "end": {
      "column": 2,
      "line": 1,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Conditional > Expressions - Conditional (pass) > a&b 1`] = `
{
  "body": [
    {
      "end": 3,
      "expression": {
        "end": 3,
        "left": {
          "end": 1,
          "name": "a",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "&",
        "range": [
          0,
          3,
        ],
        "right": {
          "end": 3,
          "name": "b",
          "range": [
            2,
            3,
          ],
          "start": 2,
          "type": "Identifier",
        },
        "start": 0,
        "type": "BinaryExpression",
      },
      "range": [
        0,
        3,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 3,
  "range": [
    0,
    3,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Conditional > Expressions - Conditional (pass) > a>>>b 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": ">>>",
        "right": {
          "name": "b",
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Conditional > Expressions - Conditional (pass) > a>>b 1`] = `
{
  "body": [
    {
      "end": 4,
      "expression": {
        "end": 4,
        "left": {
          "end": 1,
          "name": "a",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": ">>",
        "range": [
          0,
          4,
        ],
        "right": {
          "end": 4,
          "name": "b",
          "range": [
            3,
            4,
          ],
          "start": 3,
          "type": "Identifier",
        },
        "start": 0,
        "type": "BinaryExpression",
      },
      "range": [
        0,
        4,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 4,
  "range": [
    0,
    4,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Expressions - Conditional > Expressions - Conditional (pass) > a^b 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "loc": {
            "end": {
              "column": 1,
              "line": 1,
            },
            "start": {
              "column": 0,
              "line": 1,
            },
          },
          "name": "a",
          "type": "Identifier",
        },
        "loc": {
          "end": {
            "column": 3,
            "line": 1,
          },
          "start": {
            "column": 0,
            "line": 1,
          },
        },
        "operator": "^",
        "right": {
          "loc": {
            "end": {
              "column": 3,
              "line": 1,
            },
            "start": {
              "column": 2,
              "line": 1,
            },
          },
          "name": "b",
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "loc": {
        "end": {
          "column": 3,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "type": "ExpressionStatement",
    },
  ],
  "loc": {
    "end": {
      "column": 3,
      "line": 1,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Conditional > Expressions - Conditional (pass) > a|b 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "a",
          "type": "Identifier",
        },
        "operator": "|",
        "right": {
          "name": "b",
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Conditional > Expressions - Conditional (pass) > x != y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "!=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Conditional > Expressions - Conditional (pass) > x << y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "<<",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Expressions - Conditional > Expressions - Conditional (pass) > x <= y 1`] = `
{
  "body": [
    {
      "expression": {
        "left": {
          "name": "x",
          "type": "Identifier",
        },
        "operator": "<=",
        "right": {
          "name": "y",
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "type": "ExpressionStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;
