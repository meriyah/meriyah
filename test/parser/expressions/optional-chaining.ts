import * as t from 'node:assert/strict';
import { outdent } from 'outdent';
import { describe, it } from 'vitest';
import { parseSource } from '../../../src/parser';
import { fail, pass } from '../../test-utils';

describe('Optional chaining', () => {
  for (const arg of [
    'func?.()',
    'obj?.prop',
    String.raw`obj?.def\u{61}ult`,
    'func?.(...args)',
    'a?.[x]',
    'a?.()',
    'x?.1:y',
    'a?.[++x]',
    'a?.b.c(++x).d',
    'a?.b[3].c?.(x).d',
    '(a?.b).c',
    'delete a?.b',
    'func?.(a, b)',
    'a?.func?.()',
    'a?.func?.(a, b)',
    'null?.valueOf()',
    'a.func?.()',
    'obj?.[expr]',
    'obj?.[expr]?.[other]',
    'obj?.[true]',
    'obj?.[true]?.[true]',
    'obj.a?.[expr]',
    'obj.a?.[true]',
    'foo.bar?.baz',
    'foo?.bar?.baz',
    'foo?.bar',
    'a.b?.c()',
    '(a?.b).c;',
    '(a?.b).c();',
    '(a?.b)?.c.d?.e;',
    'a?.b.c.d.e?.f',
    'a.b.c?.d.e.f',
    outdent`
      if (a?.b?.c) {
        console.log(a?.b?.c);
      } else if (a?.b.c?.d?.e.f) {
        console.log(a?.b.c?.d?.e.f);
      }
    `,
    'true?.valueOf()',
    '0?.valueOf()',
    'false?.()',
    '0?.()',
    '({})?.()',
    '[]?.()',
    outdent`
      class A {
        a () {}
      }
      class B extends A {
        dot () {
          return super.a?.name;
        }
        expr () {
          return super['a'].name;
        }
        undf () {
          return super.b?.c;
        }
      }
    `,
    '({})?.a["b"]',
    'delete null?.foo',
    '({})?.constructor',
    '({ x: "hi" })?.x',
    '[]?.length',
    'true?.["valueOf"]()',
    'null?.["valueOf"]()',
    'undefined?.["valueOf"]()',
    'const a = b.map(p => p.d?.e?.f);',
    'const a = b.map(p => p.c?.d?.e ?? "(string)");',
    'f?.(arg0, arg1)',
    'true?.(123)',
    'true?.(123??x?.3:5)',
    'true?.(123)',
    outdent`
      function isInvoked(obj) {
        let invoked = false;
        obj?.a.b.m(invoked = true);
        return invoked;
      }
    `,
    'a.b?.c?.d',
    'obj ? ["a", "b", "c"].map(x => x+x) : []',
    'const a = b?.c?.[d]?.e;',
    'const a = b?.c();',
    'const { a, b } = c.d?.e;',
    '1?.["valueOf"]()',
    '() => 0?.()',
    '() => 1?.()',
    '() => "hi"?.()',
    '() => ({})?.a["b"]',
    '() => (() => {})?.()()',
    '(() => {})?.()?.()',
    'null?.()().a["b"]',
    'delete undefined?.()',
    'delete null?.()',
    'x?.([...[function f() {}.prop]] = [])',
    'x?.({ a: obj.a } = {})',
    'value = { x: 4 };',
    'for (let [a = b?.a] of [0, c = 0]);',
    '({x: y = z = 0} = 1)?.(a??b)',
    '({x: y = z = 0} = 1)?.(a?.(a??b))',
    '({let} = 0);',
    '([x.y = a] = ([x.y = a?.y] = ([x.y = a] = z)))',
    '({..."x".x} = x?.y);',
    '({...{}.x} = x??y?.(a=b?.a));',
    '([...[([...[].x] = x??y?.z)].x] = x);',
    '([...{}.x] = x);',
    '({..."x"[x]} = x);',
    '({...[][x?.y]} = x);',
    '({...[][x?.y]} = x = y);',
    '({...[][x?.y]} = x = (y?.y??z));',
    '({...{}[x?.y]} = x?.y??z);',
    'undefined?.(...a)',
    '[a, b] = [b, a];',
    '[a, b.c] = [d?.e, f?.g];',
    '[a, b.c] = [d?.e, (f.g) = h];',
    '[a, b] = f?.(); ',
    'var [a, , b] = f();',
    '[a, ...b] = [1, 2?.a, 3];',
    'null?.(1, ...a)',
    '({}).a?.(...a)',
    '({ a: null }).a?.(...a)',
    'undefined?.(...a)?.(1, ...a)',
    '() => 5?.(...[])',
    'delete o1?.x',
    'o2.x',
    'greet.call?.({ suffix: "!" }, "world")',
    'null.call?.({ suffix: "!" }, "world")',
    '({}).call?.({ suffix: "!" }, "world")',
    'greet?.apply({ suffix: "?" }, "world")',
    'masquerader?.()',
    'greet.call?.({ suffix: "!" }, "world")',
    'greet.call?.({ suffix: "!" }, "world")',
    'o2.x?.["y"];',
    'a?.[foo(a)]',
    'a ?? a.b ?? (a?.b).c();',
    'a ?? foo.bar?.baz ?? a.c',
    'a ?? aobj?.[expr]?.[other] ?? foo.bar?.baz',
    'a?.b[3].c?.(x).d ?? aobj?.[expr]?.[other] ?? foo.bar?.baz',
    'const x = a?.b.c',
    '(null)?.b === null',
    'let a = b?.c',
    'a?.b',
    '!a ? a : a.b',
    'foo(null?.x)',
    'let a = b?? "default";',
    'let a = b.c ?? "default";',
    'let xn = x?.normalize("NFC")',
    'a?.b === undefined',
    'null?.foo === null',
    'var v = a?.b?.c?.d',
    'var v = (((a?.b)?.c)?.d)',
    'a?.b?.c?.d === undefined',
    'o3?.a === o4?.a === undefined',
    'o3?.a?.b === o4?.a?.b === undefined',
    'o3?.a?.b?.c === o4?.a?.b?.c === undefined',
    'x in (o3?.a)',
    'obj.func?.[arg].property;',
    'obj.func?.[arg.property];',
    'a?.b.c.e?.f.g?.h.t.c?.d()?.e;',
    'a?.d().f?.b',
    '(fn()?.a)?.b',
    'a?.[++x]',
    'a?.b.c(++x).d;',
    'undefined?.[++x]',
    'undefined?.b.c(++x).d; ',
    'undefined?.b',
    'obj.func?.[arg];',
    'a?.trim()?.indexOf("hello")',
    'foo?.x?.y?.z?()=>{foo}:bar;',
    outdent`
      if (a?.b?.c === 'foobar') {}
      if (a?.b()?.c) {}
      if (a?.b?.()?.c) {}
    `,
    'yield?.(yield())',
    'yield?.(yield())',
    'async?.(package())',
    'async?.(async())',
    'async?.(async?.a, async?.a)',
    'async?.(async?.a, async?.(x))',
    'async?.(async?.(), async?.[x])',
    'async?.(async?.a, async?.a)',
    'async?.("string", async?.a, async?.a)',
    'async?.(123, async?.a, async?.a)',
    'async?.(async?.a, "string", a=>x?.z)',
    'async?.("string", async=>x?.z, x=>async?.z)',
    'async?.(async=>x?.z, "string", async(yield)=>x?.z)',
    'async?.(async=>x?.z, "string", async(x)=>x?.z)',
    'async?.(async(x)=>x?.z, "string", async(x)=>x?.z)',
    'async?.(async()=>x?.await)',
    'new async(async()=>x?.await)',
    'new yield(async()=>x?.await)',
    'new new class {}().constructor();',
    'System.global.navigator?.toString()',
    '(a?.b).async?.[await??async]',
    '"hello"?.a',
    'null?.a',
    '[1, 2]?.[1]',
    '(function a () {}?.name)',
    '(class Foo {}?.name)',
    '(function * a () {}?.name)',
    '(async function a () {}?.name)',
    '(async function * a () {}?.name)',
    '/[a-z]/?.test("a")',
    '`hello`?.[0]',
    '({a: 33}, null)?.a',
    '({a: 33})?.a',
    '(undefined, {a: 33})?.a',
    'arr?.[i + 1]',
    'arr[0]?.a',
    'arr[1]?.a',
    'false?.4:5',
    'delete o2?.x',
    'greet.call?.({ suffix: "!" }, "world")',
    '({ undefined: 3 })?.[null?.a]',
    '(() => 3)?.(null?.a)',
    '({})?.["i"]?.()',
    '() => ({})?.["i"]()',
    '0?.()',
    '1?.()',
    '[]?.()',
    '({})?.["constructor"]',
    '[]?.length',
    '1?.valueOf()',
    '0?.valueOf()',
    'o1.x?.["y"];',
    'o1.x?.();',
    'null?.(o1.x);',
    'obj?.c(10)',
    'obj?.d();',
    '(a?.b).c',
    'a?.b(...args);',
    '(obj?.a)?.b',
    '(fn()?.a)?.b',
    'a?.b(...args).c;',
    'const value = true ?.30 : false;',
    'undf?.b',
    '[x.y = 1] = [42]',
    '({ x: 1 }).x?.y.z;',
    'a?.b(...args).c(...args);',
    'let a = b?.c;',
    'o.x?[y]+z:t',
    '({ x: y?.z })',
    'var a = b.c("string")?.d.e || 0;',
    'x?.void',
    String.raw`x?.voi\u0064`,
    'x?.protected',
    String.raw`x?.prot\u0065cted`,
    'class C { #m = 1; static m(obj) { return obj?.#m; } }',
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { lexical: true });
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { webcompat: true });
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { next: true, lexical: true });
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { next: true, webcompat: true });
      });
    });
  }

  fail('Expressions - Optional chaining (fail)', [
    'a = { x = flag?.[] = true } = value;',
    'a?.fn`hello`;',
    '({x: [y]?.a = 0} = 1)',
    'async(x?.x)=>x?.z',
    '[a, x?.z] = f(() => { [a, b.c] = [d.e, (f.g) = h]; }); ',
    '([a, b] = f?.x(() => { [a, b?.c] = [d.e, (f.g) = h]; }));',
    '[a, ...b?.a] = [1, 2, ...c];',
    '({..."x"?.x} = x);',
    '([x.y = a] = ([x.y = a?.y] = ([x.y?.y = a] = z)))',
    '([...[]?.x] = x);',
    '({...[][x?.y]} = (x?.i) = (y));',
    '({0: y?.a} = 0)',
    '({0: x?.a, 1: x} = 0)',
    '({a:let?.foo} = 0);',
    'x?.[y] = foo',
    '0, [{ set y(val) {}}?.y] = [23];',
    '0, { x: y?.z = 42 } = { x: 23 };',
    { code: '0, { x: y?.z = 42 } = { x: 23 };', options: { webcompat: true } },
    '0, { x: y?.z } = { x: 23 };',
    '0, { x: { set y(val) { }}?.y = 42} = {x: 42};',
    '0, { x: { set y(val) {}}?.y} = {x: 42};',
    { code: 'for ([x?.y = 42] in [[23]]) ;', options: { webcompat: true } },
    'for ([x?.y = 42] in [[23]]) ;',
    'for ([x?.y] in [[23]]) ;',
    { code: 'for ([x?.y] in [[23]]) ;', options: { webcompat: true } },
    'for ([{ set y(val) {}}?.y = 42] in [[23]]) ;',
    'for ([{ set y(val) {}}?.y] in [[23]]) ;',
    'for ({ x: y?.z = 42 } in [{ x: 23 }]) ;',
    'for ({ x: y?.z } in [{ x: 23 }]) ;',
    'for ({ x: { set y(val) { }}?.y = 42} in [{x: 42}]) ;',
    'for ({ x: { set y(val) {} }?.y} in [{x: 42}]) ;',
    'for ([x?.y = 42] of [[23]]) ;',
    'for ([x?.y] of [[23]]) ;',
    'for ([{ set y(val) {}}?.y = 42] of [[23]]) ;',
    'for ([{ set y(val) { }}?.y] of [[23]]) ;',
    'for ({ x: y?.z = 42 } of [{ x: 23 }]) ;',
    'for ({ x: y?.z } of [{ x: 23 }]) ;',
    'for ({ x: {set y(val) { }}?.y = 42} of [{x: 42}]) ;',
    'for ({ x: { set y(val) {}}?.y} of [{x: 42}]) ;',
    '0, [x?.y] = [23];',
    '0, [x?.y = 42] = [23];',
    '0, { x: { set y(val) {}}?.y} = {x: 42};',
    '0, [{ set y(val) {}}?.y] = [23];',
    'async?.(async?.(), async?.[])',
    'yield?.await = foo',
    'async?.await = foo',
    'async?.[x] = foo',
    'async?.() = foo',
    'a.?2.3',
    'a.?.2',
    'a.?2.n',
    'a.?2.3',
    'class C {} class D extends C { foo() { return super?.["bar"]; } }',
    'const o = { C: class {} }; new o?.C();',
    'const o = { C: class {} }; new o?.["C"]();',
    'class C {} new C?.();',
    'function foo() { new?.target; }',
    'function tag() {} tag?.``;',
    'const o = { tag() {} }; o?.tag``;',
    'a.?2.?n',
    'obj?.a = 33;',
    'a.? (?) [?]',
    'a.?2.3',
    '{a: 44}?.a',
    'let obj = {x:x?.1}; [...obj["x"]] = [10];',
    'let [...[...[...x?.a]]] = [x?.[[]]];',
    'let [...[...[...x?.a]]] = [[[]]];',
    'let [...[...[...x]]] = [?.a[[]]];',
    'try {} catch ([e?.a, ...a]) {}',
    'try {} catch (a?.[e]) {}',
    '[...[{x?.prop: 1}.prop]] = []',
    '[...[{prop?.a: 1}.prop]] = []',
    '[...[{prop: 1}.prop]] = x?.[]',
    'obj?.[expr] func?.(...args) new C?.(...args)',
    'o.x?[y]+z',
    'obj:?.prop',
    'obj:?[expr]',
    'func:?(...args)',
    'a === null: a?.b.c === undefined',
    'a === null: a?.b.c === undefined',
    '?.a?.b?.c',
    '?.(a.b.c)',
    '?. ?[] ?() ?:',
    'var b = condition ? a?.x.?y : a?.y?.z;',
    'a.?[b.c].d',
    'a[?b[c]]',
    'delete ?a.b.c',
    'delete ?a.b.c',
    '[x?.y = 1]',
    '[x?.x?.y = 1]',
    '[x?.?.y = 1]',
    '[x?.y = 1]',
    'a?.b => (a == null ? a : a.b)',
    'foo?.x?.y?.z?()=>foo;',
    'const a = { b(){ return super?.c; } }',
    { code: 'class A{ b(){ return super?.b; } }', options: { webcompat: true } },
    { code: 'new a?.();', options: { sourceType: 'module' } },
    { code: 'new C?.b.d()', options: { webcompat: true } },
    { code: 'a.?b.?()', options: { webcompat: true } },
    { code: 'a.?()', options: { webcompat: true } },
    { code: 'a?.b = c', options: { webcompat: true } },
    { code: 'a?.{a} = c', options: { webcompat: true } },
    { code: 'a?.(a) = c', options: { webcompat: true } },
    { code: 'o3?.a in ()', options: { webcompat: true } },
    { code: 'a?.b => (a == null ? void 0 : a.b) a?.b.c => (a == null ? void 0 : a.b.c)', options: { webcompat: true } },
    // FIXME: current implementation does not invalidate destructuring.
    // ["({ a: x?.obj['a'] } = {})", Context.OptionsWebCompat],
    // ['[...[x?.this[0], ...x?.this[1]]] = []', Context.OptionsWebCompat],
    { code: 'class C {} class D extends C { foo() { return super?.bar; } }', options: { webcompat: true } },
    { code: 'class C {} class D extends C { foo() { return super?.["bar"]; }', options: { webcompat: true } },
    { code: 'class C {} class D extends C { constructor() { super?.(); } }', options: { webcompat: true } },
    { code: 'const o = { C: class {} }; new o?.C();', options: { webcompat: true } },
    { code: 'const o = { C: class {} }; new o?.["C"]();', options: { webcompat: true } },
    { code: 'class C {} new C?.();', options: { webcompat: true } },
    { code: 'function tag() {} tag?.``', options: { webcompat: true } },
    { code: 'const o = { tag() {} }; o?.tag``', options: { webcompat: true } },
    { code: 'import?.("foo")', options: { webcompat: true } },
    { code: 'new new class {}()?.constructor?.();', options: { webcompat: true } },
    'a?.{a} = c',
    'a.?()',
  ]);

  pass('Optional chaining (pass)', [
    { code: 'a?.b', options: { webcompat: true, ranges: true } },
    { code: 'obj.aaa.bbb', options: { webcompat: true, ranges: true } },
    { code: 'obj.aaa?.bbb', options: { webcompat: true, ranges: true } },
    { code: 'obj?.aaa.bbb', options: { webcompat: true, ranges: true } },
    { code: 'obj?.aaa?.bbb', options: { webcompat: true, ranges: true } },
    { code: '(obj.aaa).bbb', options: { webcompat: true, ranges: true } },
    { code: '(obj.aaa)?.bbb', options: { webcompat: true, ranges: true } },
    { code: '(obj?.aaa).bbb', options: { webcompat: true, ranges: true } },
    { code: '(obj?.aaa)?.bbb', options: { webcompat: true, ranges: true } },
    { code: 'a?.[x]', options: { webcompat: true, ranges: true } },
    { code: 'a?.import("string")?.import.meta??(a)', options: { webcompat: true, ranges: true } },
    { code: 'a?.()', options: { webcompat: true, ranges: true } },
    { code: 'a?.b[3].c?.(x).d', options: { webcompat: true, ranges: true } },
    { code: '({})?.a["b"]', options: { webcompat: true, ranges: true } },
  ]);
});
