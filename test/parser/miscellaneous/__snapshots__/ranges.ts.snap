// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > "foo"; 1`] = `
{
  "body": [
    {
      "directive": "foo",
      "end": 6,
      "expression": {
        "end": 5,
        "range": [
          0,
          5,
        ],
        "start": 0,
        "type": "Literal",
        "value": "foo",
      },
      "range": [
        0,
        6,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 6,
  "range": [
    0,
    6,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > (((x)))++; 1`] = `
{
  "body": [
    {
      "end": 10,
      "expression": {
        "argument": {
          "end": 4,
          "name": "x",
          "range": [
            3,
            4,
          ],
          "start": 3,
          "type": "Identifier",
        },
        "end": 9,
        "operator": "++",
        "prefix": false,
        "range": [
          0,
          9,
        ],
        "start": 0,
        "type": "UpdateExpression",
      },
      "range": [
        0,
        10,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 10,
  "range": [
    0,
    10,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ([,,])=>0 1`] = `
{
  "body": [
    {
      "end": 9,
      "expression": {
        "async": false,
        "body": {
          "end": 9,
          "range": [
            8,
            9,
          ],
          "start": 8,
          "type": "Literal",
          "value": 0,
        },
        "end": 9,
        "expression": true,
        "generator": false,
        "params": [
          {
            "elements": [
              null,
              null,
            ],
            "end": 5,
            "range": [
              1,
              5,
            ],
            "start": 1,
            "type": "ArrayPattern",
          },
        ],
        "range": [
          0,
          9,
        ],
        "start": 0,
        "type": "ArrowFunctionExpression",
      },
      "range": [
        0,
        9,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 9,
  "range": [
    0,
    9,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ([...x+=y]); 1`] = `
{
  "body": [
    {
      "end": 12,
      "expression": {
        "elements": [
          {
            "argument": {
              "end": 9,
              "left": {
                "end": 6,
                "name": "x",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "operator": "+=",
              "range": [
                5,
                9,
              ],
              "right": {
                "end": 9,
                "name": "y",
                "range": [
                  8,
                  9,
                ],
                "start": 8,
                "type": "Identifier",
              },
              "start": 5,
              "type": "AssignmentExpression",
            },
            "end": 9,
            "range": [
              2,
              9,
            ],
            "start": 2,
            "type": "SpreadElement",
          },
        ],
        "end": 10,
        "range": [
          1,
          10,
        ],
        "start": 1,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ([1 || 1].a = 1) 1`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 15,
        "left": {
          "computed": false,
          "end": 11,
          "object": {
            "elements": [
              {
                "end": 8,
                "left": {
                  "end": 3,
                  "range": [
                    2,
                    3,
                  ],
                  "start": 2,
                  "type": "Literal",
                  "value": 1,
                },
                "operator": "||",
                "range": [
                  2,
                  8,
                ],
                "right": {
                  "end": 8,
                  "range": [
                    7,
                    8,
                  ],
                  "start": 7,
                  "type": "Literal",
                  "value": 1,
                },
                "start": 2,
                "type": "LogicalExpression",
              },
            ],
            "end": 9,
            "range": [
              1,
              9,
            ],
            "start": 1,
            "type": "ArrayExpression",
          },
          "optional": false,
          "property": {
            "end": 11,
            "name": "a",
            "range": [
              10,
              11,
            ],
            "start": 10,
            "type": "Identifier",
          },
          "range": [
            1,
            11,
          ],
          "start": 1,
          "type": "MemberExpression",
        },
        "operator": "=",
        "range": [
          1,
          15,
        ],
        "right": {
          "end": 15,
          "range": [
            14,
            15,
          ],
          "start": 14,
          "type": "Literal",
          "value": 1,
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({ tyssjh = ((cspagh = 4) => a) } = 1) => { /*jjj*/ }; (function(a) { })() 1`] = `
{
  "body": [
    {
      "end": 54,
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "end": 53,
          "range": [
            42,
            53,
          ],
          "start": 42,
          "type": "BlockStatement",
        },
        "end": 53,
        "expression": false,
        "generator": false,
        "params": [
          {
            "end": 37,
            "left": {
              "end": 33,
              "properties": [
                {
                  "computed": false,
                  "end": 31,
                  "key": {
                    "end": 9,
                    "name": "tyssjh",
                    "range": [
                      3,
                      9,
                    ],
                    "start": 3,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    3,
                    31,
                  ],
                  "shorthand": true,
                  "start": 3,
                  "type": "Property",
                  "value": {
                    "end": 31,
                    "left": {
                      "end": 9,
                      "name": "tyssjh",
                      "range": [
                        3,
                        9,
                      ],
                      "start": 3,
                      "type": "Identifier",
                    },
                    "range": [
                      3,
                      31,
                    ],
                    "right": {
                      "async": false,
                      "body": {
                        "end": 30,
                        "name": "a",
                        "range": [
                          29,
                          30,
                        ],
                        "start": 29,
                        "type": "Identifier",
                      },
                      "end": 30,
                      "expression": true,
                      "generator": false,
                      "params": [
                        {
                          "end": 24,
                          "left": {
                            "end": 20,
                            "name": "cspagh",
                            "range": [
                              14,
                              20,
                            ],
                            "start": 14,
                            "type": "Identifier",
                          },
                          "range": [
                            14,
                            24,
                          ],
                          "right": {
                            "end": 24,
                            "range": [
                              23,
                              24,
                            ],
                            "start": 23,
                            "type": "Literal",
                            "value": 4,
                          },
                          "start": 14,
                          "type": "AssignmentPattern",
                        },
                      ],
                      "range": [
                        13,
                        30,
                      ],
                      "start": 13,
                      "type": "ArrowFunctionExpression",
                    },
                    "start": 3,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                1,
                33,
              ],
              "start": 1,
              "type": "ObjectPattern",
            },
            "range": [
              1,
              37,
            ],
            "right": {
              "end": 37,
              "range": [
                36,
                37,
              ],
              "start": 36,
              "type": "Literal",
              "value": 1,
            },
            "start": 1,
            "type": "AssignmentPattern",
          },
        ],
        "range": [
          0,
          53,
        ],
        "start": 0,
        "type": "ArrowFunctionExpression",
      },
      "range": [
        0,
        54,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
    {
      "end": 74,
      "expression": {
        "arguments": [],
        "callee": {
          "async": false,
          "body": {
            "body": [],
            "end": 71,
            "range": [
              68,
              71,
            ],
            "start": 68,
            "type": "BlockStatement",
          },
          "end": 71,
          "generator": false,
          "id": null,
          "params": [
            {
              "end": 66,
              "name": "a",
              "range": [
                65,
                66,
              ],
              "start": 65,
              "type": "Identifier",
            },
          ],
          "range": [
            56,
            71,
          ],
          "start": 56,
          "type": "FunctionExpression",
        },
        "end": 74,
        "optional": false,
        "range": [
          55,
          74,
        ],
        "start": 55,
        "type": "CallExpression",
      },
      "range": [
        55,
        74,
      ],
      "start": 55,
      "type": "ExpressionStatement",
    },
  ],
  "end": 74,
  "range": [
    0,
    74,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({...[].x} = x); 1`] = `
{
  "body": [
    {
      "end": 16,
      "expression": {
        "end": 14,
        "left": {
          "end": 10,
          "properties": [
            {
              "argument": {
                "computed": false,
                "end": 9,
                "object": {
                  "elements": [],
                  "end": 7,
                  "range": [
                    5,
                    7,
                  ],
                  "start": 5,
                  "type": "ArrayExpression",
                },
                "optional": false,
                "property": {
                  "end": 9,
                  "name": "x",
                  "range": [
                    8,
                    9,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
                "range": [
                  5,
                  9,
                ],
                "start": 5,
                "type": "MemberExpression",
              },
              "end": 9,
              "range": [
                2,
                9,
              ],
              "start": 2,
              "type": "RestElement",
            },
          ],
          "range": [
            1,
            10,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          14,
        ],
        "right": {
          "end": 14,
          "name": "x",
          "range": [
            13,
            14,
          ],
          "start": 13,
          "type": "Identifier",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({["a"]: [b]} = 1 / (d = ((a)) = a)) 1`] = `
{
  "body": [
    {
      "end": 36,
      "expression": {
        "end": 35,
        "left": {
          "end": 13,
          "properties": [
            {
              "computed": true,
              "end": 12,
              "key": {
                "end": 6,
                "range": [
                  3,
                  6,
                ],
                "start": 3,
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                12,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "elements": [
                  {
                    "end": 11,
                    "name": "b",
                    "range": [
                      10,
                      11,
                    ],
                    "start": 10,
                    "type": "Identifier",
                  },
                ],
                "end": 12,
                "range": [
                  9,
                  12,
                ],
                "start": 9,
                "type": "ArrayPattern",
              },
            },
          ],
          "range": [
            1,
            13,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          35,
        ],
        "right": {
          "end": 35,
          "left": {
            "end": 17,
            "range": [
              16,
              17,
            ],
            "start": 16,
            "type": "Literal",
            "value": 1,
          },
          "operator": "/",
          "range": [
            16,
            35,
          ],
          "right": {
            "end": 34,
            "left": {
              "end": 22,
              "name": "d",
              "range": [
                21,
                22,
              ],
              "start": 21,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              21,
              34,
            ],
            "right": {
              "end": 34,
              "left": {
                "end": 28,
                "name": "a",
                "range": [
                  27,
                  28,
                ],
                "start": 27,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                25,
                34,
              ],
              "right": {
                "end": 34,
                "name": "a",
                "range": [
                  33,
                  34,
                ],
                "start": 33,
                "type": "Identifier",
              },
              "start": 25,
              "type": "AssignmentExpression",
            },
            "start": 21,
            "type": "AssignmentExpression",
          },
          "start": 16,
          "type": "BinaryExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        36,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 36,
  "range": [
    0,
    36,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({["a"]: [b]} = 1 / (d = (e))) 1`] = `
{
  "body": [
    {
      "end": 30,
      "expression": {
        "end": 29,
        "left": {
          "end": 13,
          "properties": [
            {
              "computed": true,
              "end": 12,
              "key": {
                "end": 6,
                "range": [
                  3,
                  6,
                ],
                "start": 3,
                "type": "Literal",
                "value": "a",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                12,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "elements": [
                  {
                    "end": 11,
                    "name": "b",
                    "range": [
                      10,
                      11,
                    ],
                    "start": 10,
                    "type": "Identifier",
                  },
                ],
                "end": 12,
                "range": [
                  9,
                  12,
                ],
                "start": 9,
                "type": "ArrayPattern",
              },
            },
          ],
          "range": [
            1,
            13,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          29,
        ],
        "right": {
          "end": 29,
          "left": {
            "end": 17,
            "range": [
              16,
              17,
            ],
            "start": 16,
            "type": "Literal",
            "value": 1,
          },
          "operator": "/",
          "range": [
            16,
            29,
          ],
          "right": {
            "end": 28,
            "left": {
              "end": 22,
              "name": "d",
              "range": [
                21,
                22,
              ],
              "start": 21,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              21,
              28,
            ],
            "right": {
              "end": 27,
              "name": "e",
              "range": [
                26,
                27,
              ],
              "start": 26,
              "type": "Identifier",
            },
            "start": 21,
            "type": "AssignmentExpression",
          },
          "start": 16,
          "type": "BinaryExpression",
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        30,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 30,
  "range": [
    0,
    30,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({[(a)()]: {}}) 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 14,
        "properties": [
          {
            "computed": true,
            "end": 13,
            "key": {
              "arguments": [],
              "callee": {
                "end": 5,
                "name": "a",
                "range": [
                  4,
                  5,
                ],
                "start": 4,
                "type": "Identifier",
              },
              "end": 8,
              "optional": false,
              "range": [
                3,
                8,
              ],
              "start": 3,
              "type": "CallExpression",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              13,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "end": 13,
              "properties": [],
              "range": [
                11,
                13,
              ],
              "start": 11,
              "type": "ObjectExpression",
            },
          },
        ],
        "range": [
          1,
          14,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({a = [b]} = 1) 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 14,
        "left": {
          "end": 10,
          "properties": [
            {
              "computed": false,
              "end": 9,
              "key": {
                "end": 3,
                "name": "a",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                9,
              ],
              "shorthand": true,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 9,
                "left": {
                  "end": 3,
                  "name": "a",
                  "range": [
                    2,
                    3,
                  ],
                  "start": 2,
                  "type": "Identifier",
                },
                "range": [
                  2,
                  9,
                ],
                "right": {
                  "elements": [
                    {
                      "end": 8,
                      "name": "b",
                      "range": [
                        7,
                        8,
                      ],
                      "start": 7,
                      "type": "Identifier",
                    },
                  ],
                  "end": 9,
                  "range": [
                    6,
                    9,
                  ],
                  "start": 6,
                  "type": "ArrayExpression",
                },
                "start": 2,
                "type": "AssignmentPattern",
              },
            },
          ],
          "range": [
            1,
            10,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          14,
        ],
        "right": {
          "end": 14,
          "range": [
            13,
            14,
          ],
          "start": 13,
          "type": "Literal",
          "value": 1,
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({a,b=b,a:c,[a]:[d]})=>0; 1`] = `
{
  "body": [
    {
      "end": 25,
      "expression": {
        "async": false,
        "body": {
          "end": 24,
          "range": [
            23,
            24,
          ],
          "raw": "0",
          "start": 23,
          "type": "Literal",
          "value": 0,
        },
        "end": 24,
        "expression": true,
        "generator": false,
        "params": [
          {
            "end": 20,
            "properties": [
              {
                "computed": false,
                "end": 3,
                "key": {
                  "end": 3,
                  "name": "a",
                  "range": [
                    2,
                    3,
                  ],
                  "start": 2,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  2,
                  3,
                ],
                "shorthand": true,
                "start": 2,
                "type": "Property",
                "value": {
                  "end": 3,
                  "name": "a",
                  "range": [
                    2,
                    3,
                  ],
                  "start": 2,
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "end": 7,
                "key": {
                  "end": 5,
                  "name": "b",
                  "range": [
                    4,
                    5,
                  ],
                  "start": 4,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  4,
                  7,
                ],
                "shorthand": true,
                "start": 4,
                "type": "Property",
                "value": {
                  "end": 7,
                  "left": {
                    "end": 5,
                    "name": "b",
                    "range": [
                      4,
                      5,
                    ],
                    "start": 4,
                    "type": "Identifier",
                  },
                  "range": [
                    4,
                    7,
                  ],
                  "right": {
                    "end": 7,
                    "name": "b",
                    "range": [
                      6,
                      7,
                    ],
                    "start": 6,
                    "type": "Identifier",
                  },
                  "start": 4,
                  "type": "AssignmentPattern",
                },
              },
              {
                "computed": false,
                "end": 11,
                "key": {
                  "end": 9,
                  "name": "a",
                  "range": [
                    8,
                    9,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  8,
                  11,
                ],
                "shorthand": false,
                "start": 8,
                "type": "Property",
                "value": {
                  "end": 11,
                  "name": "c",
                  "range": [
                    10,
                    11,
                  ],
                  "start": 10,
                  "type": "Identifier",
                },
              },
              {
                "computed": true,
                "end": 19,
                "key": {
                  "end": 14,
                  "name": "a",
                  "range": [
                    13,
                    14,
                  ],
                  "start": 13,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  12,
                  19,
                ],
                "shorthand": false,
                "start": 12,
                "type": "Property",
                "value": {
                  "elements": [
                    {
                      "end": 18,
                      "name": "d",
                      "range": [
                        17,
                        18,
                      ],
                      "start": 17,
                      "type": "Identifier",
                    },
                  ],
                  "end": 19,
                  "range": [
                    16,
                    19,
                  ],
                  "start": 16,
                  "type": "ArrayPattern",
                },
              },
            ],
            "range": [
              1,
              20,
            ],
            "start": 1,
            "type": "ObjectPattern",
          },
        ],
        "range": [
          0,
          24,
        ],
        "start": 0,
        "type": "ArrowFunctionExpression",
      },
      "range": [
        0,
        25,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 25,
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({a: ("string") / a[3](((((a /= [b.c] = (x)))))) }) 1`] = `
{
  "body": [
    {
      "end": 51,
      "expression": {
        "end": 50,
        "properties": [
          {
            "computed": false,
            "end": 48,
            "key": {
              "end": 3,
              "name": "a",
              "range": [
                2,
                3,
              ],
              "start": 2,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              48,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "end": 48,
              "left": {
                "end": 14,
                "range": [
                  6,
                  14,
                ],
                "start": 6,
                "type": "Literal",
                "value": "string",
              },
              "operator": "/",
              "range": [
                5,
                48,
              ],
              "right": {
                "arguments": [
                  {
                    "end": 43,
                    "left": {
                      "end": 28,
                      "name": "a",
                      "range": [
                        27,
                        28,
                      ],
                      "start": 27,
                      "type": "Identifier",
                    },
                    "operator": "/=",
                    "range": [
                      27,
                      43,
                    ],
                    "right": {
                      "end": 43,
                      "left": {
                        "elements": [
                          {
                            "computed": false,
                            "end": 36,
                            "object": {
                              "end": 34,
                              "name": "b",
                              "range": [
                                33,
                                34,
                              ],
                              "start": 33,
                              "type": "Identifier",
                            },
                            "optional": false,
                            "property": {
                              "end": 36,
                              "name": "c",
                              "range": [
                                35,
                                36,
                              ],
                              "start": 35,
                              "type": "Identifier",
                            },
                            "range": [
                              33,
                              36,
                            ],
                            "start": 33,
                            "type": "MemberExpression",
                          },
                        ],
                        "end": 37,
                        "range": [
                          32,
                          37,
                        ],
                        "start": 32,
                        "type": "ArrayPattern",
                      },
                      "operator": "=",
                      "range": [
                        32,
                        43,
                      ],
                      "right": {
                        "end": 42,
                        "name": "x",
                        "range": [
                          41,
                          42,
                        ],
                        "start": 41,
                        "type": "Identifier",
                      },
                      "start": 32,
                      "type": "AssignmentExpression",
                    },
                    "start": 27,
                    "type": "AssignmentExpression",
                  },
                ],
                "callee": {
                  "computed": true,
                  "end": 22,
                  "object": {
                    "end": 19,
                    "name": "a",
                    "range": [
                      18,
                      19,
                    ],
                    "start": 18,
                    "type": "Identifier",
                  },
                  "optional": false,
                  "property": {
                    "end": 21,
                    "range": [
                      20,
                      21,
                    ],
                    "start": 20,
                    "type": "Literal",
                    "value": 3,
                  },
                  "range": [
                    18,
                    22,
                  ],
                  "start": 18,
                  "type": "MemberExpression",
                },
                "end": 48,
                "optional": false,
                "range": [
                  18,
                  48,
                ],
                "start": 18,
                "type": "CallExpression",
              },
              "start": 5,
              "type": "BinaryExpression",
            },
          },
        ],
        "range": [
          1,
          50,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        51,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 51,
  "range": [
    0,
    51,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({a: ("string") / a[3](((((a = b.c))))) }) 1`] = `
{
  "body": [
    {
      "end": 42,
      "expression": {
        "end": 41,
        "properties": [
          {
            "computed": false,
            "end": 39,
            "key": {
              "end": 3,
              "name": "a",
              "range": [
                2,
                3,
              ],
              "start": 2,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              39,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "end": 39,
              "left": {
                "end": 14,
                "range": [
                  6,
                  14,
                ],
                "start": 6,
                "type": "Literal",
                "value": "string",
              },
              "operator": "/",
              "range": [
                5,
                39,
              ],
              "right": {
                "arguments": [
                  {
                    "end": 34,
                    "left": {
                      "end": 28,
                      "name": "a",
                      "range": [
                        27,
                        28,
                      ],
                      "start": 27,
                      "type": "Identifier",
                    },
                    "operator": "=",
                    "range": [
                      27,
                      34,
                    ],
                    "right": {
                      "computed": false,
                      "end": 34,
                      "object": {
                        "end": 32,
                        "name": "b",
                        "range": [
                          31,
                          32,
                        ],
                        "start": 31,
                        "type": "Identifier",
                      },
                      "optional": false,
                      "property": {
                        "end": 34,
                        "name": "c",
                        "range": [
                          33,
                          34,
                        ],
                        "start": 33,
                        "type": "Identifier",
                      },
                      "range": [
                        31,
                        34,
                      ],
                      "start": 31,
                      "type": "MemberExpression",
                    },
                    "start": 27,
                    "type": "AssignmentExpression",
                  },
                ],
                "callee": {
                  "computed": true,
                  "end": 22,
                  "object": {
                    "end": 19,
                    "name": "a",
                    "range": [
                      18,
                      19,
                    ],
                    "start": 18,
                    "type": "Identifier",
                  },
                  "optional": false,
                  "property": {
                    "end": 21,
                    "range": [
                      20,
                      21,
                    ],
                    "start": 20,
                    "type": "Literal",
                    "value": 3,
                  },
                  "range": [
                    18,
                    22,
                  ],
                  "start": 18,
                  "type": "MemberExpression",
                },
                "end": 39,
                "optional": false,
                "range": [
                  18,
                  39,
                ],
                "start": 18,
                "type": "CallExpression",
              },
              "start": 5,
              "type": "BinaryExpression",
            },
          },
        ],
        "range": [
          1,
          41,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        42,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 42,
  "range": [
    0,
    42,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({a: ("string") / a[3](a = b.c) }) 1`] = `
{
  "body": [
    {
      "end": 34,
      "expression": {
        "end": 33,
        "properties": [
          {
            "computed": false,
            "end": 31,
            "key": {
              "end": 3,
              "name": "a",
              "range": [
                2,
                3,
              ],
              "start": 2,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              2,
              31,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "end": 31,
              "left": {
                "end": 14,
                "range": [
                  6,
                  14,
                ],
                "start": 6,
                "type": "Literal",
                "value": "string",
              },
              "operator": "/",
              "range": [
                5,
                31,
              ],
              "right": {
                "arguments": [
                  {
                    "end": 30,
                    "left": {
                      "end": 24,
                      "name": "a",
                      "range": [
                        23,
                        24,
                      ],
                      "start": 23,
                      "type": "Identifier",
                    },
                    "operator": "=",
                    "range": [
                      23,
                      30,
                    ],
                    "right": {
                      "computed": false,
                      "end": 30,
                      "object": {
                        "end": 28,
                        "name": "b",
                        "range": [
                          27,
                          28,
                        ],
                        "start": 27,
                        "type": "Identifier",
                      },
                      "optional": false,
                      "property": {
                        "end": 30,
                        "name": "c",
                        "range": [
                          29,
                          30,
                        ],
                        "start": 29,
                        "type": "Identifier",
                      },
                      "range": [
                        27,
                        30,
                      ],
                      "start": 27,
                      "type": "MemberExpression",
                    },
                    "start": 23,
                    "type": "AssignmentExpression",
                  },
                ],
                "callee": {
                  "computed": true,
                  "end": 22,
                  "object": {
                    "end": 19,
                    "name": "a",
                    "range": [
                      18,
                      19,
                    ],
                    "start": 18,
                    "type": "Identifier",
                  },
                  "optional": false,
                  "property": {
                    "end": 21,
                    "range": [
                      20,
                      21,
                    ],
                    "start": 20,
                    "type": "Literal",
                    "value": 3,
                  },
                  "range": [
                    18,
                    22,
                  ],
                  "start": 18,
                  "type": "MemberExpression",
                },
                "end": 31,
                "optional": false,
                "range": [
                  18,
                  31,
                ],
                "start": 18,
                "type": "CallExpression",
              },
              "start": 5,
              "type": "BinaryExpression",
            },
          },
        ],
        "range": [
          1,
          33,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        34,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 34,
  "range": [
    0,
    34,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({a: 1 || 1}.a = 1) 1`] = `
{
  "body": [
    {
      "end": 19,
      "expression": {
        "end": 18,
        "left": {
          "computed": false,
          "end": 14,
          "object": {
            "end": 12,
            "properties": [
              {
                "computed": false,
                "end": 11,
                "key": {
                  "end": 3,
                  "name": "a",
                  "range": [
                    2,
                    3,
                  ],
                  "start": 2,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  2,
                  11,
                ],
                "shorthand": false,
                "start": 2,
                "type": "Property",
                "value": {
                  "end": 11,
                  "left": {
                    "end": 6,
                    "range": [
                      5,
                      6,
                    ],
                    "start": 5,
                    "type": "Literal",
                    "value": 1,
                  },
                  "operator": "||",
                  "range": [
                    5,
                    11,
                  ],
                  "right": {
                    "end": 11,
                    "range": [
                      10,
                      11,
                    ],
                    "start": 10,
                    "type": "Literal",
                    "value": 1,
                  },
                  "start": 5,
                  "type": "LogicalExpression",
                },
              },
            ],
            "range": [
              1,
              12,
            ],
            "start": 1,
            "type": "ObjectExpression",
          },
          "optional": false,
          "property": {
            "end": 14,
            "name": "a",
            "range": [
              13,
              14,
            ],
            "start": 13,
            "type": "Identifier",
          },
          "range": [
            1,
            14,
          ],
          "start": 1,
          "type": "MemberExpression",
        },
        "operator": "=",
        "range": [
          1,
          18,
        ],
        "right": {
          "end": 18,
          "range": [
            17,
            18,
          ],
          "start": 17,
          "type": "Literal",
          "value": 1,
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({a:a}=1)() 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "arguments": [],
        "callee": {
          "end": 8,
          "left": {
            "end": 6,
            "properties": [
              {
                "computed": false,
                "end": 5,
                "key": {
                  "end": 3,
                  "name": "a",
                  "range": [
                    2,
                    3,
                  ],
                  "start": 2,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  2,
                  5,
                ],
                "shorthand": false,
                "start": 2,
                "type": "Property",
                "value": {
                  "end": 5,
                  "name": "a",
                  "range": [
                    4,
                    5,
                  ],
                  "start": 4,
                  "type": "Identifier",
                },
              },
            ],
            "range": [
              1,
              6,
            ],
            "start": 1,
            "type": "ObjectPattern",
          },
          "operator": "=",
          "range": [
            1,
            8,
          ],
          "right": {
            "end": 8,
            "range": [
              7,
              8,
            ],
            "start": 7,
            "type": "Literal",
            "value": 1,
          },
          "start": 1,
          "type": "AssignmentExpression",
        },
        "end": 11,
        "optional": false,
        "range": [
          0,
          11,
        ],
        "start": 0,
        "type": "CallExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({f({x} = {x: 10}) {}}); 1`] = `
{
  "body": [
    {
      "end": 24,
      "expression": {
        "end": 22,
        "properties": [
          {
            "computed": false,
            "end": 21,
            "key": {
              "end": 3,
              "name": "f",
              "range": [
                2,
                3,
              ],
              "start": 2,
              "type": "Identifier",
            },
            "kind": "init",
            "method": true,
            "range": [
              2,
              21,
            ],
            "shorthand": false,
            "start": 2,
            "type": "Property",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 21,
                "range": [
                  19,
                  21,
                ],
                "start": 19,
                "type": "BlockStatement",
              },
              "end": 21,
              "generator": false,
              "id": null,
              "params": [
                {
                  "end": 17,
                  "left": {
                    "end": 7,
                    "properties": [
                      {
                        "computed": false,
                        "end": 6,
                        "key": {
                          "end": 6,
                          "name": "x",
                          "range": [
                            5,
                            6,
                          ],
                          "start": 5,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          5,
                          6,
                        ],
                        "shorthand": true,
                        "start": 5,
                        "type": "Property",
                        "value": {
                          "end": 6,
                          "name": "x",
                          "range": [
                            5,
                            6,
                          ],
                          "start": 5,
                          "type": "Identifier",
                        },
                      },
                    ],
                    "range": [
                      4,
                      7,
                    ],
                    "start": 4,
                    "type": "ObjectPattern",
                  },
                  "range": [
                    4,
                    17,
                  ],
                  "right": {
                    "end": 17,
                    "properties": [
                      {
                        "computed": false,
                        "end": 16,
                        "key": {
                          "end": 12,
                          "name": "x",
                          "range": [
                            11,
                            12,
                          ],
                          "start": 11,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          11,
                          16,
                        ],
                        "shorthand": false,
                        "start": 11,
                        "type": "Property",
                        "value": {
                          "end": 16,
                          "range": [
                            14,
                            16,
                          ],
                          "start": 14,
                          "type": "Literal",
                          "value": 10,
                        },
                      },
                    ],
                    "range": [
                      10,
                      17,
                    ],
                    "start": 10,
                    "type": "ObjectExpression",
                  },
                  "start": 4,
                  "type": "AssignmentPattern",
                },
              ],
              "range": [
                3,
                21,
              ],
              "start": 3,
              "type": "FunctionExpression",
            },
          },
        ],
        "range": [
          1,
          22,
        ],
        "start": 1,
        "type": "ObjectExpression",
      },
      "range": [
        0,
        24,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 24,
  "range": [
    0,
    24,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({x = 10, y: { z = 10 }}) => [x, z] 1`] = `
{
  "body": [
    {
      "end": 35,
      "expression": {
        "async": false,
        "body": {
          "elements": [
            {
              "end": 31,
              "name": "x",
              "range": [
                30,
                31,
              ],
              "start": 30,
              "type": "Identifier",
            },
            {
              "end": 34,
              "name": "z",
              "range": [
                33,
                34,
              ],
              "start": 33,
              "type": "Identifier",
            },
          ],
          "end": 35,
          "range": [
            29,
            35,
          ],
          "start": 29,
          "type": "ArrayExpression",
        },
        "end": 35,
        "expression": true,
        "generator": false,
        "params": [
          {
            "end": 24,
            "properties": [
              {
                "computed": false,
                "end": 8,
                "key": {
                  "end": 3,
                  "name": "x",
                  "range": [
                    2,
                    3,
                  ],
                  "start": 2,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  2,
                  8,
                ],
                "shorthand": true,
                "start": 2,
                "type": "Property",
                "value": {
                  "end": 8,
                  "left": {
                    "end": 3,
                    "name": "x",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                  "range": [
                    2,
                    8,
                  ],
                  "right": {
                    "end": 8,
                    "range": [
                      6,
                      8,
                    ],
                    "start": 6,
                    "type": "Literal",
                    "value": 10,
                  },
                  "start": 2,
                  "type": "AssignmentPattern",
                },
              },
              {
                "computed": false,
                "end": 23,
                "key": {
                  "end": 11,
                  "name": "y",
                  "range": [
                    10,
                    11,
                  ],
                  "start": 10,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  10,
                  23,
                ],
                "shorthand": false,
                "start": 10,
                "type": "Property",
                "value": {
                  "end": 23,
                  "properties": [
                    {
                      "computed": false,
                      "end": 21,
                      "key": {
                        "end": 16,
                        "name": "z",
                        "range": [
                          15,
                          16,
                        ],
                        "start": 15,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        15,
                        21,
                      ],
                      "shorthand": true,
                      "start": 15,
                      "type": "Property",
                      "value": {
                        "end": 21,
                        "left": {
                          "end": 16,
                          "name": "z",
                          "range": [
                            15,
                            16,
                          ],
                          "start": 15,
                          "type": "Identifier",
                        },
                        "range": [
                          15,
                          21,
                        ],
                        "right": {
                          "end": 21,
                          "range": [
                            19,
                            21,
                          ],
                          "start": 19,
                          "type": "Literal",
                          "value": 10,
                        },
                        "start": 15,
                        "type": "AssignmentPattern",
                      },
                    },
                  ],
                  "range": [
                    13,
                    23,
                  ],
                  "start": 13,
                  "type": "ObjectPattern",
                },
              },
            ],
            "range": [
              1,
              24,
            ],
            "start": 1,
            "type": "ObjectPattern",
          },
        ],
        "range": [
          0,
          35,
        ],
        "start": 0,
        "type": "ArrowFunctionExpression",
      },
      "range": [
        0,
        35,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 35,
  "range": [
    0,
    35,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({x,y,} = 0) 1`] = `
{
  "body": [
    {
      "end": 12,
      "expression": {
        "end": 11,
        "left": {
          "end": 7,
          "properties": [
            {
              "computed": false,
              "end": 3,
              "key": {
                "end": 3,
                "name": "x",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                3,
              ],
              "shorthand": true,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 3,
                "name": "x",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 5,
              "key": {
                "end": 5,
                "name": "y",
                "range": [
                  4,
                  5,
                ],
                "start": 4,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                4,
                5,
              ],
              "shorthand": true,
              "start": 4,
              "type": "Property",
              "value": {
                "end": 5,
                "name": "y",
                "range": [
                  4,
                  5,
                ],
                "start": 4,
                "type": "Identifier",
              },
            },
          ],
          "range": [
            1,
            7,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          11,
        ],
        "right": {
          "end": 11,
          "range": [
            10,
            11,
          ],
          "start": 10,
          "type": "Literal",
          "value": 0,
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > ({x: y = z = 0} = 1) 1`] = `
{
  "body": [
    {
      "end": 20,
      "expression": {
        "end": 19,
        "left": {
          "end": 15,
          "properties": [
            {
              "computed": false,
              "end": 14,
              "key": {
                "end": 3,
                "name": "x",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                2,
                14,
              ],
              "shorthand": false,
              "start": 2,
              "type": "Property",
              "value": {
                "end": 14,
                "left": {
                  "end": 6,
                  "name": "y",
                  "range": [
                    5,
                    6,
                  ],
                  "start": 5,
                  "type": "Identifier",
                },
                "range": [
                  5,
                  14,
                ],
                "right": {
                  "end": 14,
                  "left": {
                    "end": 10,
                    "name": "z",
                    "range": [
                      9,
                      10,
                    ],
                    "start": 9,
                    "type": "Identifier",
                  },
                  "operator": "=",
                  "range": [
                    9,
                    14,
                  ],
                  "right": {
                    "end": 14,
                    "range": [
                      13,
                      14,
                    ],
                    "start": 13,
                    "type": "Literal",
                    "value": 0,
                  },
                  "start": 9,
                  "type": "AssignmentExpression",
                },
                "start": 5,
                "type": "AssignmentPattern",
              },
            },
          ],
          "range": [
            1,
            15,
          ],
          "start": 1,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          1,
          19,
        ],
        "right": {
          "end": 19,
          "range": [
            18,
            19,
          ],
          "start": 18,
          "type": "Literal",
          "value": 1,
        },
        "start": 1,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        20,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > (x, y = 9, ...a) => {} 1`] = `
{
  "body": [
    {
      "end": 22,
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "end": 22,
          "range": [
            20,
            22,
          ],
          "start": 20,
          "type": "BlockStatement",
        },
        "end": 22,
        "expression": false,
        "generator": false,
        "params": [
          {
            "end": 2,
            "name": "x",
            "range": [
              1,
              2,
            ],
            "start": 1,
            "type": "Identifier",
          },
          {
            "end": 9,
            "left": {
              "end": 5,
              "name": "y",
              "range": [
                4,
                5,
              ],
              "start": 4,
              "type": "Identifier",
            },
            "range": [
              4,
              9,
            ],
            "right": {
              "end": 9,
              "range": [
                8,
                9,
              ],
              "start": 8,
              "type": "Literal",
              "value": 9,
            },
            "start": 4,
            "type": "AssignmentPattern",
          },
          {
            "argument": {
              "end": 15,
              "name": "a",
              "range": [
                14,
                15,
              ],
              "start": 14,
              "type": "Identifier",
            },
            "end": 15,
            "range": [
              11,
              15,
            ],
            "start": 11,
            "type": "RestElement",
          },
        ],
        "range": [
          0,
          22,
        ],
        "start": 0,
        "type": "ArrowFunctionExpression",
      },
      "range": [
        0,
        22,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 22,
  "range": [
    0,
    22,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > (x, y = 9, {b}, z = 8, ...a) => {} 1`] = `
{
  "body": [
    {
      "end": 34,
      "expression": {
        "async": false,
        "body": {
          "body": [],
          "end": 34,
          "range": [
            32,
            34,
          ],
          "start": 32,
          "type": "BlockStatement",
        },
        "end": 34,
        "expression": false,
        "generator": false,
        "params": [
          {
            "end": 2,
            "name": "x",
            "range": [
              1,
              2,
            ],
            "start": 1,
            "type": "Identifier",
          },
          {
            "end": 9,
            "left": {
              "end": 5,
              "name": "y",
              "range": [
                4,
                5,
              ],
              "start": 4,
              "type": "Identifier",
            },
            "range": [
              4,
              9,
            ],
            "right": {
              "end": 9,
              "range": [
                8,
                9,
              ],
              "raw": "9",
              "start": 8,
              "type": "Literal",
              "value": 9,
            },
            "start": 4,
            "type": "AssignmentPattern",
          },
          {
            "end": 14,
            "properties": [
              {
                "computed": false,
                "end": 13,
                "key": {
                  "end": 13,
                  "name": "b",
                  "range": [
                    12,
                    13,
                  ],
                  "start": 12,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  12,
                  13,
                ],
                "shorthand": true,
                "start": 12,
                "type": "Property",
                "value": {
                  "end": 13,
                  "name": "b",
                  "range": [
                    12,
                    13,
                  ],
                  "start": 12,
                  "type": "Identifier",
                },
              },
            ],
            "range": [
              11,
              14,
            ],
            "start": 11,
            "type": "ObjectPattern",
          },
          {
            "end": 21,
            "left": {
              "end": 17,
              "name": "z",
              "range": [
                16,
                17,
              ],
              "start": 16,
              "type": "Identifier",
            },
            "range": [
              16,
              21,
            ],
            "right": {
              "end": 21,
              "range": [
                20,
                21,
              ],
              "raw": "8",
              "start": 20,
              "type": "Literal",
              "value": 8,
            },
            "start": 16,
            "type": "AssignmentPattern",
          },
          {
            "argument": {
              "end": 27,
              "name": "a",
              "range": [
                26,
                27,
              ],
              "start": 26,
              "type": "Identifier",
            },
            "end": 27,
            "range": [
              23,
              27,
            ],
            "start": 23,
            "type": "RestElement",
          },
        ],
        "range": [
          0,
          34,
        ],
        "start": 0,
        "type": "ArrowFunctionExpression",
      },
      "range": [
        0,
        34,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 34,
  "range": [
    0,
    34,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [ foo ] = bar 1`] = `
{
  "body": [
    {
      "end": 13,
      "expression": {
        "end": 13,
        "left": {
          "elements": [
            {
              "end": 5,
              "name": "foo",
              "range": [
                2,
                5,
              ],
              "start": 2,
              "type": "Identifier",
            },
          ],
          "end": 7,
          "range": [
            0,
            7,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          13,
        ],
        "right": {
          "end": 13,
          "name": "bar",
          "range": [
            10,
            13,
          ],
          "start": 10,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        13,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 13,
  "range": [
    0,
    13,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [ foo ] 1`] = `
{
  "body": [
    {
      "end": 7,
      "expression": {
        "elements": [
          {
            "end": 5,
            "name": "foo",
            "range": [
              2,
              5,
            ],
            "start": 2,
            "type": "Identifier",
          },
        ],
        "end": 7,
        "range": [
          0,
          7,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        7,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 7,
  "range": [
    0,
    7,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [((((((x.y))))))] = obj 1`] = `
{
  "body": [
    {
      "end": 23,
      "expression": {
        "end": 23,
        "left": {
          "elements": [
            {
              "computed": false,
              "end": 10,
              "object": {
                "end": 8,
                "name": "x",
                "range": [
                  7,
                  8,
                ],
                "start": 7,
                "type": "Identifier",
              },
              "optional": false,
              "property": {
                "end": 10,
                "name": "y",
                "range": [
                  9,
                  10,
                ],
                "start": 9,
                "type": "Identifier",
              },
              "range": [
                7,
                10,
              ],
              "start": 7,
              "type": "MemberExpression",
            },
          ],
          "end": 17,
          "range": [
            0,
            17,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          23,
        ],
        "right": {
          "end": 23,
          "name": "obj",
          "range": [
            20,
            23,
          ],
          "start": 20,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        23,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 23,
  "range": [
    0,
    23,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [...[...a[x]]] = 1 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "end": 18,
        "left": {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "argument": {
                      "computed": true,
                      "end": 12,
                      "object": {
                        "end": 9,
                        "name": "a",
                        "range": [
                          8,
                          9,
                        ],
                        "start": 8,
                        "type": "Identifier",
                      },
                      "optional": false,
                      "property": {
                        "end": 11,
                        "name": "x",
                        "range": [
                          10,
                          11,
                        ],
                        "start": 10,
                        "type": "Identifier",
                      },
                      "range": [
                        8,
                        12,
                      ],
                      "start": 8,
                      "type": "MemberExpression",
                    },
                    "end": 12,
                    "range": [
                      5,
                      12,
                    ],
                    "start": 5,
                    "type": "RestElement",
                  },
                ],
                "end": 13,
                "range": [
                  4,
                  13,
                ],
                "start": 4,
                "type": "ArrayPattern",
              },
              "end": 13,
              "range": [
                1,
                13,
              ],
              "start": 1,
              "type": "RestElement",
            },
          ],
          "end": 14,
          "range": [
            0,
            14,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          18,
        ],
        "right": {
          "end": 18,
          "range": [
            17,
            18,
          ],
          "start": 17,
          "type": "Literal",
          "value": 1,
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [...[...a[x]]] = b 1`] = `
{
  "body": [
    {
      "end": 18,
      "expression": {
        "end": 18,
        "left": {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "argument": {
                      "computed": true,
                      "end": 12,
                      "object": {
                        "end": 9,
                        "name": "a",
                        "range": [
                          8,
                          9,
                        ],
                        "start": 8,
                        "type": "Identifier",
                      },
                      "optional": false,
                      "property": {
                        "end": 11,
                        "name": "x",
                        "range": [
                          10,
                          11,
                        ],
                        "start": 10,
                        "type": "Identifier",
                      },
                      "range": [
                        8,
                        12,
                      ],
                      "start": 8,
                      "type": "MemberExpression",
                    },
                    "end": 12,
                    "range": [
                      5,
                      12,
                    ],
                    "start": 5,
                    "type": "RestElement",
                  },
                ],
                "end": 13,
                "range": [
                  4,
                  13,
                ],
                "start": 4,
                "type": "ArrayPattern",
              },
              "end": 13,
              "range": [
                1,
                13,
              ],
              "start": 1,
              "type": "RestElement",
            },
          ],
          "end": 14,
          "range": [
            0,
            14,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          18,
        ],
        "right": {
          "end": 18,
          "name": "b",
          "range": [
            17,
            18,
          ],
          "start": 17,
          "type": "Identifier",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [...[{prop: 1}.prop]] = [] 1`] = `
{
  "body": [
    {
      "end": 26,
      "expression": {
        "end": 26,
        "left": {
          "elements": [
            {
              "argument": {
                "elements": [
                  {
                    "computed": false,
                    "end": 19,
                    "object": {
                      "end": 14,
                      "properties": [
                        {
                          "computed": false,
                          "end": 13,
                          "key": {
                            "end": 10,
                            "name": "prop",
                            "range": [
                              6,
                              10,
                            ],
                            "start": 6,
                            "type": "Identifier",
                          },
                          "kind": "init",
                          "method": false,
                          "range": [
                            6,
                            13,
                          ],
                          "shorthand": false,
                          "start": 6,
                          "type": "Property",
                          "value": {
                            "end": 13,
                            "range": [
                              12,
                              13,
                            ],
                            "start": 12,
                            "type": "Literal",
                            "value": 1,
                          },
                        },
                      ],
                      "range": [
                        5,
                        14,
                      ],
                      "start": 5,
                      "type": "ObjectExpression",
                    },
                    "optional": false,
                    "property": {
                      "end": 19,
                      "name": "prop",
                      "range": [
                        15,
                        19,
                      ],
                      "start": 15,
                      "type": "Identifier",
                    },
                    "range": [
                      5,
                      19,
                    ],
                    "start": 5,
                    "type": "MemberExpression",
                  },
                ],
                "end": 20,
                "range": [
                  4,
                  20,
                ],
                "start": 4,
                "type": "ArrayPattern",
              },
              "end": 20,
              "range": [
                1,
                20,
              ],
              "start": 1,
              "type": "RestElement",
            },
          ],
          "end": 21,
          "range": [
            0,
            21,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          26,
        ],
        "right": {
          "elements": [],
          "end": 26,
          "range": [
            24,
            26,
          ],
          "start": 24,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [...{a:a = 1}] = [{}]; 1`] = `
{
  "body": [
    {
      "end": 22,
      "expression": {
        "end": 21,
        "left": {
          "elements": [
            {
              "argument": {
                "end": 13,
                "properties": [
                  {
                    "computed": false,
                    "end": 12,
                    "key": {
                      "end": 6,
                      "name": "a",
                      "range": [
                        5,
                        6,
                      ],
                      "start": 5,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      5,
                      12,
                    ],
                    "shorthand": false,
                    "start": 5,
                    "type": "Property",
                    "value": {
                      "end": 12,
                      "left": {
                        "end": 8,
                        "name": "a",
                        "range": [
                          7,
                          8,
                        ],
                        "start": 7,
                        "type": "Identifier",
                      },
                      "range": [
                        7,
                        12,
                      ],
                      "right": {
                        "end": 12,
                        "range": [
                          11,
                          12,
                        ],
                        "start": 11,
                        "type": "Literal",
                        "value": 1,
                      },
                      "start": 7,
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "range": [
                  4,
                  13,
                ],
                "start": 4,
                "type": "ObjectPattern",
              },
              "end": 13,
              "range": [
                1,
                13,
              ],
              "start": 1,
              "type": "RestElement",
            },
          ],
          "end": 14,
          "range": [
            0,
            14,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          21,
        ],
        "right": {
          "elements": [
            {
              "end": 20,
              "properties": [],
              "range": [
                18,
                20,
              ],
              "start": 18,
              "type": "ObjectExpression",
            },
          ],
          "end": 21,
          "range": [
            17,
            21,
          ],
          "start": 17,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        22,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 22,
  "range": [
    0,
    22,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [[[...a]]] = [[[]]]; 1`] = `
{
  "body": [
    {
      "end": 20,
      "expression": {
        "end": 19,
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "elements": [
                    {
                      "argument": {
                        "end": 7,
                        "name": "a",
                        "range": [
                          6,
                          7,
                        ],
                        "start": 6,
                        "type": "Identifier",
                      },
                      "end": 7,
                      "range": [
                        3,
                        7,
                      ],
                      "start": 3,
                      "type": "RestElement",
                    },
                  ],
                  "end": 8,
                  "range": [
                    2,
                    8,
                  ],
                  "start": 2,
                  "type": "ArrayPattern",
                },
              ],
              "end": 9,
              "range": [
                1,
                9,
              ],
              "start": 1,
              "type": "ArrayPattern",
            },
          ],
          "end": 10,
          "range": [
            0,
            10,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          19,
        ],
        "right": {
          "elements": [
            {
              "elements": [
                {
                  "elements": [],
                  "end": 17,
                  "range": [
                    15,
                    17,
                  ],
                  "start": 15,
                  "type": "ArrayExpression",
                },
              ],
              "end": 18,
              "range": [
                14,
                18,
              ],
              "start": 14,
              "type": "ArrayExpression",
            },
          ],
          "end": 19,
          "range": [
            13,
            19,
          ],
          "start": 13,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        20,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [[[[[[[a=b] = c] = c] = c] = c] = c] = c] = [[[[[[[a=b] = c]]] = c] = c] = c] = c; 1`] = `
{
  "body": [
    {
      "end": 82,
      "expression": {
        "end": 81,
        "left": {
          "elements": [
            {
              "end": 40,
              "left": {
                "elements": [
                  {
                    "end": 35,
                    "left": {
                      "elements": [
                        {
                          "end": 30,
                          "left": {
                            "elements": [
                              {
                                "end": 25,
                                "left": {
                                  "elements": [
                                    {
                                      "end": 20,
                                      "left": {
                                        "elements": [
                                          {
                                            "end": 15,
                                            "left": {
                                              "elements": [
                                                {
                                                  "end": 10,
                                                  "left": {
                                                    "end": 8,
                                                    "name": "a",
                                                    "range": [
                                                      7,
                                                      8,
                                                    ],
                                                    "start": 7,
                                                    "type": "Identifier",
                                                  },
                                                  "range": [
                                                    7,
                                                    10,
                                                  ],
                                                  "right": {
                                                    "end": 10,
                                                    "name": "b",
                                                    "range": [
                                                      9,
                                                      10,
                                                    ],
                                                    "start": 9,
                                                    "type": "Identifier",
                                                  },
                                                  "start": 7,
                                                  "type": "AssignmentPattern",
                                                },
                                              ],
                                              "end": 11,
                                              "range": [
                                                6,
                                                11,
                                              ],
                                              "start": 6,
                                              "type": "ArrayPattern",
                                            },
                                            "range": [
                                              6,
                                              15,
                                            ],
                                            "right": {
                                              "end": 15,
                                              "name": "c",
                                              "range": [
                                                14,
                                                15,
                                              ],
                                              "start": 14,
                                              "type": "Identifier",
                                            },
                                            "start": 6,
                                            "type": "AssignmentPattern",
                                          },
                                        ],
                                        "end": 16,
                                        "range": [
                                          5,
                                          16,
                                        ],
                                        "start": 5,
                                        "type": "ArrayPattern",
                                      },
                                      "range": [
                                        5,
                                        20,
                                      ],
                                      "right": {
                                        "end": 20,
                                        "name": "c",
                                        "range": [
                                          19,
                                          20,
                                        ],
                                        "start": 19,
                                        "type": "Identifier",
                                      },
                                      "start": 5,
                                      "type": "AssignmentPattern",
                                    },
                                  ],
                                  "end": 21,
                                  "range": [
                                    4,
                                    21,
                                  ],
                                  "start": 4,
                                  "type": "ArrayPattern",
                                },
                                "range": [
                                  4,
                                  25,
                                ],
                                "right": {
                                  "end": 25,
                                  "name": "c",
                                  "range": [
                                    24,
                                    25,
                                  ],
                                  "start": 24,
                                  "type": "Identifier",
                                },
                                "start": 4,
                                "type": "AssignmentPattern",
                              },
                            ],
                            "end": 26,
                            "range": [
                              3,
                              26,
                            ],
                            "start": 3,
                            "type": "ArrayPattern",
                          },
                          "range": [
                            3,
                            30,
                          ],
                          "right": {
                            "end": 30,
                            "name": "c",
                            "range": [
                              29,
                              30,
                            ],
                            "start": 29,
                            "type": "Identifier",
                          },
                          "start": 3,
                          "type": "AssignmentPattern",
                        },
                      ],
                      "end": 31,
                      "range": [
                        2,
                        31,
                      ],
                      "start": 2,
                      "type": "ArrayPattern",
                    },
                    "range": [
                      2,
                      35,
                    ],
                    "right": {
                      "end": 35,
                      "name": "c",
                      "range": [
                        34,
                        35,
                      ],
                      "start": 34,
                      "type": "Identifier",
                    },
                    "start": 2,
                    "type": "AssignmentPattern",
                  },
                ],
                "end": 36,
                "range": [
                  1,
                  36,
                ],
                "start": 1,
                "type": "ArrayPattern",
              },
              "range": [
                1,
                40,
              ],
              "right": {
                "end": 40,
                "name": "c",
                "range": [
                  39,
                  40,
                ],
                "start": 39,
                "type": "Identifier",
              },
              "start": 1,
              "type": "AssignmentPattern",
            },
          ],
          "end": 41,
          "range": [
            0,
            41,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          81,
        ],
        "right": {
          "end": 81,
          "left": {
            "elements": [
              {
                "end": 76,
                "left": {
                  "elements": [
                    {
                      "end": 71,
                      "left": {
                        "elements": [
                          {
                            "end": 66,
                            "left": {
                              "elements": [
                                {
                                  "elements": [
                                    {
                                      "elements": [
                                        {
                                          "end": 59,
                                          "left": {
                                            "elements": [
                                              {
                                                "end": 54,
                                                "left": {
                                                  "end": 52,
                                                  "name": "a",
                                                  "range": [
                                                    51,
                                                    52,
                                                  ],
                                                  "start": 51,
                                                  "type": "Identifier",
                                                },
                                                "range": [
                                                  51,
                                                  54,
                                                ],
                                                "right": {
                                                  "end": 54,
                                                  "name": "b",
                                                  "range": [
                                                    53,
                                                    54,
                                                  ],
                                                  "start": 53,
                                                  "type": "Identifier",
                                                },
                                                "start": 51,
                                                "type": "AssignmentPattern",
                                              },
                                            ],
                                            "end": 55,
                                            "range": [
                                              50,
                                              55,
                                            ],
                                            "start": 50,
                                            "type": "ArrayPattern",
                                          },
                                          "range": [
                                            50,
                                            59,
                                          ],
                                          "right": {
                                            "end": 59,
                                            "name": "c",
                                            "range": [
                                              58,
                                              59,
                                            ],
                                            "start": 58,
                                            "type": "Identifier",
                                          },
                                          "start": 50,
                                          "type": "AssignmentPattern",
                                        },
                                      ],
                                      "end": 60,
                                      "range": [
                                        49,
                                        60,
                                      ],
                                      "start": 49,
                                      "type": "ArrayPattern",
                                    },
                                  ],
                                  "end": 61,
                                  "range": [
                                    48,
                                    61,
                                  ],
                                  "start": 48,
                                  "type": "ArrayPattern",
                                },
                              ],
                              "end": 62,
                              "range": [
                                47,
                                62,
                              ],
                              "start": 47,
                              "type": "ArrayPattern",
                            },
                            "range": [
                              47,
                              66,
                            ],
                            "right": {
                              "end": 66,
                              "name": "c",
                              "range": [
                                65,
                                66,
                              ],
                              "start": 65,
                              "type": "Identifier",
                            },
                            "start": 47,
                            "type": "AssignmentPattern",
                          },
                        ],
                        "end": 67,
                        "range": [
                          46,
                          67,
                        ],
                        "start": 46,
                        "type": "ArrayPattern",
                      },
                      "range": [
                        46,
                        71,
                      ],
                      "right": {
                        "end": 71,
                        "name": "c",
                        "range": [
                          70,
                          71,
                        ],
                        "start": 70,
                        "type": "Identifier",
                      },
                      "start": 46,
                      "type": "AssignmentPattern",
                    },
                  ],
                  "end": 72,
                  "range": [
                    45,
                    72,
                  ],
                  "start": 45,
                  "type": "ArrayPattern",
                },
                "range": [
                  45,
                  76,
                ],
                "right": {
                  "end": 76,
                  "name": "c",
                  "range": [
                    75,
                    76,
                  ],
                  "start": 75,
                  "type": "Identifier",
                },
                "start": 45,
                "type": "AssignmentPattern",
              },
            ],
            "end": 77,
            "range": [
              44,
              77,
            ],
            "start": 44,
            "type": "ArrayPattern",
          },
          "operator": "=",
          "range": [
            44,
            81,
          ],
          "right": {
            "end": 81,
            "name": "c",
            "range": [
              80,
              81,
            ],
            "start": 80,
            "type": "Identifier",
          },
          "start": 44,
          "type": "AssignmentExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        82,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 82,
  "range": [
    0,
    82,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [[[a.b =[]]]] 1`] = `
{
  "body": [
    {
      "end": 13,
      "expression": {
        "elements": [
          {
            "elements": [
              {
                "elements": [
                  {
                    "end": 10,
                    "left": {
                      "computed": false,
                      "end": 6,
                      "object": {
                        "end": 4,
                        "name": "a",
                        "range": [
                          3,
                          4,
                        ],
                        "start": 3,
                        "type": "Identifier",
                      },
                      "optional": false,
                      "property": {
                        "end": 6,
                        "name": "b",
                        "range": [
                          5,
                          6,
                        ],
                        "start": 5,
                        "type": "Identifier",
                      },
                      "range": [
                        3,
                        6,
                      ],
                      "start": 3,
                      "type": "MemberExpression",
                    },
                    "operator": "=",
                    "range": [
                      3,
                      10,
                    ],
                    "right": {
                      "elements": [],
                      "end": 10,
                      "range": [
                        8,
                        10,
                      ],
                      "start": 8,
                      "type": "ArrayExpression",
                    },
                    "start": 3,
                    "type": "AssignmentExpression",
                  },
                ],
                "end": 11,
                "range": [
                  2,
                  11,
                ],
                "start": 2,
                "type": "ArrayExpression",
              },
            ],
            "end": 12,
            "range": [
              1,
              12,
            ],
            "start": 1,
            "type": "ArrayExpression",
          },
        ],
        "end": 13,
        "range": [
          0,
          13,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        13,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 13,
  "range": [
    0,
    13,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [[a]=[1]] = []; 1`] = `
{
  "body": [
    {
      "end": 15,
      "expression": {
        "end": 14,
        "left": {
          "elements": [
            {
              "end": 8,
              "left": {
                "elements": [
                  {
                    "end": 3,
                    "name": "a",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                ],
                "end": 4,
                "range": [
                  1,
                  4,
                ],
                "start": 1,
                "type": "ArrayPattern",
              },
              "range": [
                1,
                8,
              ],
              "right": {
                "elements": [
                  {
                    "end": 7,
                    "range": [
                      6,
                      7,
                    ],
                    "start": 6,
                    "type": "Literal",
                    "value": 1,
                  },
                ],
                "end": 8,
                "range": [
                  5,
                  8,
                ],
                "start": 5,
                "type": "ArrayExpression",
              },
              "start": 1,
              "type": "AssignmentPattern",
            },
          ],
          "end": 9,
          "range": [
            0,
            9,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          14,
        ],
        "right": {
          "elements": [],
          "end": 14,
          "range": [
            12,
            14,
          ],
          "start": 12,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [[foo]] = [] 1`] = `
{
  "body": [
    {
      "end": 12,
      "expression": {
        "end": 12,
        "left": {
          "elements": [
            {
              "elements": [
                {
                  "end": 5,
                  "name": "foo",
                  "range": [
                    2,
                    5,
                  ],
                  "start": 2,
                  "type": "Identifier",
                },
              ],
              "end": 6,
              "range": [
                1,
                6,
              ],
              "start": 1,
              "type": "ArrayPattern",
            },
          ],
          "end": 7,
          "range": [
            0,
            7,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          12,
        ],
        "right": {
          "elements": [],
          "end": 12,
          "range": [
            10,
            12,
          ],
          "start": 10,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [[foo]] 1`] = `
{
  "body": [
    {
      "end": 7,
      "expression": {
        "elements": [
          {
            "elements": [
              {
                "end": 5,
                "name": "foo",
                "range": [
                  2,
                  5,
                ],
                "start": 2,
                "type": "Identifier",
              },
            ],
            "end": 6,
            "range": [
              1,
              6,
            ],
            "start": 1,
            "type": "ArrayExpression",
          },
        ],
        "end": 7,
        "range": [
          0,
          7,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        7,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 7,
  "range": [
    0,
    7,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [{a=0}, ...b] = 0 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "end": 17,
        "left": {
          "elements": [
            {
              "end": 6,
              "properties": [
                {
                  "computed": false,
                  "end": 5,
                  "key": {
                    "end": 3,
                    "name": "a",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    2,
                    5,
                  ],
                  "shorthand": true,
                  "start": 2,
                  "type": "Property",
                  "value": {
                    "end": 5,
                    "left": {
                      "end": 3,
                      "name": "a",
                      "range": [
                        2,
                        3,
                      ],
                      "start": 2,
                      "type": "Identifier",
                    },
                    "range": [
                      2,
                      5,
                    ],
                    "right": {
                      "end": 5,
                      "range": [
                        4,
                        5,
                      ],
                      "start": 4,
                      "type": "Literal",
                      "value": 0,
                    },
                    "start": 2,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                1,
                6,
              ],
              "start": 1,
              "type": "ObjectPattern",
            },
            {
              "argument": {
                "end": 12,
                "name": "b",
                "range": [
                  11,
                  12,
                ],
                "start": 11,
                "type": "Identifier",
              },
              "end": 12,
              "range": [
                8,
                12,
              ],
              "start": 8,
              "type": "RestElement",
            },
          ],
          "end": 13,
          "range": [
            0,
            13,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          17,
        ],
        "right": {
          "end": 17,
          "range": [
            16,
            17,
          ],
          "start": 16,
          "type": "Literal",
          "value": 0,
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [{a=0},{a=0}] = 0 1`] = `
{
  "body": [
    {
      "end": 17,
      "expression": {
        "end": 17,
        "left": {
          "elements": [
            {
              "end": 6,
              "properties": [
                {
                  "computed": false,
                  "end": 5,
                  "key": {
                    "end": 3,
                    "name": "a",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    2,
                    5,
                  ],
                  "shorthand": true,
                  "start": 2,
                  "type": "Property",
                  "value": {
                    "end": 5,
                    "left": {
                      "end": 3,
                      "name": "a",
                      "range": [
                        2,
                        3,
                      ],
                      "start": 2,
                      "type": "Identifier",
                    },
                    "range": [
                      2,
                      5,
                    ],
                    "right": {
                      "end": 5,
                      "range": [
                        4,
                        5,
                      ],
                      "start": 4,
                      "type": "Literal",
                      "value": 0,
                    },
                    "start": 2,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                1,
                6,
              ],
              "start": 1,
              "type": "ObjectPattern",
            },
            {
              "end": 12,
              "properties": [
                {
                  "computed": false,
                  "end": 11,
                  "key": {
                    "end": 9,
                    "name": "a",
                    "range": [
                      8,
                      9,
                    ],
                    "start": 8,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    8,
                    11,
                  ],
                  "shorthand": true,
                  "start": 8,
                  "type": "Property",
                  "value": {
                    "end": 11,
                    "left": {
                      "end": 9,
                      "name": "a",
                      "range": [
                        8,
                        9,
                      ],
                      "start": 8,
                      "type": "Identifier",
                    },
                    "range": [
                      8,
                      11,
                    ],
                    "right": {
                      "end": 11,
                      "range": [
                        10,
                        11,
                      ],
                      "start": 10,
                      "type": "Literal",
                      "value": 0,
                    },
                    "start": 8,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                7,
                12,
              ],
              "start": 7,
              "type": "ObjectPattern",
            },
          ],
          "end": 13,
          "range": [
            0,
            13,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          17,
        ],
        "right": {
          "end": 17,
          "range": [
            16,
            17,
          ],
          "start": 16,
          "type": "Literal",
          "value": 0,
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [{x : [{y:{z = 1}, z1 = 2}] }, {x2 = 3}, {x3 : {y3:[{z3 = 4}]}} ] = [{x:[{y:{}}]}, {}, {x3:{y3:[{}]}}]; 1`] = `
{
  "body": [
    {
      "end": 103,
      "expression": {
        "end": 102,
        "left": {
          "elements": [
            {
              "end": 29,
              "properties": [
                {
                  "computed": false,
                  "end": 27,
                  "key": {
                    "end": 3,
                    "name": "x",
                    "range": [
                      2,
                      3,
                    ],
                    "start": 2,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    2,
                    27,
                  ],
                  "shorthand": false,
                  "start": 2,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 26,
                        "properties": [
                          {
                            "computed": false,
                            "end": 17,
                            "key": {
                              "end": 9,
                              "name": "y",
                              "range": [
                                8,
                                9,
                              ],
                              "start": 8,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              8,
                              17,
                            ],
                            "shorthand": false,
                            "start": 8,
                            "type": "Property",
                            "value": {
                              "end": 17,
                              "properties": [
                                {
                                  "computed": false,
                                  "end": 16,
                                  "key": {
                                    "end": 12,
                                    "name": "z",
                                    "range": [
                                      11,
                                      12,
                                    ],
                                    "start": 11,
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "range": [
                                    11,
                                    16,
                                  ],
                                  "shorthand": true,
                                  "start": 11,
                                  "type": "Property",
                                  "value": {
                                    "end": 16,
                                    "left": {
                                      "end": 12,
                                      "name": "z",
                                      "range": [
                                        11,
                                        12,
                                      ],
                                      "start": 11,
                                      "type": "Identifier",
                                    },
                                    "range": [
                                      11,
                                      16,
                                    ],
                                    "right": {
                                      "end": 16,
                                      "range": [
                                        15,
                                        16,
                                      ],
                                      "raw": "1",
                                      "start": 15,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "start": 11,
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "range": [
                                10,
                                17,
                              ],
                              "start": 10,
                              "type": "ObjectPattern",
                            },
                          },
                          {
                            "computed": false,
                            "end": 25,
                            "key": {
                              "end": 21,
                              "name": "z1",
                              "range": [
                                19,
                                21,
                              ],
                              "start": 19,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              19,
                              25,
                            ],
                            "shorthand": true,
                            "start": 19,
                            "type": "Property",
                            "value": {
                              "end": 25,
                              "left": {
                                "end": 21,
                                "name": "z1",
                                "range": [
                                  19,
                                  21,
                                ],
                                "start": 19,
                                "type": "Identifier",
                              },
                              "range": [
                                19,
                                25,
                              ],
                              "right": {
                                "end": 25,
                                "range": [
                                  24,
                                  25,
                                ],
                                "raw": "2",
                                "start": 24,
                                "type": "Literal",
                                "value": 2,
                              },
                              "start": 19,
                              "type": "AssignmentPattern",
                            },
                          },
                        ],
                        "range": [
                          7,
                          26,
                        ],
                        "start": 7,
                        "type": "ObjectPattern",
                      },
                    ],
                    "end": 27,
                    "range": [
                      6,
                      27,
                    ],
                    "start": 6,
                    "type": "ArrayPattern",
                  },
                },
              ],
              "range": [
                1,
                29,
              ],
              "start": 1,
              "type": "ObjectPattern",
            },
            {
              "end": 39,
              "properties": [
                {
                  "computed": false,
                  "end": 38,
                  "key": {
                    "end": 34,
                    "name": "x2",
                    "range": [
                      32,
                      34,
                    ],
                    "start": 32,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    32,
                    38,
                  ],
                  "shorthand": true,
                  "start": 32,
                  "type": "Property",
                  "value": {
                    "end": 38,
                    "left": {
                      "end": 34,
                      "name": "x2",
                      "range": [
                        32,
                        34,
                      ],
                      "start": 32,
                      "type": "Identifier",
                    },
                    "range": [
                      32,
                      38,
                    ],
                    "right": {
                      "end": 38,
                      "range": [
                        37,
                        38,
                      ],
                      "raw": "3",
                      "start": 37,
                      "type": "Literal",
                      "value": 3,
                    },
                    "start": 32,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                31,
                39,
              ],
              "start": 31,
              "type": "ObjectPattern",
            },
            {
              "end": 63,
              "properties": [
                {
                  "computed": false,
                  "end": 62,
                  "key": {
                    "end": 44,
                    "name": "x3",
                    "range": [
                      42,
                      44,
                    ],
                    "start": 42,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    42,
                    62,
                  ],
                  "shorthand": false,
                  "start": 42,
                  "type": "Property",
                  "value": {
                    "end": 62,
                    "properties": [
                      {
                        "computed": false,
                        "end": 61,
                        "key": {
                          "end": 50,
                          "name": "y3",
                          "range": [
                            48,
                            50,
                          ],
                          "start": 48,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          48,
                          61,
                        ],
                        "shorthand": false,
                        "start": 48,
                        "type": "Property",
                        "value": {
                          "elements": [
                            {
                              "end": 60,
                              "properties": [
                                {
                                  "computed": false,
                                  "end": 59,
                                  "key": {
                                    "end": 55,
                                    "name": "z3",
                                    "range": [
                                      53,
                                      55,
                                    ],
                                    "start": 53,
                                    "type": "Identifier",
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "range": [
                                    53,
                                    59,
                                  ],
                                  "shorthand": true,
                                  "start": 53,
                                  "type": "Property",
                                  "value": {
                                    "end": 59,
                                    "left": {
                                      "end": 55,
                                      "name": "z3",
                                      "range": [
                                        53,
                                        55,
                                      ],
                                      "start": 53,
                                      "type": "Identifier",
                                    },
                                    "range": [
                                      53,
                                      59,
                                    ],
                                    "right": {
                                      "end": 59,
                                      "range": [
                                        58,
                                        59,
                                      ],
                                      "raw": "4",
                                      "start": 58,
                                      "type": "Literal",
                                      "value": 4,
                                    },
                                    "start": 53,
                                    "type": "AssignmentPattern",
                                  },
                                },
                              ],
                              "range": [
                                52,
                                60,
                              ],
                              "start": 52,
                              "type": "ObjectPattern",
                            },
                          ],
                          "end": 61,
                          "range": [
                            51,
                            61,
                          ],
                          "start": 51,
                          "type": "ArrayPattern",
                        },
                      },
                    ],
                    "range": [
                      47,
                      62,
                    ],
                    "start": 47,
                    "type": "ObjectPattern",
                  },
                },
              ],
              "range": [
                41,
                63,
              ],
              "start": 41,
              "type": "ObjectPattern",
            },
          ],
          "end": 65,
          "range": [
            0,
            65,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          102,
        ],
        "right": {
          "elements": [
            {
              "end": 81,
              "properties": [
                {
                  "computed": false,
                  "end": 80,
                  "key": {
                    "end": 71,
                    "name": "x",
                    "range": [
                      70,
                      71,
                    ],
                    "start": 70,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    70,
                    80,
                  ],
                  "shorthand": false,
                  "start": 70,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 79,
                        "properties": [
                          {
                            "computed": false,
                            "end": 78,
                            "key": {
                              "end": 75,
                              "name": "y",
                              "range": [
                                74,
                                75,
                              ],
                              "start": 74,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              74,
                              78,
                            ],
                            "shorthand": false,
                            "start": 74,
                            "type": "Property",
                            "value": {
                              "end": 78,
                              "properties": [],
                              "range": [
                                76,
                                78,
                              ],
                              "start": 76,
                              "type": "ObjectExpression",
                            },
                          },
                        ],
                        "range": [
                          73,
                          79,
                        ],
                        "start": 73,
                        "type": "ObjectExpression",
                      },
                    ],
                    "end": 80,
                    "range": [
                      72,
                      80,
                    ],
                    "start": 72,
                    "type": "ArrayExpression",
                  },
                },
              ],
              "range": [
                69,
                81,
              ],
              "start": 69,
              "type": "ObjectExpression",
            },
            {
              "end": 85,
              "properties": [],
              "range": [
                83,
                85,
              ],
              "start": 83,
              "type": "ObjectExpression",
            },
            {
              "end": 101,
              "properties": [
                {
                  "computed": false,
                  "end": 100,
                  "key": {
                    "end": 90,
                    "name": "x3",
                    "range": [
                      88,
                      90,
                    ],
                    "start": 88,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    88,
                    100,
                  ],
                  "shorthand": false,
                  "start": 88,
                  "type": "Property",
                  "value": {
                    "end": 100,
                    "properties": [
                      {
                        "computed": false,
                        "end": 99,
                        "key": {
                          "end": 94,
                          "name": "y3",
                          "range": [
                            92,
                            94,
                          ],
                          "start": 92,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          92,
                          99,
                        ],
                        "shorthand": false,
                        "start": 92,
                        "type": "Property",
                        "value": {
                          "elements": [
                            {
                              "end": 98,
                              "properties": [],
                              "range": [
                                96,
                                98,
                              ],
                              "start": 96,
                              "type": "ObjectExpression",
                            },
                          ],
                          "end": 99,
                          "range": [
                            95,
                            99,
                          ],
                          "start": 95,
                          "type": "ArrayExpression",
                        },
                      },
                    ],
                    "range": [
                      91,
                      100,
                    ],
                    "start": 91,
                    "type": "ObjectExpression",
                  },
                },
              ],
              "range": [
                87,
                101,
              ],
              "start": 87,
              "type": "ObjectExpression",
            },
          ],
          "end": 102,
          "range": [
            68,
            102,
          ],
          "start": 68,
          "type": "ArrayExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        103,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 103,
  "range": [
    0,
    103,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [a = b, c = d] 1`] = `
{
  "body": [
    {
      "end": 14,
      "expression": {
        "elements": [
          {
            "end": 6,
            "left": {
              "end": 2,
              "name": "a",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              1,
              6,
            ],
            "right": {
              "end": 6,
              "name": "b",
              "range": [
                5,
                6,
              ],
              "start": 5,
              "type": "Identifier",
            },
            "start": 1,
            "type": "AssignmentExpression",
          },
          {
            "end": 13,
            "left": {
              "end": 9,
              "name": "c",
              "range": [
                8,
                9,
              ],
              "start": 8,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              8,
              13,
            ],
            "right": {
              "end": 13,
              "name": "d",
              "range": [
                12,
                13,
              ],
              "start": 12,
              "type": "Identifier",
            },
            "start": 8,
            "type": "AssignmentExpression",
          },
        ],
        "end": 14,
        "range": [
          0,
          14,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [a, b] 1`] = `
{
  "body": [
    {
      "end": 6,
      "expression": {
        "elements": [
          {
            "end": 2,
            "name": "a",
            "range": [
              1,
              2,
            ],
            "start": 1,
            "type": "Identifier",
          },
          {
            "end": 5,
            "name": "b",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
        ],
        "end": 6,
        "range": [
          0,
          6,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        6,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 6,
  "range": [
    0,
    6,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [a,b=0,[c,...a[0]]={}]=0; 1`] = `
{
  "body": [
    {
      "end": 25,
      "expression": {
        "end": 24,
        "left": {
          "elements": [
            {
              "end": 2,
              "name": "a",
              "range": [
                1,
                2,
              ],
              "start": 1,
              "type": "Identifier",
            },
            {
              "end": 6,
              "left": {
                "end": 4,
                "name": "b",
                "range": [
                  3,
                  4,
                ],
                "start": 3,
                "type": "Identifier",
              },
              "range": [
                3,
                6,
              ],
              "right": {
                "end": 6,
                "range": [
                  5,
                  6,
                ],
                "raw": "0",
                "start": 5,
                "type": "Literal",
                "value": 0,
              },
              "start": 3,
              "type": "AssignmentPattern",
            },
            {
              "end": 21,
              "left": {
                "elements": [
                  {
                    "end": 9,
                    "name": "c",
                    "range": [
                      8,
                      9,
                    ],
                    "start": 8,
                    "type": "Identifier",
                  },
                  {
                    "argument": {
                      "computed": true,
                      "end": 17,
                      "object": {
                        "end": 14,
                        "name": "a",
                        "range": [
                          13,
                          14,
                        ],
                        "start": 13,
                        "type": "Identifier",
                      },
                      "optional": false,
                      "property": {
                        "end": 16,
                        "range": [
                          15,
                          16,
                        ],
                        "raw": "0",
                        "start": 15,
                        "type": "Literal",
                        "value": 0,
                      },
                      "range": [
                        13,
                        17,
                      ],
                      "start": 13,
                      "type": "MemberExpression",
                    },
                    "end": 17,
                    "range": [
                      10,
                      17,
                    ],
                    "start": 10,
                    "type": "RestElement",
                  },
                ],
                "end": 18,
                "range": [
                  7,
                  18,
                ],
                "start": 7,
                "type": "ArrayPattern",
              },
              "range": [
                7,
                21,
              ],
              "right": {
                "end": 21,
                "properties": [],
                "range": [
                  19,
                  21,
                ],
                "start": 19,
                "type": "ObjectExpression",
              },
              "start": 7,
              "type": "AssignmentPattern",
            },
          ],
          "end": 22,
          "range": [
            0,
            22,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          24,
        ],
        "right": {
          "end": 24,
          "range": [
            23,
            24,
          ],
          "raw": "0",
          "start": 23,
          "type": "Literal",
          "value": 0,
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        25,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 25,
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [a] 1`] = `
{
  "body": [
    {
      "end": 3,
      "expression": {
        "elements": [
          {
            "end": 2,
            "name": "a",
            "range": [
              1,
              2,
            ],
            "start": 1,
            "type": "Identifier",
          },
        ],
        "end": 3,
        "range": [
          0,
          3,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        3,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 3,
  "range": [
    0,
    3,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [foo]; [foo]; 1`] = `
{
  "body": [
    {
      "end": 6,
      "expression": {
        "elements": [
          {
            "end": 4,
            "name": "foo",
            "range": [
              1,
              4,
            ],
            "start": 1,
            "type": "Identifier",
          },
        ],
        "end": 5,
        "range": [
          0,
          5,
        ],
        "start": 0,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        6,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
    {
      "end": 13,
      "expression": {
        "elements": [
          {
            "end": 11,
            "name": "foo",
            "range": [
              8,
              11,
            ],
            "start": 8,
            "type": "Identifier",
          },
        ],
        "end": 12,
        "range": [
          7,
          12,
        ],
        "start": 7,
        "type": "ArrayExpression",
      },
      "range": [
        7,
        13,
      ],
      "start": 7,
      "type": "ExpressionStatement",
    },
  ],
  "end": 13,
  "range": [
    0,
    13,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > [x.a=a] = 0 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 11,
        "left": {
          "elements": [
            {
              "end": 6,
              "left": {
                "computed": false,
                "end": 4,
                "object": {
                  "end": 2,
                  "name": "x",
                  "range": [
                    1,
                    2,
                  ],
                  "start": 1,
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "end": 4,
                  "name": "a",
                  "range": [
                    3,
                    4,
                  ],
                  "start": 3,
                  "type": "Identifier",
                },
                "range": [
                  1,
                  4,
                ],
                "start": 1,
                "type": "MemberExpression",
              },
              "range": [
                1,
                6,
              ],
              "right": {
                "end": 6,
                "name": "a",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              "start": 1,
              "type": "AssignmentPattern",
            },
          ],
          "end": 7,
          "range": [
            0,
            7,
          ],
          "start": 0,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          0,
          11,
        ],
        "right": {
          "end": 11,
          "range": [
            10,
            11,
          ],
          "start": 10,
          "type": "Literal",
          "value": 0,
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > __str="";
outer : for(index=0; index<4; index+=1) {
    nested : for(index_n=0; index_n<=index; index_n++) {
  if (index*index_n >= 4)break ;
  __str+=""+index+index_n;
    }
} 1`] = `
{
  "body": [
    {
      "end": 9,
      "expression": {
        "end": 8,
        "left": {
          "end": 5,
          "name": "__str",
          "range": [
            0,
            5,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          8,
        ],
        "right": {
          "end": 8,
          "range": [
            6,
            8,
          ],
          "start": 6,
          "type": "Literal",
          "value": "",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        9,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
    {
      "body": {
        "body": {
          "body": [
            {
              "body": {
                "body": {
                  "body": [
                    {
                      "alternate": null,
                      "consequent": {
                        "end": 141,
                        "label": null,
                        "range": [
                          134,
                          141,
                        ],
                        "start": 134,
                        "type": "BreakStatement",
                      },
                      "end": 141,
                      "range": [
                        111,
                        141,
                      ],
                      "start": 111,
                      "test": {
                        "end": 133,
                        "left": {
                          "end": 128,
                          "left": {
                            "end": 120,
                            "name": "index",
                            "range": [
                              115,
                              120,
                            ],
                            "start": 115,
                            "type": "Identifier",
                          },
                          "operator": "*",
                          "range": [
                            115,
                            128,
                          ],
                          "right": {
                            "end": 128,
                            "name": "index_n",
                            "range": [
                              121,
                              128,
                            ],
                            "start": 121,
                            "type": "Identifier",
                          },
                          "start": 115,
                          "type": "BinaryExpression",
                        },
                        "operator": ">=",
                        "range": [
                          115,
                          133,
                        ],
                        "right": {
                          "end": 133,
                          "range": [
                            132,
                            133,
                          ],
                          "start": 132,
                          "type": "Literal",
                          "value": 4,
                        },
                        "start": 115,
                        "type": "BinaryExpression",
                      },
                      "type": "IfStatement",
                    },
                    {
                      "end": 168,
                      "expression": {
                        "end": 167,
                        "left": {
                          "end": 149,
                          "name": "__str",
                          "range": [
                            144,
                            149,
                          ],
                          "start": 144,
                          "type": "Identifier",
                        },
                        "operator": "+=",
                        "range": [
                          144,
                          167,
                        ],
                        "right": {
                          "end": 167,
                          "left": {
                            "end": 159,
                            "left": {
                              "end": 153,
                              "range": [
                                151,
                                153,
                              ],
                              "start": 151,
                              "type": "Literal",
                              "value": "",
                            },
                            "operator": "+",
                            "range": [
                              151,
                              159,
                            ],
                            "right": {
                              "end": 159,
                              "name": "index",
                              "range": [
                                154,
                                159,
                              ],
                              "start": 154,
                              "type": "Identifier",
                            },
                            "start": 151,
                            "type": "BinaryExpression",
                          },
                          "operator": "+",
                          "range": [
                            151,
                            167,
                          ],
                          "right": {
                            "end": 167,
                            "name": "index_n",
                            "range": [
                              160,
                              167,
                            ],
                            "start": 160,
                            "type": "Identifier",
                          },
                          "start": 151,
                          "type": "BinaryExpression",
                        },
                        "start": 144,
                        "type": "AssignmentExpression",
                      },
                      "range": [
                        144,
                        168,
                      ],
                      "start": 144,
                      "type": "ExpressionStatement",
                    },
                  ],
                  "end": 174,
                  "range": [
                    107,
                    174,
                  ],
                  "start": 107,
                  "type": "BlockStatement",
                },
                "end": 174,
                "init": {
                  "end": 78,
                  "left": {
                    "end": 76,
                    "name": "index_n",
                    "range": [
                      69,
                      76,
                    ],
                    "start": 69,
                    "type": "Identifier",
                  },
                  "operator": "=",
                  "range": [
                    69,
                    78,
                  ],
                  "right": {
                    "end": 78,
                    "range": [
                      77,
                      78,
                    ],
                    "start": 77,
                    "type": "Literal",
                    "value": 0,
                  },
                  "start": 69,
                  "type": "AssignmentExpression",
                },
                "range": [
                  65,
                  174,
                ],
                "start": 65,
                "test": {
                  "end": 94,
                  "left": {
                    "end": 87,
                    "name": "index_n",
                    "range": [
                      80,
                      87,
                    ],
                    "start": 80,
                    "type": "Identifier",
                  },
                  "operator": "<=",
                  "range": [
                    80,
                    94,
                  ],
                  "right": {
                    "end": 94,
                    "name": "index",
                    "range": [
                      89,
                      94,
                    ],
                    "start": 89,
                    "type": "Identifier",
                  },
                  "start": 80,
                  "type": "BinaryExpression",
                },
                "type": "ForStatement",
                "update": {
                  "argument": {
                    "end": 103,
                    "name": "index_n",
                    "range": [
                      96,
                      103,
                    ],
                    "start": 96,
                    "type": "Identifier",
                  },
                  "end": 105,
                  "operator": "++",
                  "prefix": false,
                  "range": [
                    96,
                    105,
                  ],
                  "start": 96,
                  "type": "UpdateExpression",
                },
              },
              "end": 174,
              "label": {
                "end": 62,
                "name": "nested",
                "range": [
                  56,
                  62,
                ],
                "start": 56,
                "type": "Identifier",
              },
              "range": [
                56,
                174,
              ],
              "start": 56,
              "type": "LabeledStatement",
            },
          ],
          "end": 176,
          "range": [
            50,
            176,
          ],
          "start": 50,
          "type": "BlockStatement",
        },
        "end": 176,
        "init": {
          "end": 29,
          "left": {
            "end": 27,
            "name": "index",
            "range": [
              22,
              27,
            ],
            "start": 22,
            "type": "Identifier",
          },
          "operator": "=",
          "range": [
            22,
            29,
          ],
          "right": {
            "end": 29,
            "range": [
              28,
              29,
            ],
            "start": 28,
            "type": "Literal",
            "value": 0,
          },
          "start": 22,
          "type": "AssignmentExpression",
        },
        "range": [
          18,
          176,
        ],
        "start": 18,
        "test": {
          "end": 38,
          "left": {
            "end": 36,
            "name": "index",
            "range": [
              31,
              36,
            ],
            "start": 31,
            "type": "Identifier",
          },
          "operator": "<",
          "range": [
            31,
            38,
          ],
          "right": {
            "end": 38,
            "range": [
              37,
              38,
            ],
            "start": 37,
            "type": "Literal",
            "value": 4,
          },
          "start": 31,
          "type": "BinaryExpression",
        },
        "type": "ForStatement",
        "update": {
          "end": 48,
          "left": {
            "end": 45,
            "name": "index",
            "range": [
              40,
              45,
            ],
            "start": 40,
            "type": "Identifier",
          },
          "operator": "+=",
          "range": [
            40,
            48,
          ],
          "right": {
            "end": 48,
            "range": [
              47,
              48,
            ],
            "start": 47,
            "type": "Literal",
            "value": 1,
          },
          "start": 40,
          "type": "AssignmentExpression",
        },
      },
      "end": 176,
      "label": {
        "end": 15,
        "name": "outer",
        "range": [
          10,
          15,
        ],
        "start": 10,
        "type": "Identifier",
      },
      "range": [
        10,
        176,
      ],
      "start": 10,
      "type": "LabeledStatement",
    },
  ],
  "end": 176,
  "range": [
    0,
    176,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > { 1; } 1`] = `
{
  "body": [
    {
      "body": [
        {
          "end": 4,
          "expression": {
            "end": 3,
            "range": [
              2,
              3,
            ],
            "start": 2,
            "type": "Literal",
            "value": 1,
          },
          "range": [
            2,
            4,
          ],
          "start": 2,
          "type": "ExpressionStatement",
        },
      ],
      "end": 6,
      "range": [
        0,
        6,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 6,
  "range": [
    0,
    6,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > { a = 2; } 1`] = `
{
  "body": [
    {
      "body": [
        {
          "end": 8,
          "expression": {
            "end": 7,
            "left": {
              "end": 3,
              "name": "a",
              "range": [
                2,
                3,
              ],
              "start": 2,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              2,
              7,
            ],
            "right": {
              "end": 7,
              "range": [
                6,
                7,
              ],
              "start": 6,
              "type": "Literal",
              "value": 2,
            },
            "start": 2,
            "type": "AssignmentExpression",
          },
          "range": [
            2,
            8,
          ],
          "start": 2,
          "type": "ExpressionStatement",
        },
      ],
      "end": 10,
      "range": [
        0,
        10,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 10,
  "range": [
    0,
    10,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > {{{{}}}} 1`] = `
{
  "body": [
    {
      "body": [
        {
          "body": [
            {
              "body": [
                {
                  "body": [],
                  "end": 5,
                  "range": [
                    3,
                    5,
                  ],
                  "start": 3,
                  "type": "BlockStatement",
                },
              ],
              "end": 6,
              "range": [
                2,
                6,
              ],
              "start": 2,
              "type": "BlockStatement",
            },
          ],
          "end": 7,
          "range": [
            1,
            7,
          ],
          "start": 1,
          "type": "BlockStatement",
        },
      ],
      "end": 8,
      "range": [
        0,
        8,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 8,
  "range": [
    0,
    8,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > {{}} 1`] = `
{
  "body": [
    {
      "body": [
        {
          "body": [],
          "end": 3,
          "range": [
            1,
            3,
          ],
          "start": 1,
          "type": "BlockStatement",
        },
      ],
      "end": 4,
      "range": [
        0,
        4,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 4,
  "range": [
    0,
    4,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > {{a}} 1`] = `
{
  "body": [
    {
      "body": [
        {
          "body": [
            {
              "end": 3,
              "expression": {
                "end": 3,
                "name": "a",
                "range": [
                  2,
                  3,
                ],
                "start": 2,
                "type": "Identifier",
              },
              "range": [
                2,
                3,
              ],
              "start": 2,
              "type": "ExpressionStatement",
            },
          ],
          "end": 4,
          "range": [
            1,
            4,
          ],
          "start": 1,
          "type": "BlockStatement",
        },
      ],
      "end": 5,
      "range": [
        0,
        5,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 5,
  "range": [
    0,
    5,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > {} 1`] = `
{
  "body": [
    {
      "body": [],
      "end": 2,
      "range": [
        0,
        2,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 2,
  "range": [
    0,
    2,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > {a} 1`] = `
{
  "body": [
    {
      "body": [
        {
          "end": 2,
          "expression": {
            "end": 2,
            "name": "a",
            "range": [
              1,
              2,
            ],
            "start": 1,
            "type": "Identifier",
          },
          "range": [
            1,
            2,
          ],
          "start": 1,
          "type": "ExpressionStatement",
        },
      ],
      "end": 3,
      "range": [
        0,
        3,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 3,
  "range": [
    0,
    3,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > {debugger;} 1`] = `
{
  "body": [
    {
      "body": [
        {
          "end": 10,
          "range": [
            1,
            10,
          ],
          "start": 1,
          "type": "DebuggerStatement",
        },
      ],
      "end": 11,
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > {if (false) {} else ;} 1`] = `
{
  "body": [
    {
      "body": [
        {
          "alternate": {
            "end": 21,
            "range": [
              20,
              21,
            ],
            "start": 20,
            "type": "EmptyStatement",
          },
          "consequent": {
            "body": [],
            "end": 14,
            "range": [
              12,
              14,
            ],
            "start": 12,
            "type": "BlockStatement",
          },
          "end": 21,
          "range": [
            1,
            21,
          ],
          "start": 1,
          "test": {
            "end": 10,
            "range": [
              5,
              10,
            ],
            "start": 5,
            "type": "Literal",
            "value": false,
          },
          "type": "IfStatement",
        },
      ],
      "end": 22,
      "range": [
        0,
        22,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 22,
  "range": [
    0,
    22,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > {if (false) a } 1`] = `
{
  "body": [
    {
      "body": [
        {
          "alternate": null,
          "consequent": {
            "end": 13,
            "expression": {
              "end": 13,
              "name": "a",
              "range": [
                12,
                13,
              ],
              "start": 12,
              "type": "Identifier",
            },
            "range": [
              12,
              13,
            ],
            "start": 12,
            "type": "ExpressionStatement",
          },
          "end": 13,
          "range": [
            1,
            13,
          ],
          "start": 1,
          "test": {
            "end": 10,
            "range": [
              5,
              10,
            ],
            "start": 5,
            "type": "Literal",
            "value": false,
          },
          "type": "IfStatement",
        },
      ],
      "end": 15,
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "BlockStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > --a 1`] = `
{
  "body": [
    {
      "end": 3,
      "expression": {
        "argument": {
          "end": 3,
          "name": "a",
          "range": [
            2,
            3,
          ],
          "start": 2,
          "type": "Identifier",
        },
        "end": 3,
        "operator": "--",
        "prefix": true,
        "range": [
          0,
          3,
        ],
        "start": 0,
        "type": "UpdateExpression",
      },
      "range": [
        0,
        3,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 3,
  "range": [
    0,
    3,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > 1; 2; 1`] = `
{
  "body": [
    {
      "end": 2,
      "expression": {
        "end": 1,
        "range": [
          0,
          1,
        ],
        "start": 0,
        "type": "Literal",
        "value": 1,
      },
      "range": [
        0,
        2,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
    {
      "end": 5,
      "expression": {
        "end": 4,
        "range": [
          3,
          4,
        ],
        "start": 3,
        "type": "Literal",
        "value": 2,
      },
      "range": [
        3,
        5,
      ],
      "start": 3,
      "type": "ExpressionStatement",
    },
  ],
  "end": 5,
  "range": [
    0,
    5,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > a = 2 1`] = `
{
  "body": [
    {
      "end": 5,
      "expression": {
        "end": 5,
        "left": {
          "end": 1,
          "name": "a",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          5,
        ],
        "right": {
          "end": 5,
          "range": [
            4,
            5,
          ],
          "start": 4,
          "type": "Literal",
          "value": 2,
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        5,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 5,
  "range": [
    0,
    5,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > a = b, c 1`] = `
{
  "body": [
    {
      "end": 8,
      "expression": {
        "end": 8,
        "expressions": [
          {
            "end": 5,
            "left": {
              "end": 1,
              "name": "a",
              "range": [
                0,
                1,
              ],
              "start": 0,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              0,
              5,
            ],
            "right": {
              "end": 5,
              "name": "b",
              "range": [
                4,
                5,
              ],
              "start": 4,
              "type": "Identifier",
            },
            "start": 0,
            "type": "AssignmentExpression",
          },
          {
            "end": 8,
            "name": "c",
            "range": [
              7,
              8,
            ],
            "start": 7,
            "type": "Identifier",
          },
        ],
        "range": [
          0,
          8,
        ],
        "start": 0,
        "type": "SequenceExpression",
      },
      "range": [
        0,
        8,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 8,
  "range": [
    0,
    8,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > a, b = 2 1`] = `
{
  "body": [
    {
      "end": 8,
      "expression": {
        "end": 8,
        "expressions": [
          {
            "end": 1,
            "name": "a",
            "range": [
              0,
              1,
            ],
            "start": 0,
            "type": "Identifier",
          },
          {
            "end": 8,
            "left": {
              "end": 4,
              "name": "b",
              "range": [
                3,
                4,
              ],
              "start": 3,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              3,
              8,
            ],
            "right": {
              "end": 8,
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Literal",
              "value": 2,
            },
            "start": 3,
            "type": "AssignmentExpression",
          },
        ],
        "range": [
          0,
          8,
        ],
        "start": 0,
        "type": "SequenceExpression",
      },
      "range": [
        0,
        8,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 8,
  "range": [
    0,
    8,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > a, b = c 1`] = `
{
  "body": [
    {
      "end": 8,
      "expression": {
        "end": 8,
        "expressions": [
          {
            "end": 1,
            "name": "a",
            "range": [
              0,
              1,
            ],
            "start": 0,
            "type": "Identifier",
          },
          {
            "end": 8,
            "left": {
              "end": 4,
              "name": "b",
              "range": [
                3,
                4,
              ],
              "start": 3,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              3,
              8,
            ],
            "right": {
              "end": 8,
              "name": "c",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
            "start": 3,
            "type": "AssignmentExpression",
          },
        ],
        "range": [
          0,
          8,
        ],
        "start": 0,
        "type": "SequenceExpression",
      },
      "range": [
        0,
        8,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 8,
  "range": [
    0,
    8,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > a, b = c, d 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 11,
        "expressions": [
          {
            "end": 1,
            "name": "a",
            "range": [
              0,
              1,
            ],
            "start": 0,
            "type": "Identifier",
          },
          {
            "end": 8,
            "left": {
              "end": 4,
              "name": "b",
              "range": [
                3,
                4,
              ],
              "start": 3,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              3,
              8,
            ],
            "right": {
              "end": 8,
              "name": "c",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
            "start": 3,
            "type": "AssignmentExpression",
          },
          {
            "end": 11,
            "name": "d",
            "range": [
              10,
              11,
            ],
            "start": 10,
            "type": "Identifier",
          },
        ],
        "range": [
          0,
          11,
        ],
        "start": 0,
        "type": "SequenceExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > a, b 1`] = `
{
  "body": [
    {
      "end": 4,
      "expression": {
        "end": 4,
        "expressions": [
          {
            "end": 1,
            "name": "a",
            "range": [
              0,
              1,
            ],
            "start": 0,
            "type": "Identifier",
          },
          {
            "end": 4,
            "name": "b",
            "range": [
              3,
              4,
            ],
            "start": 3,
            "type": "Identifier",
          },
        ],
        "range": [
          0,
          4,
        ],
        "start": 0,
        "type": "SequenceExpression",
      },
      "range": [
        0,
        4,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 4,
  "range": [
    0,
    4,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > a, b, c = d 1`] = `
{
  "body": [
    {
      "end": 11,
      "expression": {
        "end": 11,
        "expressions": [
          {
            "end": 1,
            "name": "a",
            "range": [
              0,
              1,
            ],
            "start": 0,
            "type": "Identifier",
          },
          {
            "end": 4,
            "name": "b",
            "range": [
              3,
              4,
            ],
            "start": 3,
            "type": "Identifier",
          },
          {
            "end": 11,
            "left": {
              "end": 7,
              "name": "c",
              "range": [
                6,
                7,
              ],
              "start": 6,
              "type": "Identifier",
            },
            "operator": "=",
            "range": [
              6,
              11,
            ],
            "right": {
              "end": 11,
              "name": "d",
              "range": [
                10,
                11,
              ],
              "start": 10,
              "type": "Identifier",
            },
            "start": 6,
            "type": "AssignmentExpression",
          },
        ],
        "range": [
          0,
          11,
        ],
        "start": 0,
        "type": "SequenceExpression",
      },
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > a-- 1`] = `
{
  "body": [
    {
      "end": 3,
      "expression": {
        "argument": {
          "end": 1,
          "name": "a",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "end": 3,
        "operator": "--",
        "prefix": false,
        "range": [
          0,
          3,
        ],
        "start": 0,
        "type": "UpdateExpression",
      },
      "range": [
        0,
        3,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 3,
  "range": [
    0,
    3,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > bar1 = ( {abcdef  = (((((a1)) = (30))))} = (b1 = 40) ) => { try { throw a1; } catch(a1) { } }; 1`] = `
{
  "body": [
    {
      "end": 94,
      "expression": {
        "end": 93,
        "left": {
          "end": 4,
          "name": "bar1",
          "range": [
            0,
            4,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          93,
        ],
        "right": {
          "async": false,
          "body": {
            "body": [
              {
                "block": {
                  "body": [
                    {
                      "argument": {
                        "end": 74,
                        "name": "a1",
                        "range": [
                          72,
                          74,
                        ],
                        "start": 72,
                        "type": "Identifier",
                      },
                      "end": 75,
                      "range": [
                        66,
                        75,
                      ],
                      "start": 66,
                      "type": "ThrowStatement",
                    },
                  ],
                  "end": 77,
                  "range": [
                    64,
                    77,
                  ],
                  "start": 64,
                  "type": "BlockStatement",
                },
                "end": 91,
                "finalizer": null,
                "handler": {
                  "body": {
                    "body": [],
                    "end": 91,
                    "range": [
                      88,
                      91,
                    ],
                    "start": 88,
                    "type": "BlockStatement",
                  },
                  "end": 91,
                  "param": {
                    "end": 86,
                    "name": "a1",
                    "range": [
                      84,
                      86,
                    ],
                    "start": 84,
                    "type": "Identifier",
                  },
                  "range": [
                    78,
                    91,
                  ],
                  "start": 78,
                  "type": "CatchClause",
                },
                "range": [
                  60,
                  91,
                ],
                "start": 60,
                "type": "TryStatement",
              },
            ],
            "end": 93,
            "range": [
              58,
              93,
            ],
            "start": 58,
            "type": "BlockStatement",
          },
          "end": 93,
          "expression": false,
          "generator": false,
          "params": [
            {
              "end": 52,
              "left": {
                "end": 40,
                "properties": [
                  {
                    "computed": false,
                    "end": 39,
                    "key": {
                      "end": 16,
                      "name": "abcdef",
                      "range": [
                        10,
                        16,
                      ],
                      "start": 10,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      10,
                      39,
                    ],
                    "shorthand": true,
                    "start": 10,
                    "type": "Property",
                    "value": {
                      "end": 39,
                      "left": {
                        "end": 16,
                        "name": "abcdef",
                        "range": [
                          10,
                          16,
                        ],
                        "start": 10,
                        "type": "Identifier",
                      },
                      "range": [
                        10,
                        39,
                      ],
                      "right": {
                        "end": 36,
                        "left": {
                          "end": 27,
                          "name": "a1",
                          "range": [
                            25,
                            27,
                          ],
                          "start": 25,
                          "type": "Identifier",
                        },
                        "operator": "=",
                        "range": [
                          23,
                          36,
                        ],
                        "right": {
                          "end": 35,
                          "range": [
                            33,
                            35,
                          ],
                          "start": 33,
                          "type": "Literal",
                          "value": 30,
                        },
                        "start": 23,
                        "type": "AssignmentExpression",
                      },
                      "start": 10,
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "range": [
                  9,
                  40,
                ],
                "start": 9,
                "type": "ObjectPattern",
              },
              "range": [
                9,
                52,
              ],
              "right": {
                "end": 51,
                "left": {
                  "end": 46,
                  "name": "b1",
                  "range": [
                    44,
                    46,
                  ],
                  "start": 44,
                  "type": "Identifier",
                },
                "operator": "=",
                "range": [
                  44,
                  51,
                ],
                "right": {
                  "end": 51,
                  "range": [
                    49,
                    51,
                  ],
                  "start": 49,
                  "type": "Literal",
                  "value": 40,
                },
                "start": 44,
                "type": "AssignmentExpression",
              },
              "start": 9,
              "type": "AssignmentPattern",
            },
          ],
          "range": [
            7,
            93,
          ],
          "start": 7,
          "type": "ArrowFunctionExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        94,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 94,
  "range": [
    0,
    94,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > bar2 = ( {abcdef  = (((((a2)) = (30))))} = (b2 = 40) ) => { try { throw a2; } catch(a2) { } }; 1`] = `
{
  "body": [
    {
      "end": 94,
      "expression": {
        "end": 93,
        "left": {
          "end": 4,
          "name": "bar2",
          "range": [
            0,
            4,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          93,
        ],
        "right": {
          "async": false,
          "body": {
            "body": [
              {
                "block": {
                  "body": [
                    {
                      "argument": {
                        "end": 74,
                        "name": "a2",
                        "range": [
                          72,
                          74,
                        ],
                        "start": 72,
                        "type": "Identifier",
                      },
                      "end": 75,
                      "range": [
                        66,
                        75,
                      ],
                      "start": 66,
                      "type": "ThrowStatement",
                    },
                  ],
                  "end": 77,
                  "range": [
                    64,
                    77,
                  ],
                  "start": 64,
                  "type": "BlockStatement",
                },
                "end": 91,
                "finalizer": null,
                "handler": {
                  "body": {
                    "body": [],
                    "end": 91,
                    "range": [
                      88,
                      91,
                    ],
                    "start": 88,
                    "type": "BlockStatement",
                  },
                  "end": 91,
                  "param": {
                    "end": 86,
                    "name": "a2",
                    "range": [
                      84,
                      86,
                    ],
                    "start": 84,
                    "type": "Identifier",
                  },
                  "range": [
                    78,
                    91,
                  ],
                  "start": 78,
                  "type": "CatchClause",
                },
                "range": [
                  60,
                  91,
                ],
                "start": 60,
                "type": "TryStatement",
              },
            ],
            "end": 93,
            "range": [
              58,
              93,
            ],
            "start": 58,
            "type": "BlockStatement",
          },
          "end": 93,
          "expression": false,
          "generator": false,
          "params": [
            {
              "end": 52,
              "left": {
                "end": 40,
                "properties": [
                  {
                    "computed": false,
                    "end": 39,
                    "key": {
                      "end": 16,
                      "name": "abcdef",
                      "range": [
                        10,
                        16,
                      ],
                      "start": 10,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      10,
                      39,
                    ],
                    "shorthand": true,
                    "start": 10,
                    "type": "Property",
                    "value": {
                      "end": 39,
                      "left": {
                        "end": 16,
                        "name": "abcdef",
                        "range": [
                          10,
                          16,
                        ],
                        "start": 10,
                        "type": "Identifier",
                      },
                      "range": [
                        10,
                        39,
                      ],
                      "right": {
                        "end": 36,
                        "left": {
                          "end": 27,
                          "name": "a2",
                          "range": [
                            25,
                            27,
                          ],
                          "start": 25,
                          "type": "Identifier",
                        },
                        "operator": "=",
                        "range": [
                          23,
                          36,
                        ],
                        "right": {
                          "end": 35,
                          "range": [
                            33,
                            35,
                          ],
                          "start": 33,
                          "type": "Literal",
                          "value": 30,
                        },
                        "start": 23,
                        "type": "AssignmentExpression",
                      },
                      "start": 10,
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "range": [
                  9,
                  40,
                ],
                "start": 9,
                "type": "ObjectPattern",
              },
              "range": [
                9,
                52,
              ],
              "right": {
                "end": 51,
                "left": {
                  "end": 46,
                  "name": "b2",
                  "range": [
                    44,
                    46,
                  ],
                  "start": 44,
                  "type": "Identifier",
                },
                "operator": "=",
                "range": [
                  44,
                  51,
                ],
                "right": {
                  "end": 51,
                  "range": [
                    49,
                    51,
                  ],
                  "start": 49,
                  "type": "Literal",
                  "value": 40,
                },
                "start": 44,
                "type": "AssignmentExpression",
              },
              "start": 9,
              "type": "AssignmentPattern",
            },
          ],
          "range": [
            7,
            93,
          ],
          "start": 7,
          "type": "ArrowFunctionExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        94,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 94,
  "range": [
    0,
    94,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > f = ([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }]) => {} 1`] = `
{
  "body": [
    {
      "end": 83,
      "expression": {
        "end": 83,
        "left": {
          "end": 1,
          "name": "f",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          83,
        ],
        "right": {
          "async": false,
          "body": {
            "body": [],
            "end": 83,
            "range": [
              81,
              83,
            ],
            "start": 81,
            "type": "BlockStatement",
          },
          "end": 83,
          "expression": false,
          "generator": false,
          "params": [
            {
              "elements": [
                {
                  "end": 20,
                  "left": {
                    "end": 9,
                    "name": "cls",
                    "range": [
                      6,
                      9,
                    ],
                    "start": 6,
                    "type": "Identifier",
                  },
                  "range": [
                    6,
                    20,
                  ],
                  "right": {
                    "body": {
                      "body": [],
                      "end": 20,
                      "range": [
                        18,
                        20,
                      ],
                      "start": 18,
                      "type": "ClassBody",
                    },
                    "end": 20,
                    "id": null,
                    "range": [
                      12,
                      20,
                    ],
                    "start": 12,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "start": 6,
                  "type": "AssignmentPattern",
                },
                {
                  "end": 39,
                  "left": {
                    "end": 26,
                    "name": "xCls",
                    "range": [
                      22,
                      26,
                    ],
                    "start": 22,
                    "type": "Identifier",
                  },
                  "range": [
                    22,
                    39,
                  ],
                  "right": {
                    "body": {
                      "body": [],
                      "end": 39,
                      "range": [
                        37,
                        39,
                      ],
                      "start": 37,
                      "type": "ClassBody",
                    },
                    "end": 39,
                    "id": {
                      "end": 36,
                      "name": "X",
                      "range": [
                        35,
                        36,
                      ],
                      "start": 35,
                      "type": "Identifier",
                    },
                    "range": [
                      29,
                      39,
                    ],
                    "start": 29,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "start": 22,
                  "type": "AssignmentPattern",
                },
                {
                  "end": 75,
                  "left": {
                    "end": 46,
                    "name": "xCls2",
                    "range": [
                      41,
                      46,
                    ],
                    "start": 41,
                    "type": "Identifier",
                  },
                  "range": [
                    41,
                    75,
                  ],
                  "right": {
                    "body": {
                      "body": [
                        {
                          "computed": false,
                          "end": 73,
                          "key": {
                            "end": 68,
                            "name": "name",
                            "range": [
                              64,
                              68,
                            ],
                            "start": 64,
                            "type": "Identifier",
                          },
                          "kind": "method",
                          "range": [
                            57,
                            73,
                          ],
                          "start": 57,
                          "static": true,
                          "type": "MethodDefinition",
                          "value": {
                            "async": false,
                            "body": {
                              "body": [],
                              "end": 73,
                              "range": [
                                71,
                                73,
                              ],
                              "start": 71,
                              "type": "BlockStatement",
                            },
                            "end": 73,
                            "generator": false,
                            "id": null,
                            "params": [],
                            "range": [
                              68,
                              73,
                            ],
                            "start": 68,
                            "type": "FunctionExpression",
                          },
                        },
                      ],
                      "end": 75,
                      "range": [
                        55,
                        75,
                      ],
                      "start": 55,
                      "type": "ClassBody",
                    },
                    "end": 75,
                    "id": null,
                    "range": [
                      49,
                      75,
                    ],
                    "start": 49,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "start": 41,
                  "type": "AssignmentPattern",
                },
              ],
              "end": 76,
              "range": [
                5,
                76,
              ],
              "start": 5,
              "type": "ArrayPattern",
            },
          ],
          "range": [
            4,
            83,
          ],
          "start": 4,
          "type": "ArrowFunctionExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        83,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 83,
  "range": [
    0,
    83,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > f = ([cls = class {}]) => {} 1`] = `
{
  "body": [
    {
      "end": 28,
      "expression": {
        "end": 28,
        "left": {
          "end": 1,
          "name": "f",
          "range": [
            0,
            1,
          ],
          "start": 0,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          0,
          28,
        ],
        "right": {
          "async": false,
          "body": {
            "body": [],
            "end": 28,
            "range": [
              26,
              28,
            ],
            "start": 26,
            "type": "BlockStatement",
          },
          "end": 28,
          "expression": false,
          "generator": false,
          "params": [
            {
              "elements": [
                {
                  "end": 20,
                  "left": {
                    "end": 9,
                    "name": "cls",
                    "range": [
                      6,
                      9,
                    ],
                    "start": 6,
                    "type": "Identifier",
                  },
                  "range": [
                    6,
                    20,
                  ],
                  "right": {
                    "body": {
                      "body": [],
                      "end": 20,
                      "range": [
                        18,
                        20,
                      ],
                      "start": 18,
                      "type": "ClassBody",
                    },
                    "end": 20,
                    "id": null,
                    "range": [
                      12,
                      20,
                    ],
                    "start": 12,
                    "superClass": null,
                    "type": "ClassExpression",
                  },
                  "start": 6,
                  "type": "AssignmentPattern",
                },
              ],
              "end": 21,
              "range": [
                5,
                21,
              ],
              "start": 5,
              "type": "ArrayPattern",
            },
          ],
          "range": [
            4,
            28,
          ],
          "start": 4,
          "type": "ArrowFunctionExpression",
        },
        "start": 0,
        "type": "AssignmentExpression",
      },
      "range": [
        0,
        28,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 28,
  "range": [
    0,
    28,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > foo; "bar"; 9; 1`] = `
{
  "body": [
    {
      "end": 4,
      "expression": {
        "end": 3,
        "name": "foo",
        "range": [
          0,
          3,
        ],
        "start": 0,
        "type": "Identifier",
      },
      "range": [
        0,
        4,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
    {
      "end": 11,
      "expression": {
        "end": 10,
        "range": [
          5,
          10,
        ],
        "start": 5,
        "type": "Literal",
        "value": "bar",
      },
      "range": [
        5,
        11,
      ],
      "start": 5,
      "type": "ExpressionStatement",
    },
    {
      "end": 14,
      "expression": {
        "end": 13,
        "range": [
          12,
          13,
        ],
        "start": 12,
        "type": "Literal",
        "value": 9,
      },
      "range": [
        12,
        14,
      ],
      "start": 12,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > foo; bar; 1`] = `
{
  "body": [
    {
      "end": 4,
      "expression": {
        "end": 3,
        "name": "foo",
        "range": [
          0,
          3,
        ],
        "start": 0,
        "type": "Identifier",
      },
      "range": [
        0,
        4,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
    {
      "end": 9,
      "expression": {
        "end": 8,
        "name": "bar",
        "range": [
          5,
          8,
        ],
        "start": 5,
        "type": "Identifier",
      },
      "range": [
        5,
        9,
      ],
      "start": 5,
      "type": "ExpressionStatement",
    },
  ],
  "end": 9,
  "range": [
    0,
    9,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > foo; bar; goo; 1`] = `
{
  "body": [
    {
      "end": 4,
      "expression": {
        "end": 3,
        "name": "foo",
        "range": [
          0,
          3,
        ],
        "start": 0,
        "type": "Identifier",
      },
      "range": [
        0,
        4,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
    {
      "end": 9,
      "expression": {
        "end": 8,
        "name": "bar",
        "range": [
          5,
          8,
        ],
        "start": 5,
        "type": "Identifier",
      },
      "range": [
        5,
        9,
      ],
      "start": 5,
      "type": "ExpressionStatement",
    },
    {
      "end": 14,
      "expression": {
        "end": 13,
        "name": "goo",
        "range": [
          10,
          13,
        ],
        "start": 10,
        "type": "Identifier",
      },
      "range": [
        10,
        14,
      ],
      "start": 10,
      "type": "ExpressionStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (
[x][0] in y); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 19,
        "loc": {
          "end": {
            "column": 13,
            "line": 2,
          },
          "start": {
            "column": 12,
            "line": 2,
          },
        },
        "range": [
          18,
          19,
        ],
        "start": 18,
        "type": "EmptyStatement",
      },
      "end": 19,
      "left": {
        "computed": true,
        "end": 12,
        "loc": {
          "end": {
            "column": 6,
            "line": 2,
          },
          "start": {
            "column": 0,
            "line": 2,
          },
        },
        "object": {
          "elements": [
            {
              "end": 8,
              "loc": {
                "end": {
                  "column": 2,
                  "line": 2,
                },
                "start": {
                  "column": 1,
                  "line": 2,
                },
              },
              "name": "x",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
          ],
          "end": 9,
          "loc": {
            "end": {
              "column": 3,
              "line": 2,
            },
            "start": {
              "column": 0,
              "line": 2,
            },
          },
          "range": [
            6,
            9,
          ],
          "start": 6,
          "type": "ArrayExpression",
        },
        "optional": false,
        "property": {
          "end": 11,
          "loc": {
            "end": {
              "column": 5,
              "line": 2,
            },
            "start": {
              "column": 4,
              "line": 2,
            },
          },
          "range": [
            10,
            11,
          ],
          "start": 10,
          "type": "Literal",
          "value": 0,
        },
        "range": [
          6,
          12,
        ],
        "start": 6,
        "type": "MemberExpression",
      },
      "loc": {
        "end": {
          "column": 13,
          "line": 2,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        19,
      ],
      "right": {
        "end": 17,
        "loc": {
          "end": {
            "column": 11,
            "line": 2,
          },
          "start": {
            "column": 10,
            "line": 2,
          },
        },
        "name": "y",
        "range": [
          16,
          17,
        ],
        "start": 16,
        "type": "Identifier",
      },
      "start": 0,
      "type": "ForInStatement",
    },
  ],
  "end": 19,
  "loc": {
    "end": {
      "column": 13,
      "line": 2,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (
[x][0] of y); 1`] = `
{
  "body": [
    {
      "await": false,
      "body": {
        "end": 19,
        "loc": {
          "end": {
            "column": 13,
            "line": 2,
          },
          "start": {
            "column": 12,
            "line": 2,
          },
        },
        "range": [
          18,
          19,
        ],
        "start": 18,
        "type": "EmptyStatement",
      },
      "end": 19,
      "left": {
        "computed": true,
        "end": 12,
        "loc": {
          "end": {
            "column": 6,
            "line": 2,
          },
          "start": {
            "column": 0,
            "line": 2,
          },
        },
        "object": {
          "elements": [
            {
              "end": 8,
              "loc": {
                "end": {
                  "column": 2,
                  "line": 2,
                },
                "start": {
                  "column": 1,
                  "line": 2,
                },
              },
              "name": "x",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
          ],
          "end": 9,
          "loc": {
            "end": {
              "column": 3,
              "line": 2,
            },
            "start": {
              "column": 0,
              "line": 2,
            },
          },
          "range": [
            6,
            9,
          ],
          "start": 6,
          "type": "ArrayExpression",
        },
        "optional": false,
        "property": {
          "end": 11,
          "loc": {
            "end": {
              "column": 5,
              "line": 2,
            },
            "start": {
              "column": 4,
              "line": 2,
            },
          },
          "range": [
            10,
            11,
          ],
          "start": 10,
          "type": "Literal",
          "value": 0,
        },
        "range": [
          6,
          12,
        ],
        "start": 6,
        "type": "MemberExpression",
      },
      "loc": {
        "end": {
          "column": 13,
          "line": 2,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        19,
      ],
      "right": {
        "end": 17,
        "loc": {
          "end": {
            "column": 11,
            "line": 2,
          },
          "start": {
            "column": 10,
            "line": 2,
          },
        },
        "name": "y",
        "range": [
          16,
          17,
        ],
        "start": 16,
        "type": "Identifier",
      },
      "start": 0,
      "type": "ForOfStatement",
    },
  ],
  "end": 19,
  "loc": {
    "end": {
      "column": 13,
      "line": 2,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (
[x][0];;); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 16,
        "loc": {
          "end": {
            "column": 10,
            "line": 2,
          },
          "start": {
            "column": 9,
            "line": 2,
          },
        },
        "range": [
          15,
          16,
        ],
        "start": 15,
        "type": "EmptyStatement",
      },
      "end": 16,
      "init": {
        "computed": true,
        "end": 12,
        "loc": {
          "end": {
            "column": 6,
            "line": 2,
          },
          "start": {
            "column": 0,
            "line": 2,
          },
        },
        "object": {
          "elements": [
            {
              "end": 8,
              "loc": {
                "end": {
                  "column": 2,
                  "line": 2,
                },
                "start": {
                  "column": 1,
                  "line": 2,
                },
              },
              "name": "x",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
          ],
          "end": 9,
          "loc": {
            "end": {
              "column": 3,
              "line": 2,
            },
            "start": {
              "column": 0,
              "line": 2,
            },
          },
          "range": [
            6,
            9,
          ],
          "start": 6,
          "type": "ArrayExpression",
        },
        "optional": false,
        "property": {
          "end": 11,
          "loc": {
            "end": {
              "column": 5,
              "line": 2,
            },
            "start": {
              "column": 4,
              "line": 2,
            },
          },
          "range": [
            10,
            11,
          ],
          "start": 10,
          "type": "Literal",
          "value": 0,
        },
        "range": [
          6,
          12,
        ],
        "start": 6,
        "type": "MemberExpression",
      },
      "loc": {
        "end": {
          "column": 10,
          "line": 2,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "test": null,
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 16,
  "loc": {
    "end": {
      "column": 10,
      "line": 2,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for ( let[x] of [[34]] ) {} 1`] = `
{
  "body": [
    {
      "await": false,
      "body": {
        "body": [],
        "end": 27,
        "range": [
          25,
          27,
        ],
        "start": 25,
        "type": "BlockStatement",
      },
      "end": 27,
      "left": {
        "declarations": [
          {
            "end": 12,
            "id": {
              "elements": [
                {
                  "end": 11,
                  "name": "x",
                  "range": [
                    10,
                    11,
                  ],
                  "start": 10,
                  "type": "Identifier",
                },
              ],
              "end": 12,
              "range": [
                9,
                12,
              ],
              "start": 9,
              "type": "ArrayPattern",
            },
            "init": null,
            "range": [
              9,
              12,
            ],
            "start": 9,
            "type": "VariableDeclarator",
          },
        ],
        "end": 12,
        "kind": "let",
        "range": [
          6,
          12,
        ],
        "start": 6,
        "type": "VariableDeclaration",
      },
      "range": [
        0,
        27,
      ],
      "right": {
        "elements": [
          {
            "elements": [
              {
                "end": 20,
                "range": [
                  18,
                  20,
                ],
                "start": 18,
                "type": "Literal",
                "value": 34,
              },
            ],
            "end": 21,
            "range": [
              17,
              21,
            ],
            "start": 17,
            "type": "ArrayExpression",
          },
        ],
        "end": 22,
        "range": [
          16,
          22,
        ],
        "start": 16,
        "type": "ArrayExpression",
      },
      "start": 0,
      "type": "ForOfStatement",
    },
  ],
  "end": 27,
  "range": [
    0,
    27,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (((x)=>{}).x of y); 1`] = `
{
  "body": [
    {
      "await": false,
      "body": {
        "end": 23,
        "range": [
          22,
          23,
        ],
        "start": 22,
        "type": "EmptyStatement",
      },
      "end": 23,
      "left": {
        "computed": false,
        "end": 16,
        "object": {
          "async": false,
          "body": {
            "body": [],
            "end": 13,
            "range": [
              11,
              13,
            ],
            "start": 11,
            "type": "BlockStatement",
          },
          "end": 13,
          "expression": false,
          "generator": false,
          "params": [
            {
              "end": 8,
              "name": "x",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
          ],
          "range": [
            6,
            13,
          ],
          "start": 6,
          "type": "ArrowFunctionExpression",
        },
        "optional": false,
        "property": {
          "end": 16,
          "name": "x",
          "range": [
            15,
            16,
          ],
          "start": 15,
          "type": "Identifier",
        },
        "range": [
          5,
          16,
        ],
        "start": 5,
        "type": "MemberExpression",
      },
      "range": [
        0,
        23,
      ],
      "right": {
        "end": 21,
        "name": "y",
        "range": [
          20,
          21,
        ],
        "start": 20,
        "type": "Identifier",
      },
      "start": 0,
      "type": "ForOfStatement",
    },
  ],
  "end": 23,
  "range": [
    0,
    23,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for ((x)=>{};;); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 16,
        "range": [
          15,
          16,
        ],
        "start": 15,
        "type": "EmptyStatement",
      },
      "end": 16,
      "init": {
        "async": false,
        "body": {
          "body": [],
          "end": 12,
          "range": [
            10,
            12,
          ],
          "start": 10,
          "type": "BlockStatement",
        },
        "end": 12,
        "expression": false,
        "generator": false,
        "params": [
          {
            "end": 7,
            "name": "x",
            "range": [
              6,
              7,
            ],
            "start": 6,
            "type": "Identifier",
          },
        ],
        "range": [
          5,
          12,
        ],
        "start": 5,
        "type": "ArrowFunctionExpression",
      },
      "range": [
        0,
        16,
      ],
      "start": 0,
      "test": null,
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (/x/g + b;;); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 17,
        "range": [
          16,
          17,
        ],
        "start": 16,
        "type": "EmptyStatement",
      },
      "end": 17,
      "init": {
        "end": 13,
        "left": {
          "end": 9,
          "range": [
            5,
            9,
          ],
          "regex": {
            "flags": "g",
            "pattern": "x",
          },
          "start": 5,
          "type": "Literal",
          "value": /x/g,
        },
        "operator": "+",
        "range": [
          5,
          13,
        ],
        "right": {
          "end": 13,
          "name": "b",
          "range": [
            12,
            13,
          ],
          "start": 12,
          "type": "Identifier",
        },
        "start": 5,
        "type": "BinaryExpression",
      },
      "range": [
        0,
        17,
      ],
      "start": 0,
      "test": null,
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 17,
  "range": [
    0,
    17,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for ([x.y];;); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 14,
        "range": [
          13,
          14,
        ],
        "start": 13,
        "type": "EmptyStatement",
      },
      "end": 14,
      "init": {
        "elements": [
          {
            "computed": false,
            "end": 9,
            "object": {
              "end": 7,
              "name": "x",
              "range": [
                6,
                7,
              ],
              "start": 6,
              "type": "Identifier",
            },
            "optional": false,
            "property": {
              "end": 9,
              "name": "y",
              "range": [
                8,
                9,
              ],
              "start": 8,
              "type": "Identifier",
            },
            "range": [
              6,
              9,
            ],
            "start": 6,
            "type": "MemberExpression",
          },
        ],
        "end": 10,
        "range": [
          5,
          10,
        ],
        "start": 5,
        "type": "ArrayExpression",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "test": null,
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (a;;); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 10,
        "range": [
          9,
          10,
        ],
        "start": 9,
        "type": "EmptyStatement",
      },
      "end": 10,
      "init": {
        "end": 6,
        "name": "a",
        "range": [
          5,
          6,
        ],
        "start": 5,
        "type": "Identifier",
      },
      "range": [
        0,
        10,
      ],
      "start": 0,
      "test": null,
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 10,
  "range": [
    0,
    10,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (let [...foo] = obj;;); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 27,
        "range": [
          26,
          27,
        ],
        "start": 26,
        "type": "EmptyStatement",
      },
      "end": 27,
      "init": {
        "declarations": [
          {
            "end": 23,
            "id": {
              "elements": [
                {
                  "argument": {
                    "end": 16,
                    "name": "foo",
                    "range": [
                      13,
                      16,
                    ],
                    "start": 13,
                    "type": "Identifier",
                  },
                  "end": 16,
                  "range": [
                    10,
                    16,
                  ],
                  "start": 10,
                  "type": "RestElement",
                },
              ],
              "end": 17,
              "range": [
                9,
                17,
              ],
              "start": 9,
              "type": "ArrayPattern",
            },
            "init": {
              "end": 23,
              "name": "obj",
              "range": [
                20,
                23,
              ],
              "start": 20,
              "type": "Identifier",
            },
            "range": [
              9,
              23,
            ],
            "start": 9,
            "type": "VariableDeclarator",
          },
        ],
        "end": 23,
        "kind": "let",
        "range": [
          5,
          23,
        ],
        "start": 5,
        "type": "VariableDeclaration",
      },
      "range": [
        0,
        27,
      ],
      "start": 0,
      "test": null,
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 27,
  "range": [
    0,
    27,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (let [{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = [{ u: 777, w: 888, y: 999 }]; a < 1; ) {} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "end": 104,
        "range": [
          102,
          104,
        ],
        "start": 102,
        "type": "BlockStatement",
      },
      "end": 104,
      "init": {
        "declarations": [
          {
            "end": 91,
            "id": {
              "elements": [
                {
                  "end": 59,
                  "left": {
                    "end": 30,
                    "properties": [
                      {
                        "computed": false,
                        "end": 16,
                        "key": {
                          "end": 13,
                          "name": "u",
                          "range": [
                            12,
                            13,
                          ],
                          "start": 12,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          12,
                          16,
                        ],
                        "shorthand": false,
                        "start": 12,
                        "type": "Property",
                        "value": {
                          "end": 16,
                          "name": "v",
                          "range": [
                            15,
                            16,
                          ],
                          "start": 15,
                          "type": "Identifier",
                        },
                      },
                      {
                        "computed": false,
                        "end": 22,
                        "key": {
                          "end": 19,
                          "name": "w",
                          "range": [
                            18,
                            19,
                          ],
                          "start": 18,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          18,
                          22,
                        ],
                        "shorthand": false,
                        "start": 18,
                        "type": "Property",
                        "value": {
                          "end": 22,
                          "name": "x",
                          "range": [
                            21,
                            22,
                          ],
                          "start": 21,
                          "type": "Identifier",
                        },
                      },
                      {
                        "computed": false,
                        "end": 28,
                        "key": {
                          "end": 25,
                          "name": "y",
                          "range": [
                            24,
                            25,
                          ],
                          "start": 24,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          24,
                          28,
                        ],
                        "shorthand": false,
                        "start": 24,
                        "type": "Property",
                        "value": {
                          "end": 28,
                          "name": "z",
                          "range": [
                            27,
                            28,
                          ],
                          "start": 27,
                          "type": "Identifier",
                        },
                      },
                    ],
                    "range": [
                      10,
                      30,
                    ],
                    "start": 10,
                    "type": "ObjectPattern",
                  },
                  "range": [
                    10,
                    59,
                  ],
                  "right": {
                    "end": 59,
                    "properties": [
                      {
                        "computed": false,
                        "end": 41,
                        "key": {
                          "end": 36,
                          "name": "u",
                          "range": [
                            35,
                            36,
                          ],
                          "start": 35,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          35,
                          41,
                        ],
                        "shorthand": false,
                        "start": 35,
                        "type": "Property",
                        "value": {
                          "end": 41,
                          "range": [
                            38,
                            41,
                          ],
                          "start": 38,
                          "type": "Literal",
                          "value": 444,
                        },
                      },
                      {
                        "computed": false,
                        "end": 49,
                        "key": {
                          "end": 44,
                          "name": "w",
                          "range": [
                            43,
                            44,
                          ],
                          "start": 43,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          43,
                          49,
                        ],
                        "shorthand": false,
                        "start": 43,
                        "type": "Property",
                        "value": {
                          "end": 49,
                          "range": [
                            46,
                            49,
                          ],
                          "start": 46,
                          "type": "Literal",
                          "value": 555,
                        },
                      },
                      {
                        "computed": false,
                        "end": 57,
                        "key": {
                          "end": 52,
                          "name": "y",
                          "range": [
                            51,
                            52,
                          ],
                          "start": 51,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          51,
                          57,
                        ],
                        "shorthand": false,
                        "start": 51,
                        "type": "Property",
                        "value": {
                          "end": 57,
                          "range": [
                            54,
                            57,
                          ],
                          "start": 54,
                          "type": "Literal",
                          "value": 666,
                        },
                      },
                    ],
                    "range": [
                      33,
                      59,
                    ],
                    "start": 33,
                    "type": "ObjectExpression",
                  },
                  "start": 10,
                  "type": "AssignmentPattern",
                },
              ],
              "end": 60,
              "range": [
                9,
                60,
              ],
              "start": 9,
              "type": "ArrayPattern",
            },
            "init": {
              "elements": [
                {
                  "end": 90,
                  "properties": [
                    {
                      "computed": false,
                      "end": 72,
                      "key": {
                        "end": 67,
                        "name": "u",
                        "range": [
                          66,
                          67,
                        ],
                        "start": 66,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        66,
                        72,
                      ],
                      "shorthand": false,
                      "start": 66,
                      "type": "Property",
                      "value": {
                        "end": 72,
                        "range": [
                          69,
                          72,
                        ],
                        "start": 69,
                        "type": "Literal",
                        "value": 777,
                      },
                    },
                    {
                      "computed": false,
                      "end": 80,
                      "key": {
                        "end": 75,
                        "name": "w",
                        "range": [
                          74,
                          75,
                        ],
                        "start": 74,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        74,
                        80,
                      ],
                      "shorthand": false,
                      "start": 74,
                      "type": "Property",
                      "value": {
                        "end": 80,
                        "range": [
                          77,
                          80,
                        ],
                        "start": 77,
                        "type": "Literal",
                        "value": 888,
                      },
                    },
                    {
                      "computed": false,
                      "end": 88,
                      "key": {
                        "end": 83,
                        "name": "y",
                        "range": [
                          82,
                          83,
                        ],
                        "start": 82,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        82,
                        88,
                      ],
                      "shorthand": false,
                      "start": 82,
                      "type": "Property",
                      "value": {
                        "end": 88,
                        "range": [
                          85,
                          88,
                        ],
                        "start": 85,
                        "type": "Literal",
                        "value": 999,
                      },
                    },
                  ],
                  "range": [
                    64,
                    90,
                  ],
                  "start": 64,
                  "type": "ObjectExpression",
                },
              ],
              "end": 91,
              "range": [
                63,
                91,
              ],
              "start": 63,
              "type": "ArrayExpression",
            },
            "range": [
              9,
              91,
            ],
            "start": 9,
            "type": "VariableDeclarator",
          },
        ],
        "end": 91,
        "kind": "let",
        "range": [
          5,
          91,
        ],
        "start": 5,
        "type": "VariableDeclaration",
      },
      "range": [
        0,
        104,
      ],
      "start": 0,
      "test": {
        "end": 98,
        "left": {
          "end": 94,
          "name": "a",
          "range": [
            93,
            94,
          ],
          "start": 93,
          "type": "Identifier",
        },
        "operator": "<",
        "range": [
          93,
          98,
        ],
        "right": {
          "end": 98,
          "range": [
            97,
            98,
          ],
          "start": 97,
          "type": "Literal",
          "value": 1,
        },
        "start": 93,
        "type": "BinaryExpression",
      },
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 104,
  "range": [
    0,
    104,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (let [foo=a] = arr;;); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 26,
        "range": [
          25,
          26,
        ],
        "start": 25,
        "type": "EmptyStatement",
      },
      "end": 26,
      "init": {
        "declarations": [
          {
            "end": 22,
            "id": {
              "elements": [
                {
                  "end": 15,
                  "left": {
                    "end": 13,
                    "name": "foo",
                    "range": [
                      10,
                      13,
                    ],
                    "start": 10,
                    "type": "Identifier",
                  },
                  "range": [
                    10,
                    15,
                  ],
                  "right": {
                    "end": 15,
                    "name": "a",
                    "range": [
                      14,
                      15,
                    ],
                    "start": 14,
                    "type": "Identifier",
                  },
                  "start": 10,
                  "type": "AssignmentPattern",
                },
              ],
              "end": 16,
              "range": [
                9,
                16,
              ],
              "start": 9,
              "type": "ArrayPattern",
            },
            "init": {
              "end": 22,
              "name": "arr",
              "range": [
                19,
                22,
              ],
              "start": 19,
              "type": "Identifier",
            },
            "range": [
              9,
              22,
            ],
            "start": 9,
            "type": "VariableDeclarator",
          },
        ],
        "end": 22,
        "kind": "let",
        "range": [
          5,
          22,
        ],
        "start": 5,
        "type": "VariableDeclaration",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "test": null,
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (let x in { a: a[i++] = () => eval("x") }) { b[j++] = () => eval("x"); } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "end": 74,
            "expression": {
              "end": 73,
              "left": {
                "computed": true,
                "end": 55,
                "object": {
                  "end": 50,
                  "name": "b",
                  "range": [
                    49,
                    50,
                  ],
                  "start": 49,
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "argument": {
                    "end": 52,
                    "name": "j",
                    "range": [
                      51,
                      52,
                    ],
                    "start": 51,
                    "type": "Identifier",
                  },
                  "end": 54,
                  "operator": "++",
                  "prefix": false,
                  "range": [
                    51,
                    54,
                  ],
                  "start": 51,
                  "type": "UpdateExpression",
                },
                "range": [
                  49,
                  55,
                ],
                "start": 49,
                "type": "MemberExpression",
              },
              "operator": "=",
              "range": [
                49,
                73,
              ],
              "right": {
                "async": false,
                "body": {
                  "arguments": [
                    {
                      "end": 72,
                      "range": [
                        69,
                        72,
                      ],
                      "start": 69,
                      "type": "Literal",
                      "value": "x",
                    },
                  ],
                  "callee": {
                    "end": 68,
                    "name": "eval",
                    "range": [
                      64,
                      68,
                    ],
                    "start": 64,
                    "type": "Identifier",
                  },
                  "end": 73,
                  "optional": false,
                  "range": [
                    64,
                    73,
                  ],
                  "start": 64,
                  "type": "CallExpression",
                },
                "end": 73,
                "expression": true,
                "generator": false,
                "params": [],
                "range": [
                  58,
                  73,
                ],
                "start": 58,
                "type": "ArrowFunctionExpression",
              },
              "start": 49,
              "type": "AssignmentExpression",
            },
            "range": [
              49,
              74,
            ],
            "start": 49,
            "type": "ExpressionStatement",
          },
        ],
        "end": 76,
        "range": [
          47,
          76,
        ],
        "start": 47,
        "type": "BlockStatement",
      },
      "end": 76,
      "left": {
        "declarations": [
          {
            "end": 10,
            "id": {
              "end": 10,
              "name": "x",
              "range": [
                9,
                10,
              ],
              "start": 9,
              "type": "Identifier",
            },
            "init": null,
            "range": [
              9,
              10,
            ],
            "start": 9,
            "type": "VariableDeclarator",
          },
        ],
        "end": 10,
        "kind": "let",
        "range": [
          5,
          10,
        ],
        "start": 5,
        "type": "VariableDeclaration",
      },
      "range": [
        0,
        76,
      ],
      "right": {
        "end": 45,
        "properties": [
          {
            "computed": false,
            "end": 43,
            "key": {
              "end": 17,
              "name": "a",
              "range": [
                16,
                17,
              ],
              "start": 16,
              "type": "Identifier",
            },
            "kind": "init",
            "method": false,
            "range": [
              16,
              43,
            ],
            "shorthand": false,
            "start": 16,
            "type": "Property",
            "value": {
              "end": 43,
              "left": {
                "computed": true,
                "end": 25,
                "object": {
                  "end": 20,
                  "name": "a",
                  "range": [
                    19,
                    20,
                  ],
                  "start": 19,
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "argument": {
                    "end": 22,
                    "name": "i",
                    "range": [
                      21,
                      22,
                    ],
                    "start": 21,
                    "type": "Identifier",
                  },
                  "end": 24,
                  "operator": "++",
                  "prefix": false,
                  "range": [
                    21,
                    24,
                  ],
                  "start": 21,
                  "type": "UpdateExpression",
                },
                "range": [
                  19,
                  25,
                ],
                "start": 19,
                "type": "MemberExpression",
              },
              "operator": "=",
              "range": [
                19,
                43,
              ],
              "right": {
                "async": false,
                "body": {
                  "arguments": [
                    {
                      "end": 42,
                      "range": [
                        39,
                        42,
                      ],
                      "start": 39,
                      "type": "Literal",
                      "value": "x",
                    },
                  ],
                  "callee": {
                    "end": 38,
                    "name": "eval",
                    "range": [
                      34,
                      38,
                    ],
                    "start": 34,
                    "type": "Identifier",
                  },
                  "end": 43,
                  "optional": false,
                  "range": [
                    34,
                    43,
                  ],
                  "start": 34,
                  "type": "CallExpression",
                },
                "end": 43,
                "expression": true,
                "generator": false,
                "params": [],
                "range": [
                  28,
                  43,
                ],
                "start": 28,
                "type": "ArrowFunctionExpression",
              },
              "start": 19,
              "type": "AssignmentExpression",
            },
          },
        ],
        "range": [
          14,
          45,
        ],
        "start": 14,
        "type": "ObjectExpression",
      },
      "start": 0,
      "type": "ForInStatement",
    },
  ],
  "end": 76,
  "range": [
    0,
    76,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (x.y of [23]) {} 1`] = `
{
  "body": [
    {
      "await": false,
      "body": {
        "body": [],
        "end": 20,
        "range": [
          18,
          20,
        ],
        "start": 18,
        "type": "BlockStatement",
      },
      "end": 20,
      "left": {
        "computed": false,
        "end": 8,
        "object": {
          "end": 6,
          "name": "x",
          "range": [
            5,
            6,
          ],
          "start": 5,
          "type": "Identifier",
        },
        "optional": false,
        "property": {
          "end": 8,
          "name": "y",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          5,
          8,
        ],
        "start": 5,
        "type": "MemberExpression",
      },
      "range": [
        0,
        20,
      ],
      "right": {
        "elements": [
          {
            "end": 15,
            "range": [
              13,
              15,
            ],
            "start": 13,
            "type": "Literal",
            "value": 23,
          },
        ],
        "end": 16,
        "range": [
          12,
          16,
        ],
        "start": 12,
        "type": "ArrayExpression",
      },
      "start": 0,
      "type": "ForOfStatement",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for (yield[g]--;;); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 19,
        "range": [
          18,
          19,
        ],
        "start": 18,
        "type": "EmptyStatement",
      },
      "end": 19,
      "init": {
        "argument": {
          "computed": true,
          "end": 13,
          "object": {
            "end": 10,
            "name": "yield",
            "range": [
              5,
              10,
            ],
            "start": 5,
            "type": "Identifier",
          },
          "optional": false,
          "property": {
            "end": 12,
            "name": "g",
            "range": [
              11,
              12,
            ],
            "start": 11,
            "type": "Identifier",
          },
          "range": [
            5,
            13,
          ],
          "start": 5,
          "type": "MemberExpression",
        },
        "end": 15,
        "operator": "--",
        "prefix": false,
        "range": [
          5,
          15,
        ],
        "start": 5,
        "type": "UpdateExpression",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "test": null,
      "type": "ForStatement",
      "update": null,
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > for([a,b[a],{c,d=e,[f]:[g,h().a,(0).k,...i[0]]}] in 0); 1`] = `
{
  "body": [
    {
      "body": {
        "end": 55,
        "range": [
          54,
          55,
        ],
        "start": 54,
        "type": "EmptyStatement",
      },
      "end": 55,
      "left": {
        "elements": [
          {
            "end": 6,
            "name": "a",
            "range": [
              5,
              6,
            ],
            "start": 5,
            "type": "Identifier",
          },
          {
            "computed": true,
            "end": 11,
            "object": {
              "end": 8,
              "name": "b",
              "range": [
                7,
                8,
              ],
              "start": 7,
              "type": "Identifier",
            },
            "optional": false,
            "property": {
              "end": 10,
              "name": "a",
              "range": [
                9,
                10,
              ],
              "start": 9,
              "type": "Identifier",
            },
            "range": [
              7,
              11,
            ],
            "start": 7,
            "type": "MemberExpression",
          },
          {
            "end": 47,
            "properties": [
              {
                "computed": false,
                "end": 14,
                "key": {
                  "end": 14,
                  "name": "c",
                  "range": [
                    13,
                    14,
                  ],
                  "start": 13,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  13,
                  14,
                ],
                "shorthand": true,
                "start": 13,
                "type": "Property",
                "value": {
                  "end": 14,
                  "name": "c",
                  "range": [
                    13,
                    14,
                  ],
                  "start": 13,
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "end": 18,
                "key": {
                  "end": 16,
                  "name": "d",
                  "range": [
                    15,
                    16,
                  ],
                  "start": 15,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  15,
                  18,
                ],
                "shorthand": true,
                "start": 15,
                "type": "Property",
                "value": {
                  "end": 18,
                  "left": {
                    "end": 16,
                    "name": "d",
                    "range": [
                      15,
                      16,
                    ],
                    "start": 15,
                    "type": "Identifier",
                  },
                  "range": [
                    15,
                    18,
                  ],
                  "right": {
                    "end": 18,
                    "name": "e",
                    "range": [
                      17,
                      18,
                    ],
                    "start": 17,
                    "type": "Identifier",
                  },
                  "start": 15,
                  "type": "AssignmentPattern",
                },
              },
              {
                "computed": true,
                "end": 46,
                "key": {
                  "end": 21,
                  "name": "f",
                  "range": [
                    20,
                    21,
                  ],
                  "start": 20,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  19,
                  46,
                ],
                "shorthand": false,
                "start": 19,
                "type": "Property",
                "value": {
                  "elements": [
                    {
                      "end": 25,
                      "name": "g",
                      "range": [
                        24,
                        25,
                      ],
                      "start": 24,
                      "type": "Identifier",
                    },
                    {
                      "computed": false,
                      "end": 31,
                      "object": {
                        "arguments": [],
                        "callee": {
                          "end": 27,
                          "name": "h",
                          "range": [
                            26,
                            27,
                          ],
                          "start": 26,
                          "type": "Identifier",
                        },
                        "end": 29,
                        "optional": false,
                        "range": [
                          26,
                          29,
                        ],
                        "start": 26,
                        "type": "CallExpression",
                      },
                      "optional": false,
                      "property": {
                        "end": 31,
                        "name": "a",
                        "range": [
                          30,
                          31,
                        ],
                        "start": 30,
                        "type": "Identifier",
                      },
                      "range": [
                        26,
                        31,
                      ],
                      "start": 26,
                      "type": "MemberExpression",
                    },
                    {
                      "computed": false,
                      "end": 37,
                      "object": {
                        "end": 34,
                        "range": [
                          33,
                          34,
                        ],
                        "start": 33,
                        "type": "Literal",
                        "value": 0,
                      },
                      "optional": false,
                      "property": {
                        "end": 37,
                        "name": "k",
                        "range": [
                          36,
                          37,
                        ],
                        "start": 36,
                        "type": "Identifier",
                      },
                      "range": [
                        32,
                        37,
                      ],
                      "start": 32,
                      "type": "MemberExpression",
                    },
                    {
                      "argument": {
                        "computed": true,
                        "end": 45,
                        "object": {
                          "end": 42,
                          "name": "i",
                          "range": [
                            41,
                            42,
                          ],
                          "start": 41,
                          "type": "Identifier",
                        },
                        "optional": false,
                        "property": {
                          "end": 44,
                          "range": [
                            43,
                            44,
                          ],
                          "start": 43,
                          "type": "Literal",
                          "value": 0,
                        },
                        "range": [
                          41,
                          45,
                        ],
                        "start": 41,
                        "type": "MemberExpression",
                      },
                      "end": 45,
                      "range": [
                        38,
                        45,
                      ],
                      "start": 38,
                      "type": "RestElement",
                    },
                  ],
                  "end": 46,
                  "range": [
                    23,
                    46,
                  ],
                  "start": 23,
                  "type": "ArrayPattern",
                },
              },
            ],
            "range": [
              12,
              47,
            ],
            "start": 12,
            "type": "ObjectPattern",
          },
        ],
        "end": 48,
        "range": [
          4,
          48,
        ],
        "start": 4,
        "type": "ArrayPattern",
      },
      "range": [
        0,
        55,
      ],
      "right": {
        "end": 53,
        "range": [
          52,
          53,
        ],
        "start": 52,
        "type": "Literal",
        "value": 0,
      },
      "start": 0,
      "type": "ForInStatement",
    },
  ],
  "end": 55,
  "range": [
    0,
    55,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > function bind_bindFunction0(fun, thisArg, boundArgs) {
  return function bound() {
      // Ensure we allocate a call-object slot for |boundArgs|, so the
      // debugger can access this value.
      if (false) void boundArgs;

      var newTarget;
      if (_IsConstructing()) {
          newTarget = new.target;
          if (newTarget === bound)
              newTarget = fun;
          switch (arguments.length) {
            case 0:
              return constructContentFunction(fun, newTarget);
            case 1:
              return constructContentFunction(fun, newTarget, SPREAD(arguments, 1));
            case 2:
              return constructContentFunction(fun, newTarget, SPREAD(arguments, 2));
            case 3:
              return constructContentFunction(fun, newTarget, SPREAD(arguments, 3));
            case 4:
              return constructContentFunction(fun, newTarget, SPREAD(arguments, 4));
            case 5:
              return constructContentFunction(fun, newTarget, SPREAD(arguments, 5));
            default:
              var args = FUN_APPLY(bind_mapArguments, null, arguments);
              return bind_constructFunctionN(fun, newTarget, args);
          }
      } else {
          switch (arguments.length) {
            case 0:
              return callContentFunction(fun, thisArg);
            case 1:
              return callContentFunction(fun, thisArg, SPREAD(arguments, 1));
            case 2:
              return callContentFunction(fun, thisArg, SPREAD(arguments, 2));
            case 3:
              return callContentFunction(fun, thisArg, SPREAD(arguments, 3));
            case 4:
              return callContentFunction(fun, thisArg, SPREAD(arguments, 4));
            case 5:
              return callContentFunction(fun, thisArg, SPREAD(arguments, 5));
            default:
              return FUN_APPLY(fun, thisArg, arguments);
          }
      }
  };
} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "argument": {
              "async": false,
              "body": {
                "body": [
                  {
                    "alternate": null,
                    "consequent": {
                      "end": 227,
                      "expression": {
                        "argument": {
                          "end": 226,
                          "name": "boundArgs",
                          "range": [
                            217,
                            226,
                          ],
                          "start": 217,
                          "type": "Identifier",
                        },
                        "end": 226,
                        "operator": "void",
                        "prefix": true,
                        "range": [
                          212,
                          226,
                        ],
                        "start": 212,
                        "type": "UnaryExpression",
                      },
                      "range": [
                        212,
                        227,
                      ],
                      "start": 212,
                      "type": "ExpressionStatement",
                    },
                    "end": 227,
                    "range": [
                      201,
                      227,
                    ],
                    "start": 201,
                    "test": {
                      "end": 210,
                      "range": [
                        205,
                        210,
                      ],
                      "raw": "false",
                      "start": 205,
                      "type": "Literal",
                      "value": false,
                    },
                    "type": "IfStatement",
                  },
                  {
                    "declarations": [
                      {
                        "end": 248,
                        "id": {
                          "end": 248,
                          "name": "newTarget",
                          "range": [
                            239,
                            248,
                          ],
                          "start": 239,
                          "type": "Identifier",
                        },
                        "init": null,
                        "range": [
                          239,
                          248,
                        ],
                        "start": 239,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 249,
                    "kind": "var",
                    "range": [
                      235,
                      249,
                    ],
                    "start": 235,
                    "type": "VariableDeclaration",
                  },
                  {
                    "alternate": {
                      "body": [
                        {
                          "cases": [
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 1317,
                                        "name": "fun",
                                        "range": [
                                          1314,
                                          1317,
                                        ],
                                        "start": 1314,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1326,
                                        "name": "thisArg",
                                        "range": [
                                          1319,
                                          1326,
                                        ],
                                        "start": 1319,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "callee": {
                                      "end": 1313,
                                      "name": "callContentFunction",
                                      "range": [
                                        1294,
                                        1313,
                                      ],
                                      "start": 1294,
                                      "type": "Identifier",
                                    },
                                    "end": 1327,
                                    "optional": false,
                                    "range": [
                                      1294,
                                      1327,
                                    ],
                                    "start": 1294,
                                    "type": "CallExpression",
                                  },
                                  "end": 1328,
                                  "range": [
                                    1287,
                                    1328,
                                  ],
                                  "start": 1287,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1328,
                              "range": [
                                1265,
                                1328,
                              ],
                              "start": 1265,
                              "test": {
                                "end": 1271,
                                "range": [
                                  1270,
                                  1271,
                                ],
                                "raw": "0",
                                "start": 1270,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 1393,
                                        "name": "fun",
                                        "range": [
                                          1390,
                                          1393,
                                        ],
                                        "start": 1390,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1402,
                                        "name": "thisArg",
                                        "range": [
                                          1395,
                                          1402,
                                        ],
                                        "start": 1395,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 1420,
                                            "name": "arguments",
                                            "range": [
                                              1411,
                                              1420,
                                            ],
                                            "start": 1411,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 1423,
                                            "range": [
                                              1422,
                                              1423,
                                            ],
                                            "raw": "1",
                                            "start": 1422,
                                            "type": "Literal",
                                            "value": 1,
                                          },
                                        ],
                                        "callee": {
                                          "end": 1410,
                                          "name": "SPREAD",
                                          "range": [
                                            1404,
                                            1410,
                                          ],
                                          "start": 1404,
                                          "type": "Identifier",
                                        },
                                        "end": 1424,
                                        "optional": false,
                                        "range": [
                                          1404,
                                          1424,
                                        ],
                                        "start": 1404,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 1389,
                                      "name": "callContentFunction",
                                      "range": [
                                        1370,
                                        1389,
                                      ],
                                      "start": 1370,
                                      "type": "Identifier",
                                    },
                                    "end": 1425,
                                    "optional": false,
                                    "range": [
                                      1370,
                                      1425,
                                    ],
                                    "start": 1370,
                                    "type": "CallExpression",
                                  },
                                  "end": 1426,
                                  "range": [
                                    1363,
                                    1426,
                                  ],
                                  "start": 1363,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1426,
                              "range": [
                                1341,
                                1426,
                              ],
                              "start": 1341,
                              "test": {
                                "end": 1347,
                                "range": [
                                  1346,
                                  1347,
                                ],
                                "raw": "1",
                                "start": 1346,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 1491,
                                        "name": "fun",
                                        "range": [
                                          1488,
                                          1491,
                                        ],
                                        "start": 1488,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1500,
                                        "name": "thisArg",
                                        "range": [
                                          1493,
                                          1500,
                                        ],
                                        "start": 1493,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 1518,
                                            "name": "arguments",
                                            "range": [
                                              1509,
                                              1518,
                                            ],
                                            "start": 1509,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 1521,
                                            "range": [
                                              1520,
                                              1521,
                                            ],
                                            "raw": "2",
                                            "start": 1520,
                                            "type": "Literal",
                                            "value": 2,
                                          },
                                        ],
                                        "callee": {
                                          "end": 1508,
                                          "name": "SPREAD",
                                          "range": [
                                            1502,
                                            1508,
                                          ],
                                          "start": 1502,
                                          "type": "Identifier",
                                        },
                                        "end": 1522,
                                        "optional": false,
                                        "range": [
                                          1502,
                                          1522,
                                        ],
                                        "start": 1502,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 1487,
                                      "name": "callContentFunction",
                                      "range": [
                                        1468,
                                        1487,
                                      ],
                                      "start": 1468,
                                      "type": "Identifier",
                                    },
                                    "end": 1523,
                                    "optional": false,
                                    "range": [
                                      1468,
                                      1523,
                                    ],
                                    "start": 1468,
                                    "type": "CallExpression",
                                  },
                                  "end": 1524,
                                  "range": [
                                    1461,
                                    1524,
                                  ],
                                  "start": 1461,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1524,
                              "range": [
                                1439,
                                1524,
                              ],
                              "start": 1439,
                              "test": {
                                "end": 1445,
                                "range": [
                                  1444,
                                  1445,
                                ],
                                "raw": "2",
                                "start": 1444,
                                "type": "Literal",
                                "value": 2,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 1589,
                                        "name": "fun",
                                        "range": [
                                          1586,
                                          1589,
                                        ],
                                        "start": 1586,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1598,
                                        "name": "thisArg",
                                        "range": [
                                          1591,
                                          1598,
                                        ],
                                        "start": 1591,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 1616,
                                            "name": "arguments",
                                            "range": [
                                              1607,
                                              1616,
                                            ],
                                            "start": 1607,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 1619,
                                            "range": [
                                              1618,
                                              1619,
                                            ],
                                            "raw": "3",
                                            "start": 1618,
                                            "type": "Literal",
                                            "value": 3,
                                          },
                                        ],
                                        "callee": {
                                          "end": 1606,
                                          "name": "SPREAD",
                                          "range": [
                                            1600,
                                            1606,
                                          ],
                                          "start": 1600,
                                          "type": "Identifier",
                                        },
                                        "end": 1620,
                                        "optional": false,
                                        "range": [
                                          1600,
                                          1620,
                                        ],
                                        "start": 1600,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 1585,
                                      "name": "callContentFunction",
                                      "range": [
                                        1566,
                                        1585,
                                      ],
                                      "start": 1566,
                                      "type": "Identifier",
                                    },
                                    "end": 1621,
                                    "optional": false,
                                    "range": [
                                      1566,
                                      1621,
                                    ],
                                    "start": 1566,
                                    "type": "CallExpression",
                                  },
                                  "end": 1622,
                                  "range": [
                                    1559,
                                    1622,
                                  ],
                                  "start": 1559,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1622,
                              "range": [
                                1537,
                                1622,
                              ],
                              "start": 1537,
                              "test": {
                                "end": 1543,
                                "range": [
                                  1542,
                                  1543,
                                ],
                                "raw": "3",
                                "start": 1542,
                                "type": "Literal",
                                "value": 3,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 1687,
                                        "name": "fun",
                                        "range": [
                                          1684,
                                          1687,
                                        ],
                                        "start": 1684,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1696,
                                        "name": "thisArg",
                                        "range": [
                                          1689,
                                          1696,
                                        ],
                                        "start": 1689,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 1714,
                                            "name": "arguments",
                                            "range": [
                                              1705,
                                              1714,
                                            ],
                                            "start": 1705,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 1717,
                                            "range": [
                                              1716,
                                              1717,
                                            ],
                                            "raw": "4",
                                            "start": 1716,
                                            "type": "Literal",
                                            "value": 4,
                                          },
                                        ],
                                        "callee": {
                                          "end": 1704,
                                          "name": "SPREAD",
                                          "range": [
                                            1698,
                                            1704,
                                          ],
                                          "start": 1698,
                                          "type": "Identifier",
                                        },
                                        "end": 1718,
                                        "optional": false,
                                        "range": [
                                          1698,
                                          1718,
                                        ],
                                        "start": 1698,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 1683,
                                      "name": "callContentFunction",
                                      "range": [
                                        1664,
                                        1683,
                                      ],
                                      "start": 1664,
                                      "type": "Identifier",
                                    },
                                    "end": 1719,
                                    "optional": false,
                                    "range": [
                                      1664,
                                      1719,
                                    ],
                                    "start": 1664,
                                    "type": "CallExpression",
                                  },
                                  "end": 1720,
                                  "range": [
                                    1657,
                                    1720,
                                  ],
                                  "start": 1657,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1720,
                              "range": [
                                1635,
                                1720,
                              ],
                              "start": 1635,
                              "test": {
                                "end": 1641,
                                "range": [
                                  1640,
                                  1641,
                                ],
                                "raw": "4",
                                "start": 1640,
                                "type": "Literal",
                                "value": 4,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 1785,
                                        "name": "fun",
                                        "range": [
                                          1782,
                                          1785,
                                        ],
                                        "start": 1782,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1794,
                                        "name": "thisArg",
                                        "range": [
                                          1787,
                                          1794,
                                        ],
                                        "start": 1787,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 1812,
                                            "name": "arguments",
                                            "range": [
                                              1803,
                                              1812,
                                            ],
                                            "start": 1803,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 1815,
                                            "range": [
                                              1814,
                                              1815,
                                            ],
                                            "raw": "5",
                                            "start": 1814,
                                            "type": "Literal",
                                            "value": 5,
                                          },
                                        ],
                                        "callee": {
                                          "end": 1802,
                                          "name": "SPREAD",
                                          "range": [
                                            1796,
                                            1802,
                                          ],
                                          "start": 1796,
                                          "type": "Identifier",
                                        },
                                        "end": 1816,
                                        "optional": false,
                                        "range": [
                                          1796,
                                          1816,
                                        ],
                                        "start": 1796,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 1781,
                                      "name": "callContentFunction",
                                      "range": [
                                        1762,
                                        1781,
                                      ],
                                      "start": 1762,
                                      "type": "Identifier",
                                    },
                                    "end": 1817,
                                    "optional": false,
                                    "range": [
                                      1762,
                                      1817,
                                    ],
                                    "start": 1762,
                                    "type": "CallExpression",
                                  },
                                  "end": 1818,
                                  "range": [
                                    1755,
                                    1818,
                                  ],
                                  "start": 1755,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1818,
                              "range": [
                                1733,
                                1818,
                              ],
                              "start": 1733,
                              "test": {
                                "end": 1739,
                                "range": [
                                  1738,
                                  1739,
                                ],
                                "raw": "5",
                                "start": 1738,
                                "type": "Literal",
                                "value": 5,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 1874,
                                        "name": "fun",
                                        "range": [
                                          1871,
                                          1874,
                                        ],
                                        "start": 1871,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1883,
                                        "name": "thisArg",
                                        "range": [
                                          1876,
                                          1883,
                                        ],
                                        "start": 1876,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1894,
                                        "name": "arguments",
                                        "range": [
                                          1885,
                                          1894,
                                        ],
                                        "start": 1885,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "callee": {
                                      "end": 1870,
                                      "name": "FUN_APPLY",
                                      "range": [
                                        1861,
                                        1870,
                                      ],
                                      "start": 1861,
                                      "type": "Identifier",
                                    },
                                    "end": 1895,
                                    "optional": false,
                                    "range": [
                                      1861,
                                      1895,
                                    ],
                                    "start": 1861,
                                    "type": "CallExpression",
                                  },
                                  "end": 1896,
                                  "range": [
                                    1854,
                                    1896,
                                  ],
                                  "start": 1854,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1896,
                              "range": [
                                1831,
                                1896,
                              ],
                              "start": 1831,
                              "test": null,
                              "type": "SwitchCase",
                            },
                          ],
                          "discriminant": {
                            "computed": false,
                            "end": 1249,
                            "object": {
                              "end": 1242,
                              "name": "arguments",
                              "range": [
                                1233,
                                1242,
                              ],
                              "start": 1233,
                              "type": "Identifier",
                            },
                            "optional": false,
                            "property": {
                              "end": 1249,
                              "name": "length",
                              "range": [
                                1243,
                                1249,
                              ],
                              "start": 1243,
                              "type": "Identifier",
                            },
                            "range": [
                              1233,
                              1249,
                            ],
                            "start": 1233,
                            "type": "MemberExpression",
                          },
                          "end": 1908,
                          "range": [
                            1225,
                            1908,
                          ],
                          "start": 1225,
                          "type": "SwitchStatement",
                        },
                      ],
                      "end": 1916,
                      "range": [
                        1213,
                        1916,
                      ],
                      "start": 1213,
                      "type": "BlockStatement",
                    },
                    "consequent": {
                      "body": [
                        {
                          "end": 314,
                          "expression": {
                            "end": 313,
                            "left": {
                              "end": 300,
                              "name": "newTarget",
                              "range": [
                                291,
                                300,
                              ],
                              "start": 291,
                              "type": "Identifier",
                            },
                            "operator": "=",
                            "range": [
                              291,
                              313,
                            ],
                            "right": {
                              "end": 313,
                              "meta": {
                                "end": 306,
                                "name": "new",
                                "range": [
                                  303,
                                  306,
                                ],
                                "start": 303,
                                "type": "Identifier",
                              },
                              "property": {
                                "end": 313,
                                "name": "target",
                                "range": [
                                  307,
                                  313,
                                ],
                                "start": 307,
                                "type": "Identifier",
                              },
                              "range": [
                                303,
                                313,
                              ],
                              "start": 303,
                              "type": "MetaProperty",
                            },
                            "start": 291,
                            "type": "AssignmentExpression",
                          },
                          "range": [
                            291,
                            314,
                          ],
                          "start": 291,
                          "type": "ExpressionStatement",
                        },
                        {
                          "alternate": null,
                          "consequent": {
                            "end": 380,
                            "expression": {
                              "end": 379,
                              "left": {
                                "end": 373,
                                "name": "newTarget",
                                "range": [
                                  364,
                                  373,
                                ],
                                "start": 364,
                                "type": "Identifier",
                              },
                              "operator": "=",
                              "range": [
                                364,
                                379,
                              ],
                              "right": {
                                "end": 379,
                                "name": "fun",
                                "range": [
                                  376,
                                  379,
                                ],
                                "start": 376,
                                "type": "Identifier",
                              },
                              "start": 364,
                              "type": "AssignmentExpression",
                            },
                            "range": [
                              364,
                              380,
                            ],
                            "start": 364,
                            "type": "ExpressionStatement",
                          },
                          "end": 380,
                          "range": [
                            325,
                            380,
                          ],
                          "start": 325,
                          "test": {
                            "end": 348,
                            "left": {
                              "end": 338,
                              "name": "newTarget",
                              "range": [
                                329,
                                338,
                              ],
                              "start": 329,
                              "type": "Identifier",
                            },
                            "operator": "===",
                            "range": [
                              329,
                              348,
                            ],
                            "right": {
                              "end": 348,
                              "name": "bound",
                              "range": [
                                343,
                                348,
                              ],
                              "start": 343,
                              "type": "Identifier",
                            },
                            "start": 329,
                            "type": "BinaryExpression",
                          },
                          "type": "IfStatement",
                        },
                        {
                          "cases": [
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 488,
                                        "name": "fun",
                                        "range": [
                                          485,
                                          488,
                                        ],
                                        "start": 485,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 499,
                                        "name": "newTarget",
                                        "range": [
                                          490,
                                          499,
                                        ],
                                        "start": 490,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "callee": {
                                      "end": 484,
                                      "name": "constructContentFunction",
                                      "range": [
                                        460,
                                        484,
                                      ],
                                      "start": 460,
                                      "type": "Identifier",
                                    },
                                    "end": 500,
                                    "optional": false,
                                    "range": [
                                      460,
                                      500,
                                    ],
                                    "start": 460,
                                    "type": "CallExpression",
                                  },
                                  "end": 501,
                                  "range": [
                                    453,
                                    501,
                                  ],
                                  "start": 453,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 501,
                              "range": [
                                431,
                                501,
                              ],
                              "start": 431,
                              "test": {
                                "end": 437,
                                "range": [
                                  436,
                                  437,
                                ],
                                "raw": "0",
                                "start": 436,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 571,
                                        "name": "fun",
                                        "range": [
                                          568,
                                          571,
                                        ],
                                        "start": 568,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 582,
                                        "name": "newTarget",
                                        "range": [
                                          573,
                                          582,
                                        ],
                                        "start": 573,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 600,
                                            "name": "arguments",
                                            "range": [
                                              591,
                                              600,
                                            ],
                                            "start": 591,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 603,
                                            "range": [
                                              602,
                                              603,
                                            ],
                                            "raw": "1",
                                            "start": 602,
                                            "type": "Literal",
                                            "value": 1,
                                          },
                                        ],
                                        "callee": {
                                          "end": 590,
                                          "name": "SPREAD",
                                          "range": [
                                            584,
                                            590,
                                          ],
                                          "start": 584,
                                          "type": "Identifier",
                                        },
                                        "end": 604,
                                        "optional": false,
                                        "range": [
                                          584,
                                          604,
                                        ],
                                        "start": 584,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 567,
                                      "name": "constructContentFunction",
                                      "range": [
                                        543,
                                        567,
                                      ],
                                      "start": 543,
                                      "type": "Identifier",
                                    },
                                    "end": 605,
                                    "optional": false,
                                    "range": [
                                      543,
                                      605,
                                    ],
                                    "start": 543,
                                    "type": "CallExpression",
                                  },
                                  "end": 606,
                                  "range": [
                                    536,
                                    606,
                                  ],
                                  "start": 536,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 606,
                              "range": [
                                514,
                                606,
                              ],
                              "start": 514,
                              "test": {
                                "end": 520,
                                "range": [
                                  519,
                                  520,
                                ],
                                "raw": "1",
                                "start": 519,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 676,
                                        "name": "fun",
                                        "range": [
                                          673,
                                          676,
                                        ],
                                        "start": 673,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 687,
                                        "name": "newTarget",
                                        "range": [
                                          678,
                                          687,
                                        ],
                                        "start": 678,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 705,
                                            "name": "arguments",
                                            "range": [
                                              696,
                                              705,
                                            ],
                                            "start": 696,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 708,
                                            "range": [
                                              707,
                                              708,
                                            ],
                                            "raw": "2",
                                            "start": 707,
                                            "type": "Literal",
                                            "value": 2,
                                          },
                                        ],
                                        "callee": {
                                          "end": 695,
                                          "name": "SPREAD",
                                          "range": [
                                            689,
                                            695,
                                          ],
                                          "start": 689,
                                          "type": "Identifier",
                                        },
                                        "end": 709,
                                        "optional": false,
                                        "range": [
                                          689,
                                          709,
                                        ],
                                        "start": 689,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 672,
                                      "name": "constructContentFunction",
                                      "range": [
                                        648,
                                        672,
                                      ],
                                      "start": 648,
                                      "type": "Identifier",
                                    },
                                    "end": 710,
                                    "optional": false,
                                    "range": [
                                      648,
                                      710,
                                    ],
                                    "start": 648,
                                    "type": "CallExpression",
                                  },
                                  "end": 711,
                                  "range": [
                                    641,
                                    711,
                                  ],
                                  "start": 641,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 711,
                              "range": [
                                619,
                                711,
                              ],
                              "start": 619,
                              "test": {
                                "end": 625,
                                "range": [
                                  624,
                                  625,
                                ],
                                "raw": "2",
                                "start": 624,
                                "type": "Literal",
                                "value": 2,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 781,
                                        "name": "fun",
                                        "range": [
                                          778,
                                          781,
                                        ],
                                        "start": 778,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 792,
                                        "name": "newTarget",
                                        "range": [
                                          783,
                                          792,
                                        ],
                                        "start": 783,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 810,
                                            "name": "arguments",
                                            "range": [
                                              801,
                                              810,
                                            ],
                                            "start": 801,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 813,
                                            "range": [
                                              812,
                                              813,
                                            ],
                                            "raw": "3",
                                            "start": 812,
                                            "type": "Literal",
                                            "value": 3,
                                          },
                                        ],
                                        "callee": {
                                          "end": 800,
                                          "name": "SPREAD",
                                          "range": [
                                            794,
                                            800,
                                          ],
                                          "start": 794,
                                          "type": "Identifier",
                                        },
                                        "end": 814,
                                        "optional": false,
                                        "range": [
                                          794,
                                          814,
                                        ],
                                        "start": 794,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 777,
                                      "name": "constructContentFunction",
                                      "range": [
                                        753,
                                        777,
                                      ],
                                      "start": 753,
                                      "type": "Identifier",
                                    },
                                    "end": 815,
                                    "optional": false,
                                    "range": [
                                      753,
                                      815,
                                    ],
                                    "start": 753,
                                    "type": "CallExpression",
                                  },
                                  "end": 816,
                                  "range": [
                                    746,
                                    816,
                                  ],
                                  "start": 746,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 816,
                              "range": [
                                724,
                                816,
                              ],
                              "start": 724,
                              "test": {
                                "end": 730,
                                "range": [
                                  729,
                                  730,
                                ],
                                "raw": "3",
                                "start": 729,
                                "type": "Literal",
                                "value": 3,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 886,
                                        "name": "fun",
                                        "range": [
                                          883,
                                          886,
                                        ],
                                        "start": 883,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 897,
                                        "name": "newTarget",
                                        "range": [
                                          888,
                                          897,
                                        ],
                                        "start": 888,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 915,
                                            "name": "arguments",
                                            "range": [
                                              906,
                                              915,
                                            ],
                                            "start": 906,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 918,
                                            "range": [
                                              917,
                                              918,
                                            ],
                                            "raw": "4",
                                            "start": 917,
                                            "type": "Literal",
                                            "value": 4,
                                          },
                                        ],
                                        "callee": {
                                          "end": 905,
                                          "name": "SPREAD",
                                          "range": [
                                            899,
                                            905,
                                          ],
                                          "start": 899,
                                          "type": "Identifier",
                                        },
                                        "end": 919,
                                        "optional": false,
                                        "range": [
                                          899,
                                          919,
                                        ],
                                        "start": 899,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 882,
                                      "name": "constructContentFunction",
                                      "range": [
                                        858,
                                        882,
                                      ],
                                      "start": 858,
                                      "type": "Identifier",
                                    },
                                    "end": 920,
                                    "optional": false,
                                    "range": [
                                      858,
                                      920,
                                    ],
                                    "start": 858,
                                    "type": "CallExpression",
                                  },
                                  "end": 921,
                                  "range": [
                                    851,
                                    921,
                                  ],
                                  "start": 851,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 921,
                              "range": [
                                829,
                                921,
                              ],
                              "start": 829,
                              "test": {
                                "end": 835,
                                "range": [
                                  834,
                                  835,
                                ],
                                "raw": "4",
                                "start": 834,
                                "type": "Literal",
                                "value": 4,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 991,
                                        "name": "fun",
                                        "range": [
                                          988,
                                          991,
                                        ],
                                        "start": 988,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1002,
                                        "name": "newTarget",
                                        "range": [
                                          993,
                                          1002,
                                        ],
                                        "start": 993,
                                        "type": "Identifier",
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "end": 1020,
                                            "name": "arguments",
                                            "range": [
                                              1011,
                                              1020,
                                            ],
                                            "start": 1011,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 1023,
                                            "range": [
                                              1022,
                                              1023,
                                            ],
                                            "raw": "5",
                                            "start": 1022,
                                            "type": "Literal",
                                            "value": 5,
                                          },
                                        ],
                                        "callee": {
                                          "end": 1010,
                                          "name": "SPREAD",
                                          "range": [
                                            1004,
                                            1010,
                                          ],
                                          "start": 1004,
                                          "type": "Identifier",
                                        },
                                        "end": 1024,
                                        "optional": false,
                                        "range": [
                                          1004,
                                          1024,
                                        ],
                                        "start": 1004,
                                        "type": "CallExpression",
                                      },
                                    ],
                                    "callee": {
                                      "end": 987,
                                      "name": "constructContentFunction",
                                      "range": [
                                        963,
                                        987,
                                      ],
                                      "start": 963,
                                      "type": "Identifier",
                                    },
                                    "end": 1025,
                                    "optional": false,
                                    "range": [
                                      963,
                                      1025,
                                    ],
                                    "start": 963,
                                    "type": "CallExpression",
                                  },
                                  "end": 1026,
                                  "range": [
                                    956,
                                    1026,
                                  ],
                                  "start": 956,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1026,
                              "range": [
                                934,
                                1026,
                              ],
                              "start": 934,
                              "test": {
                                "end": 940,
                                "range": [
                                  939,
                                  940,
                                ],
                                "raw": "5",
                                "start": 939,
                                "type": "Literal",
                                "value": 5,
                              },
                              "type": "SwitchCase",
                            },
                            {
                              "consequent": [
                                {
                                  "declarations": [
                                    {
                                      "end": 1118,
                                      "id": {
                                        "end": 1070,
                                        "name": "args",
                                        "range": [
                                          1066,
                                          1070,
                                        ],
                                        "start": 1066,
                                        "type": "Identifier",
                                      },
                                      "init": {
                                        "arguments": [
                                          {
                                            "end": 1100,
                                            "name": "bind_mapArguments",
                                            "range": [
                                              1083,
                                              1100,
                                            ],
                                            "start": 1083,
                                            "type": "Identifier",
                                          },
                                          {
                                            "end": 1106,
                                            "range": [
                                              1102,
                                              1106,
                                            ],
                                            "raw": "null",
                                            "start": 1102,
                                            "type": "Literal",
                                            "value": null,
                                          },
                                          {
                                            "end": 1117,
                                            "name": "arguments",
                                            "range": [
                                              1108,
                                              1117,
                                            ],
                                            "start": 1108,
                                            "type": "Identifier",
                                          },
                                        ],
                                        "callee": {
                                          "end": 1082,
                                          "name": "FUN_APPLY",
                                          "range": [
                                            1073,
                                            1082,
                                          ],
                                          "start": 1073,
                                          "type": "Identifier",
                                        },
                                        "end": 1118,
                                        "optional": false,
                                        "range": [
                                          1073,
                                          1118,
                                        ],
                                        "start": 1073,
                                        "type": "CallExpression",
                                      },
                                      "range": [
                                        1066,
                                        1118,
                                      ],
                                      "start": 1066,
                                      "type": "VariableDeclarator",
                                    },
                                  ],
                                  "end": 1119,
                                  "kind": "var",
                                  "range": [
                                    1062,
                                    1119,
                                  ],
                                  "start": 1062,
                                  "type": "VariableDeclaration",
                                },
                                {
                                  "argument": {
                                    "arguments": [
                                      {
                                        "end": 1168,
                                        "name": "fun",
                                        "range": [
                                          1165,
                                          1168,
                                        ],
                                        "start": 1165,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1179,
                                        "name": "newTarget",
                                        "range": [
                                          1170,
                                          1179,
                                        ],
                                        "start": 1170,
                                        "type": "Identifier",
                                      },
                                      {
                                        "end": 1185,
                                        "name": "args",
                                        "range": [
                                          1181,
                                          1185,
                                        ],
                                        "start": 1181,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "callee": {
                                      "end": 1164,
                                      "name": "bind_constructFunctionN",
                                      "range": [
                                        1141,
                                        1164,
                                      ],
                                      "start": 1141,
                                      "type": "Identifier",
                                    },
                                    "end": 1186,
                                    "optional": false,
                                    "range": [
                                      1141,
                                      1186,
                                    ],
                                    "start": 1141,
                                    "type": "CallExpression",
                                  },
                                  "end": 1187,
                                  "range": [
                                    1134,
                                    1187,
                                  ],
                                  "start": 1134,
                                  "type": "ReturnStatement",
                                },
                              ],
                              "end": 1187,
                              "range": [
                                1039,
                                1187,
                              ],
                              "start": 1039,
                              "test": null,
                              "type": "SwitchCase",
                            },
                          ],
                          "discriminant": {
                            "computed": false,
                            "end": 415,
                            "object": {
                              "end": 408,
                              "name": "arguments",
                              "range": [
                                399,
                                408,
                              ],
                              "start": 399,
                              "type": "Identifier",
                            },
                            "optional": false,
                            "property": {
                              "end": 415,
                              "name": "length",
                              "range": [
                                409,
                                415,
                              ],
                              "start": 409,
                              "type": "Identifier",
                            },
                            "range": [
                              399,
                              415,
                            ],
                            "start": 399,
                            "type": "MemberExpression",
                          },
                          "end": 1199,
                          "range": [
                            391,
                            1199,
                          ],
                          "start": 391,
                          "type": "SwitchStatement",
                        },
                      ],
                      "end": 1207,
                      "range": [
                        279,
                        1207,
                      ],
                      "start": 279,
                      "type": "BlockStatement",
                    },
                    "end": 1916,
                    "range": [
                      256,
                      1916,
                    ],
                    "start": 256,
                    "test": {
                      "arguments": [],
                      "callee": {
                        "end": 275,
                        "name": "_IsConstructing",
                        "range": [
                          260,
                          275,
                        ],
                        "start": 260,
                        "type": "Identifier",
                      },
                      "end": 277,
                      "optional": false,
                      "range": [
                        260,
                        277,
                      ],
                      "start": 260,
                      "type": "CallExpression",
                    },
                    "type": "IfStatement",
                  },
                ],
                "end": 1920,
                "range": [
                  81,
                  1920,
                ],
                "start": 81,
                "type": "BlockStatement",
              },
              "end": 1920,
              "generator": false,
              "id": {
                "end": 78,
                "name": "bound",
                "range": [
                  73,
                  78,
                ],
                "start": 73,
                "type": "Identifier",
              },
              "params": [],
              "range": [
                64,
                1920,
              ],
              "start": 64,
              "type": "FunctionExpression",
            },
            "end": 1921,
            "range": [
              57,
              1921,
            ],
            "start": 57,
            "type": "ReturnStatement",
          },
        ],
        "end": 1923,
        "range": [
          53,
          1923,
        ],
        "start": 53,
        "type": "BlockStatement",
      },
      "end": 1923,
      "generator": false,
      "id": {
        "end": 27,
        "name": "bind_bindFunction0",
        "range": [
          9,
          27,
        ],
        "start": 9,
        "type": "Identifier",
      },
      "params": [
        {
          "end": 31,
          "name": "fun",
          "range": [
            28,
            31,
          ],
          "start": 28,
          "type": "Identifier",
        },
        {
          "end": 40,
          "name": "thisArg",
          "range": [
            33,
            40,
          ],
          "start": 33,
          "type": "Identifier",
        },
        {
          "end": 51,
          "name": "boundArgs",
          "range": [
            42,
            51,
          ],
          "start": 42,
          "type": "Identifier",
        },
      ],
      "range": [
        0,
        1923,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 1923,
  "range": [
    0,
    1923,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > function f() { ((((a))((b)()).l))() } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "end": 35,
            "expression": {
              "arguments": [],
              "callee": {
                "computed": false,
                "end": 31,
                "object": {
                  "arguments": [
                    {
                      "arguments": [],
                      "callee": {
                        "end": 25,
                        "name": "b",
                        "range": [
                          24,
                          25,
                        ],
                        "start": 24,
                        "type": "Identifier",
                      },
                      "end": 28,
                      "optional": false,
                      "range": [
                        23,
                        28,
                      ],
                      "start": 23,
                      "type": "CallExpression",
                    },
                  ],
                  "callee": {
                    "end": 20,
                    "name": "a",
                    "range": [
                      19,
                      20,
                    ],
                    "start": 19,
                    "type": "Identifier",
                  },
                  "end": 29,
                  "optional": false,
                  "range": [
                    17,
                    29,
                  ],
                  "start": 17,
                  "type": "CallExpression",
                },
                "optional": false,
                "property": {
                  "end": 31,
                  "name": "l",
                  "range": [
                    30,
                    31,
                  ],
                  "start": 30,
                  "type": "Identifier",
                },
                "range": [
                  17,
                  31,
                ],
                "start": 17,
                "type": "MemberExpression",
              },
              "end": 35,
              "optional": false,
              "range": [
                15,
                35,
              ],
              "start": 15,
              "type": "CallExpression",
            },
            "range": [
              15,
              35,
            ],
            "start": 15,
            "type": "ExpressionStatement",
          },
        ],
        "end": 37,
        "range": [
          13,
          37,
        ],
        "start": 13,
        "type": "BlockStatement",
      },
      "end": 37,
      "generator": false,
      "id": {
        "end": 10,
        "name": "f",
        "range": [
          9,
          10,
        ],
        "start": 9,
        "type": "Identifier",
      },
      "params": [],
      "range": [
        0,
        37,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 37,
  "range": [
    0,
    37,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > function f() {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "end": 15,
        "range": [
          13,
          15,
        ],
        "start": 13,
        "type": "BlockStatement",
      },
      "end": 15,
      "generator": false,
      "id": {
        "end": 10,
        "name": "f",
        "range": [
          9,
          10,
        ],
        "start": 9,
        "type": "Identifier",
      },
      "params": [],
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > function fn4([[x, y, ...z]]) {} 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [],
        "end": 31,
        "range": [
          29,
          31,
        ],
        "start": 29,
        "type": "BlockStatement",
      },
      "end": 31,
      "generator": false,
      "id": {
        "end": 12,
        "name": "fn4",
        "range": [
          9,
          12,
        ],
        "start": 9,
        "type": "Identifier",
      },
      "params": [
        {
          "elements": [
            {
              "elements": [
                {
                  "end": 16,
                  "name": "x",
                  "range": [
                    15,
                    16,
                  ],
                  "start": 15,
                  "type": "Identifier",
                },
                {
                  "end": 19,
                  "name": "y",
                  "range": [
                    18,
                    19,
                  ],
                  "start": 18,
                  "type": "Identifier",
                },
                {
                  "argument": {
                    "end": 25,
                    "name": "z",
                    "range": [
                      24,
                      25,
                    ],
                    "start": 24,
                    "type": "Identifier",
                  },
                  "end": 25,
                  "range": [
                    21,
                    25,
                  ],
                  "start": 21,
                  "type": "RestElement",
                },
              ],
              "end": 26,
              "range": [
                14,
                26,
              ],
              "start": 14,
              "type": "ArrayPattern",
            },
          ],
          "end": 27,
          "range": [
            13,
            27,
          ],
          "start": 13,
          "type": "ArrayPattern",
        },
      ],
      "range": [
        0,
        31,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 31,
  "range": [
    0,
    31,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > function foo() { return {x:1}; }; [...foo()["x"]] = [10]; 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "argument": {
              "end": 29,
              "properties": [
                {
                  "computed": false,
                  "end": 28,
                  "key": {
                    "end": 26,
                    "name": "x",
                    "range": [
                      25,
                      26,
                    ],
                    "start": 25,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    25,
                    28,
                  ],
                  "shorthand": false,
                  "start": 25,
                  "type": "Property",
                  "value": {
                    "end": 28,
                    "range": [
                      27,
                      28,
                    ],
                    "start": 27,
                    "type": "Literal",
                    "value": 1,
                  },
                },
              ],
              "range": [
                24,
                29,
              ],
              "start": 24,
              "type": "ObjectExpression",
            },
            "end": 30,
            "range": [
              17,
              30,
            ],
            "start": 17,
            "type": "ReturnStatement",
          },
        ],
        "end": 32,
        "range": [
          15,
          32,
        ],
        "start": 15,
        "type": "BlockStatement",
      },
      "end": 32,
      "generator": false,
      "id": {
        "end": 12,
        "name": "foo",
        "range": [
          9,
          12,
        ],
        "start": 9,
        "type": "Identifier",
      },
      "params": [],
      "range": [
        0,
        32,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
    {
      "end": 33,
      "range": [
        32,
        33,
      ],
      "start": 32,
      "type": "EmptyStatement",
    },
    {
      "end": 57,
      "expression": {
        "end": 56,
        "left": {
          "elements": [
            {
              "argument": {
                "computed": true,
                "end": 48,
                "object": {
                  "arguments": [],
                  "callee": {
                    "end": 41,
                    "name": "foo",
                    "range": [
                      38,
                      41,
                    ],
                    "start": 38,
                    "type": "Identifier",
                  },
                  "end": 43,
                  "optional": false,
                  "range": [
                    38,
                    43,
                  ],
                  "start": 38,
                  "type": "CallExpression",
                },
                "optional": false,
                "property": {
                  "end": 47,
                  "range": [
                    44,
                    47,
                  ],
                  "start": 44,
                  "type": "Literal",
                  "value": "x",
                },
                "range": [
                  38,
                  48,
                ],
                "start": 38,
                "type": "MemberExpression",
              },
              "end": 48,
              "range": [
                35,
                48,
              ],
              "start": 35,
              "type": "RestElement",
            },
          ],
          "end": 49,
          "range": [
            34,
            49,
          ],
          "start": 34,
          "type": "ArrayPattern",
        },
        "operator": "=",
        "range": [
          34,
          56,
        ],
        "right": {
          "elements": [
            {
              "end": 55,
              "range": [
                53,
                55,
              ],
              "start": 53,
              "type": "Literal",
              "value": 10,
            },
          ],
          "end": 56,
          "range": [
            52,
            56,
          ],
          "start": 52,
          "type": "ArrayExpression",
        },
        "start": 34,
        "type": "AssignmentExpression",
      },
      "range": [
        34,
        57,
      ],
      "start": 34,
      "type": "ExpressionStatement",
    },
  ],
  "end": 57,
  "range": [
    0,
    57,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > function z() { for (let c in new.target) for (let o in (--((b)).debugger)) debugger; } 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "body": {
              "body": {
                "end": 84,
                "range": [
                  75,
                  84,
                ],
                "start": 75,
                "type": "DebuggerStatement",
              },
              "end": 84,
              "left": {
                "declarations": [
                  {
                    "end": 51,
                    "id": {
                      "end": 51,
                      "name": "o",
                      "range": [
                        50,
                        51,
                      ],
                      "start": 50,
                      "type": "Identifier",
                    },
                    "init": null,
                    "range": [
                      50,
                      51,
                    ],
                    "start": 50,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 51,
                "kind": "let",
                "range": [
                  46,
                  51,
                ],
                "start": 46,
                "type": "VariableDeclaration",
              },
              "range": [
                41,
                84,
              ],
              "right": {
                "argument": {
                  "computed": false,
                  "end": 72,
                  "object": {
                    "end": 61,
                    "name": "b",
                    "range": [
                      60,
                      61,
                    ],
                    "start": 60,
                    "type": "Identifier",
                  },
                  "optional": false,
                  "property": {
                    "end": 72,
                    "name": "debugger",
                    "range": [
                      64,
                      72,
                    ],
                    "start": 64,
                    "type": "Identifier",
                  },
                  "range": [
                    58,
                    72,
                  ],
                  "start": 58,
                  "type": "MemberExpression",
                },
                "end": 72,
                "operator": "--",
                "prefix": true,
                "range": [
                  56,
                  72,
                ],
                "start": 56,
                "type": "UpdateExpression",
              },
              "start": 41,
              "type": "ForInStatement",
            },
            "end": 84,
            "left": {
              "declarations": [
                {
                  "end": 25,
                  "id": {
                    "end": 25,
                    "name": "c",
                    "range": [
                      24,
                      25,
                    ],
                    "start": 24,
                    "type": "Identifier",
                  },
                  "init": null,
                  "range": [
                    24,
                    25,
                  ],
                  "start": 24,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 25,
              "kind": "let",
              "range": [
                20,
                25,
              ],
              "start": 20,
              "type": "VariableDeclaration",
            },
            "range": [
              15,
              84,
            ],
            "right": {
              "end": 39,
              "meta": {
                "end": 32,
                "name": "new",
                "range": [
                  29,
                  32,
                ],
                "start": 29,
                "type": "Identifier",
              },
              "property": {
                "end": 39,
                "name": "target",
                "range": [
                  33,
                  39,
                ],
                "start": 33,
                "type": "Identifier",
              },
              "range": [
                29,
                39,
              ],
              "start": 29,
              "type": "MetaProperty",
            },
            "start": 15,
            "type": "ForInStatement",
          },
        ],
        "end": 86,
        "range": [
          13,
          86,
        ],
        "start": 13,
        "type": "BlockStatement",
      },
      "end": 86,
      "generator": false,
      "id": {
        "end": 10,
        "name": "z",
        "range": [
          9,
          10,
        ],
        "start": 9,
        "type": "Identifier",
      },
      "params": [],
      "range": [
        0,
        86,
      ],
      "start": 0,
      "type": "FunctionDeclaration",
    },
  ],
  "end": 86,
  "range": [
    0,
    86,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > if ((b === undefined && c === undefined) || (this.b === undefined && this.c === undefined)) {} 1`] = `
{
  "body": [
    {
      "alternate": null,
      "consequent": {
        "body": [],
        "end": 94,
        "range": [
          92,
          94,
        ],
        "start": 92,
        "type": "BlockStatement",
      },
      "end": 94,
      "range": [
        0,
        94,
      ],
      "start": 0,
      "test": {
        "end": 90,
        "left": {
          "end": 39,
          "left": {
            "end": 20,
            "left": {
              "end": 6,
              "name": "b",
              "range": [
                5,
                6,
              ],
              "start": 5,
              "type": "Identifier",
            },
            "operator": "===",
            "range": [
              5,
              20,
            ],
            "right": {
              "end": 20,
              "name": "undefined",
              "range": [
                11,
                20,
              ],
              "start": 11,
              "type": "Identifier",
            },
            "start": 5,
            "type": "BinaryExpression",
          },
          "operator": "&&",
          "range": [
            5,
            39,
          ],
          "right": {
            "end": 39,
            "left": {
              "end": 25,
              "name": "c",
              "range": [
                24,
                25,
              ],
              "start": 24,
              "type": "Identifier",
            },
            "operator": "===",
            "range": [
              24,
              39,
            ],
            "right": {
              "end": 39,
              "name": "undefined",
              "range": [
                30,
                39,
              ],
              "start": 30,
              "type": "Identifier",
            },
            "start": 24,
            "type": "BinaryExpression",
          },
          "start": 5,
          "type": "LogicalExpression",
        },
        "operator": "||",
        "range": [
          4,
          90,
        ],
        "right": {
          "end": 89,
          "left": {
            "end": 65,
            "left": {
              "computed": false,
              "end": 51,
              "object": {
                "end": 49,
                "range": [
                  45,
                  49,
                ],
                "start": 45,
                "type": "ThisExpression",
              },
              "optional": false,
              "property": {
                "end": 51,
                "name": "b",
                "range": [
                  50,
                  51,
                ],
                "start": 50,
                "type": "Identifier",
              },
              "range": [
                45,
                51,
              ],
              "start": 45,
              "type": "MemberExpression",
            },
            "operator": "===",
            "range": [
              45,
              65,
            ],
            "right": {
              "end": 65,
              "name": "undefined",
              "range": [
                56,
                65,
              ],
              "start": 56,
              "type": "Identifier",
            },
            "start": 45,
            "type": "BinaryExpression",
          },
          "operator": "&&",
          "range": [
            45,
            89,
          ],
          "right": {
            "end": 89,
            "left": {
              "computed": false,
              "end": 75,
              "object": {
                "end": 73,
                "range": [
                  69,
                  73,
                ],
                "start": 69,
                "type": "ThisExpression",
              },
              "optional": false,
              "property": {
                "end": 75,
                "name": "c",
                "range": [
                  74,
                  75,
                ],
                "start": 74,
                "type": "Identifier",
              },
              "range": [
                69,
                75,
              ],
              "start": 69,
              "type": "MemberExpression",
            },
            "operator": "===",
            "range": [
              69,
              89,
            ],
            "right": {
              "end": 89,
              "name": "undefined",
              "range": [
                80,
                89,
              ],
              "start": 80,
              "type": "Identifier",
            },
            "start": 69,
            "type": "BinaryExpression",
          },
          "start": 45,
          "type": "LogicalExpression",
        },
        "start": 4,
        "type": "LogicalExpression",
      },
      "type": "IfStatement",
    },
  ],
  "end": 94,
  "range": [
    0,
    94,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > if (a > 2) {b = c } 1`] = `
{
  "body": [
    {
      "alternate": null,
      "consequent": {
        "body": [
          {
            "end": 17,
            "expression": {
              "end": 17,
              "left": {
                "end": 13,
                "name": "b",
                "range": [
                  12,
                  13,
                ],
                "start": 12,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                12,
                17,
              ],
              "right": {
                "end": 17,
                "name": "c",
                "range": [
                  16,
                  17,
                ],
                "start": 16,
                "type": "Identifier",
              },
              "start": 12,
              "type": "AssignmentExpression",
            },
            "range": [
              12,
              17,
            ],
            "start": 12,
            "type": "ExpressionStatement",
          },
        ],
        "end": 19,
        "range": [
          11,
          19,
        ],
        "start": 11,
        "type": "BlockStatement",
      },
      "end": 19,
      "range": [
        0,
        19,
      ],
      "start": 0,
      "test": {
        "end": 9,
        "left": {
          "end": 5,
          "name": "a",
          "range": [
            4,
            5,
          ],
          "start": 4,
          "type": "Identifier",
        },
        "operator": ">",
        "range": [
          4,
          9,
        ],
        "right": {
          "end": 9,
          "range": [
            8,
            9,
          ],
          "start": 8,
          "type": "Literal",
          "value": 2,
        },
        "start": 4,
        "type": "BinaryExpression",
      },
      "type": "IfStatement",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > if (a) b 1`] = `
{
  "body": [
    {
      "alternate": null,
      "consequent": {
        "end": 8,
        "expression": {
          "end": 8,
          "name": "b",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "range": [
          7,
          8,
        ],
        "start": 7,
        "type": "ExpressionStatement",
      },
      "end": 8,
      "range": [
        0,
        8,
      ],
      "start": 0,
      "test": {
        "end": 5,
        "name": "a",
        "range": [
          4,
          5,
        ],
        "start": 4,
        "type": "Identifier",
      },
      "type": "IfStatement",
    },
  ],
  "end": 8,
  "range": [
    0,
    8,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > if (false) {} else ; 1`] = `
{
  "body": [
    {
      "alternate": {
        "end": 20,
        "range": [
          19,
          20,
        ],
        "start": 19,
        "type": "EmptyStatement",
      },
      "consequent": {
        "body": [],
        "end": 13,
        "range": [
          11,
          13,
        ],
        "start": 11,
        "type": "BlockStatement",
      },
      "end": 20,
      "range": [
        0,
        20,
      ],
      "start": 0,
      "test": {
        "end": 9,
        "range": [
          4,
          9,
        ],
        "start": 4,
        "type": "Literal",
        "value": false,
      },
      "type": "IfStatement",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > if (foo) a; if (bar) b; else c; 1`] = `
{
  "body": [
    {
      "alternate": null,
      "consequent": {
        "end": 11,
        "expression": {
          "end": 10,
          "name": "a",
          "range": [
            9,
            10,
          ],
          "start": 9,
          "type": "Identifier",
        },
        "range": [
          9,
          11,
        ],
        "start": 9,
        "type": "ExpressionStatement",
      },
      "end": 11,
      "range": [
        0,
        11,
      ],
      "start": 0,
      "test": {
        "end": 7,
        "name": "foo",
        "range": [
          4,
          7,
        ],
        "start": 4,
        "type": "Identifier",
      },
      "type": "IfStatement",
    },
    {
      "alternate": {
        "end": 31,
        "expression": {
          "end": 30,
          "name": "c",
          "range": [
            29,
            30,
          ],
          "start": 29,
          "type": "Identifier",
        },
        "range": [
          29,
          31,
        ],
        "start": 29,
        "type": "ExpressionStatement",
      },
      "consequent": {
        "end": 23,
        "expression": {
          "end": 22,
          "name": "b",
          "range": [
            21,
            22,
          ],
          "start": 21,
          "type": "Identifier",
        },
        "range": [
          21,
          23,
        ],
        "start": 21,
        "type": "ExpressionStatement",
      },
      "end": 31,
      "range": [
        12,
        31,
      ],
      "start": 12,
      "test": {
        "end": 19,
        "name": "bar",
        "range": [
          16,
          19,
        ],
        "start": 16,
        "type": "Identifier",
      },
      "type": "IfStatement",
    },
  ],
  "end": 31,
  "range": [
    0,
    31,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > if(a)b 1`] = `
{
  "body": [
    {
      "alternate": null,
      "consequent": {
        "end": 6,
        "expression": {
          "end": 6,
          "name": "b",
          "range": [
            5,
            6,
          ],
          "start": 5,
          "type": "Identifier",
        },
        "range": [
          5,
          6,
        ],
        "start": 5,
        "type": "ExpressionStatement",
      },
      "end": 6,
      "range": [
        0,
        6,
      ],
      "start": 0,
      "test": {
        "end": 4,
        "name": "a",
        "range": [
          3,
          4,
        ],
        "start": 3,
        "type": "Identifier",
      },
      "type": "IfStatement",
    },
  ],
  "end": 6,
  "range": [
    0,
    6,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > if(a)b;else c; 1`] = `
{
  "body": [
    {
      "alternate": {
        "end": 14,
        "expression": {
          "end": 13,
          "name": "c",
          "range": [
            12,
            13,
          ],
          "start": 12,
          "type": "Identifier",
        },
        "range": [
          12,
          14,
        ],
        "start": 12,
        "type": "ExpressionStatement",
      },
      "consequent": {
        "end": 7,
        "expression": {
          "end": 6,
          "name": "b",
          "range": [
            5,
            6,
          ],
          "start": 5,
          "type": "Identifier",
        },
        "range": [
          5,
          7,
        ],
        "start": 5,
        "type": "ExpressionStatement",
      },
      "end": 14,
      "range": [
        0,
        14,
      ],
      "start": 0,
      "test": {
        "end": 4,
        "name": "a",
        "range": [
          3,
          4,
        ],
        "start": 3,
        "type": "Identifier",
      },
      "type": "IfStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > let {
  x:{
      y:{
          z:{
              k:k2 = 31
            } = { k:21 }
        } = { z:{ k:20 } }
    } = { y: { z:{} } }
} = { x:{ y:{ z:{} } } }; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 160,
          "id": {
            "end": 137,
            "properties": [
              {
                "computed": false,
                "end": 135,
                "key": {
                  "end": 9,
                  "name": "x",
                  "range": [
                    8,
                    9,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  8,
                  135,
                ],
                "shorthand": false,
                "start": 8,
                "type": "Property",
                "value": {
                  "end": 135,
                  "left": {
                    "end": 117,
                    "properties": [
                      {
                        "computed": false,
                        "end": 111,
                        "key": {
                          "end": 19,
                          "name": "y",
                          "range": [
                            18,
                            19,
                          ],
                          "start": 18,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          18,
                          111,
                        ],
                        "shorthand": false,
                        "start": 18,
                        "type": "Property",
                        "value": {
                          "end": 111,
                          "left": {
                            "end": 94,
                            "properties": [
                              {
                                "computed": false,
                                "end": 84,
                                "key": {
                                  "end": 33,
                                  "name": "z",
                                  "range": [
                                    32,
                                    33,
                                  ],
                                  "start": 32,
                                  "type": "Identifier",
                                },
                                "kind": "init",
                                "method": false,
                                "range": [
                                  32,
                                  84,
                                ],
                                "shorthand": false,
                                "start": 32,
                                "type": "Property",
                                "value": {
                                  "end": 84,
                                  "left": {
                                    "end": 73,
                                    "properties": [
                                      {
                                        "computed": false,
                                        "end": 59,
                                        "key": {
                                          "end": 51,
                                          "name": "k",
                                          "range": [
                                            50,
                                            51,
                                          ],
                                          "start": 50,
                                          "type": "Identifier",
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "range": [
                                          50,
                                          59,
                                        ],
                                        "shorthand": false,
                                        "start": 50,
                                        "type": "Property",
                                        "value": {
                                          "end": 59,
                                          "left": {
                                            "end": 54,
                                            "name": "k2",
                                            "range": [
                                              52,
                                              54,
                                            ],
                                            "start": 52,
                                            "type": "Identifier",
                                          },
                                          "range": [
                                            52,
                                            59,
                                          ],
                                          "right": {
                                            "end": 59,
                                            "range": [
                                              57,
                                              59,
                                            ],
                                            "start": 57,
                                            "type": "Literal",
                                            "value": 31,
                                          },
                                          "start": 52,
                                          "type": "AssignmentPattern",
                                        },
                                      },
                                    ],
                                    "range": [
                                      34,
                                      73,
                                    ],
                                    "start": 34,
                                    "type": "ObjectPattern",
                                  },
                                  "range": [
                                    34,
                                    84,
                                  ],
                                  "right": {
                                    "end": 84,
                                    "properties": [
                                      {
                                        "computed": false,
                                        "end": 82,
                                        "key": {
                                          "end": 79,
                                          "name": "k",
                                          "range": [
                                            78,
                                            79,
                                          ],
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "range": [
                                          78,
                                          82,
                                        ],
                                        "shorthand": false,
                                        "start": 78,
                                        "type": "Property",
                                        "value": {
                                          "end": 82,
                                          "range": [
                                            80,
                                            82,
                                          ],
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 21,
                                        },
                                      },
                                    ],
                                    "range": [
                                      76,
                                      84,
                                    ],
                                    "start": 76,
                                    "type": "ObjectExpression",
                                  },
                                  "start": 34,
                                  "type": "AssignmentPattern",
                                },
                              },
                            ],
                            "range": [
                              20,
                              94,
                            ],
                            "start": 20,
                            "type": "ObjectPattern",
                          },
                          "range": [
                            20,
                            111,
                          ],
                          "right": {
                            "end": 111,
                            "properties": [
                              {
                                "computed": false,
                                "end": 109,
                                "key": {
                                  "end": 100,
                                  "name": "z",
                                  "range": [
                                    99,
                                    100,
                                  ],
                                  "start": 99,
                                  "type": "Identifier",
                                },
                                "kind": "init",
                                "method": false,
                                "range": [
                                  99,
                                  109,
                                ],
                                "shorthand": false,
                                "start": 99,
                                "type": "Property",
                                "value": {
                                  "end": 109,
                                  "properties": [
                                    {
                                      "computed": false,
                                      "end": 107,
                                      "key": {
                                        "end": 104,
                                        "name": "k",
                                        "range": [
                                          103,
                                          104,
                                        ],
                                        "start": 103,
                                        "type": "Identifier",
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "range": [
                                        103,
                                        107,
                                      ],
                                      "shorthand": false,
                                      "start": 103,
                                      "type": "Property",
                                      "value": {
                                        "end": 107,
                                        "range": [
                                          105,
                                          107,
                                        ],
                                        "start": 105,
                                        "type": "Literal",
                                        "value": 20,
                                      },
                                    },
                                  ],
                                  "range": [
                                    101,
                                    109,
                                  ],
                                  "start": 101,
                                  "type": "ObjectExpression",
                                },
                              },
                            ],
                            "range": [
                              97,
                              111,
                            ],
                            "start": 97,
                            "type": "ObjectExpression",
                          },
                          "start": 20,
                          "type": "AssignmentPattern",
                        },
                      },
                    ],
                    "range": [
                      10,
                      117,
                    ],
                    "start": 10,
                    "type": "ObjectPattern",
                  },
                  "range": [
                    10,
                    135,
                  ],
                  "right": {
                    "end": 135,
                    "properties": [
                      {
                        "computed": false,
                        "end": 133,
                        "key": {
                          "end": 123,
                          "name": "y",
                          "range": [
                            122,
                            123,
                          ],
                          "start": 122,
                          "type": "Identifier",
                        },
                        "kind": "init",
                        "method": false,
                        "range": [
                          122,
                          133,
                        ],
                        "shorthand": false,
                        "start": 122,
                        "type": "Property",
                        "value": {
                          "end": 133,
                          "properties": [
                            {
                              "computed": false,
                              "end": 131,
                              "key": {
                                "end": 128,
                                "name": "z",
                                "range": [
                                  127,
                                  128,
                                ],
                                "start": 127,
                                "type": "Identifier",
                              },
                              "kind": "init",
                              "method": false,
                              "range": [
                                127,
                                131,
                              ],
                              "shorthand": false,
                              "start": 127,
                              "type": "Property",
                              "value": {
                                "end": 131,
                                "properties": [],
                                "range": [
                                  129,
                                  131,
                                ],
                                "start": 129,
                                "type": "ObjectExpression",
                              },
                            },
                          ],
                          "range": [
                            125,
                            133,
                          ],
                          "start": 125,
                          "type": "ObjectExpression",
                        },
                      },
                    ],
                    "range": [
                      120,
                      135,
                    ],
                    "start": 120,
                    "type": "ObjectExpression",
                  },
                  "start": 10,
                  "type": "AssignmentPattern",
                },
              },
            ],
            "range": [
              4,
              137,
            ],
            "start": 4,
            "type": "ObjectPattern",
          },
          "init": {
            "end": 160,
            "properties": [
              {
                "computed": false,
                "end": 158,
                "key": {
                  "end": 143,
                  "name": "x",
                  "range": [
                    142,
                    143,
                  ],
                  "start": 142,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  142,
                  158,
                ],
                "shorthand": false,
                "start": 142,
                "type": "Property",
                "value": {
                  "end": 158,
                  "properties": [
                    {
                      "computed": false,
                      "end": 156,
                      "key": {
                        "end": 147,
                        "name": "y",
                        "range": [
                          146,
                          147,
                        ],
                        "start": 146,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        146,
                        156,
                      ],
                      "shorthand": false,
                      "start": 146,
                      "type": "Property",
                      "value": {
                        "end": 156,
                        "properties": [
                          {
                            "computed": false,
                            "end": 154,
                            "key": {
                              "end": 151,
                              "name": "z",
                              "range": [
                                150,
                                151,
                              ],
                              "start": 150,
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "range": [
                              150,
                              154,
                            ],
                            "shorthand": false,
                            "start": 150,
                            "type": "Property",
                            "value": {
                              "end": 154,
                              "properties": [],
                              "range": [
                                152,
                                154,
                              ],
                              "start": 152,
                              "type": "ObjectExpression",
                            },
                          },
                        ],
                        "range": [
                          148,
                          156,
                        ],
                        "start": 148,
                        "type": "ObjectExpression",
                      },
                    },
                  ],
                  "range": [
                    144,
                    158,
                  ],
                  "start": 144,
                  "type": "ObjectExpression",
                },
              },
            ],
            "range": [
              140,
              160,
            ],
            "start": 140,
            "type": "ObjectExpression",
          },
          "range": [
            4,
            160,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 161,
      "kind": "let",
      "range": [
        0,
        161,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 161,
  "range": [
    0,
    161,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > let 1`] = `
{
  "body": [
    {
      "end": 3,
      "expression": {
        "end": 3,
        "name": "let",
        "range": [
          0,
          3,
        ],
        "start": 0,
        "type": "Identifier",
      },
      "range": [
        0,
        3,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 3,
  "range": [
    0,
    3,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > let fun = () => {
    // one
    // two
    // three
    return (1);
} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 70,
          "id": {
            "end": 7,
            "name": "fun",
            "range": [
              4,
              7,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "async": false,
            "body": {
              "body": [
                {
                  "argument": {
                    "end": 66,
                    "range": [
                      65,
                      66,
                    ],
                    "start": 65,
                    "type": "Literal",
                    "value": 1,
                  },
                  "end": 68,
                  "range": [
                    57,
                    68,
                  ],
                  "start": 57,
                  "type": "ReturnStatement",
                },
              ],
              "end": 70,
              "range": [
                16,
                70,
              ],
              "start": 16,
              "type": "BlockStatement",
            },
            "end": 70,
            "expression": false,
            "generator": false,
            "params": [],
            "range": [
              10,
              70,
            ],
            "start": 10,
            "type": "ArrowFunctionExpression",
          },
          "range": [
            4,
            70,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 70,
      "kind": "let",
      "range": [
        0,
        70,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 70,
  "range": [
    0,
    70,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > let.bar[foo] 1`] = `
{
  "body": [
    {
      "end": 12,
      "expression": {
        "computed": true,
        "end": 12,
        "object": {
          "computed": false,
          "end": 7,
          "object": {
            "end": 3,
            "name": "let",
            "range": [
              0,
              3,
            ],
            "start": 0,
            "type": "Identifier",
          },
          "optional": false,
          "property": {
            "end": 7,
            "name": "bar",
            "range": [
              4,
              7,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "range": [
            0,
            7,
          ],
          "start": 0,
          "type": "MemberExpression",
        },
        "optional": false,
        "property": {
          "end": 11,
          "name": "foo",
          "range": [
            8,
            11,
          ],
          "start": 8,
          "type": "Identifier",
        },
        "range": [
          0,
          12,
        ],
        "start": 0,
        "type": "MemberExpression",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "type": "ExpressionStatement",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > switch (A) {default: D; case B: C; } 1`] = `
{
  "body": [
    {
      "cases": [
        {
          "consequent": [
            {
              "end": 23,
              "expression": {
                "end": 22,
                "name": "D",
                "range": [
                  21,
                  22,
                ],
                "start": 21,
                "type": "Identifier",
              },
              "range": [
                21,
                23,
              ],
              "start": 21,
              "type": "ExpressionStatement",
            },
          ],
          "end": 23,
          "range": [
            12,
            23,
          ],
          "start": 12,
          "test": null,
          "type": "SwitchCase",
        },
        {
          "consequent": [
            {
              "end": 34,
              "expression": {
                "end": 33,
                "name": "C",
                "range": [
                  32,
                  33,
                ],
                "start": 32,
                "type": "Identifier",
              },
              "range": [
                32,
                34,
              ],
              "start": 32,
              "type": "ExpressionStatement",
            },
          ],
          "end": 34,
          "range": [
            24,
            34,
          ],
          "start": 24,
          "test": {
            "end": 30,
            "name": "B",
            "range": [
              29,
              30,
            ],
            "start": 29,
            "type": "Identifier",
          },
          "type": "SwitchCase",
        },
      ],
      "discriminant": {
        "end": 9,
        "name": "A",
        "range": [
          8,
          9,
        ],
        "start": 8,
        "type": "Identifier",
      },
      "end": 36,
      "range": [
        0,
        36,
      ],
      "start": 0,
      "type": "SwitchStatement",
    },
  ],
  "end": 36,
  "range": [
    0,
    36,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > switch(a){case 1:default:} 1`] = `
{
  "body": [
    {
      "cases": [
        {
          "consequent": [],
          "end": 17,
          "range": [
            10,
            17,
          ],
          "start": 10,
          "test": {
            "end": 16,
            "range": [
              15,
              16,
            ],
            "start": 15,
            "type": "Literal",
            "value": 1,
          },
          "type": "SwitchCase",
        },
        {
          "consequent": [],
          "end": 25,
          "range": [
            17,
            25,
          ],
          "start": 17,
          "test": null,
          "type": "SwitchCase",
        },
      ],
      "discriminant": {
        "end": 8,
        "name": "a",
        "range": [
          7,
          8,
        ],
        "start": 7,
        "type": "Identifier",
      },
      "end": 26,
      "range": [
        0,
        26,
      ],
      "start": 0,
      "type": "SwitchStatement",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > switch(foo) {} 1`] = `
{
  "body": [
    {
      "cases": [],
      "discriminant": {
        "end": 10,
        "name": "foo",
        "range": [
          7,
          10,
        ],
        "start": 7,
        "type": "Identifier",
      },
      "end": 14,
      "range": [
        0,
        14,
      ],
      "start": 0,
      "type": "SwitchStatement",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > throw foo; 1`] = `
{
  "body": [
    {
      "argument": {
        "end": 9,
        "name": "foo",
        "range": [
          6,
          9,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "end": 10,
      "range": [
        0,
        10,
      ],
      "start": 0,
      "type": "ThrowStatement",
    },
  ],
  "end": 10,
  "range": [
    0,
    10,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > throw x * y 1`] = `
{
  "body": [
    {
      "argument": {
        "end": 11,
        "left": {
          "end": 7,
          "name": "x",
          "range": [
            6,
            7,
          ],
          "start": 6,
          "type": "Identifier",
        },
        "operator": "*",
        "range": [
          6,
          11,
        ],
        "right": {
          "end": 11,
          "name": "y",
          "range": [
            10,
            11,
          ],
          "start": 10,
          "type": "Identifier",
        },
        "start": 6,
        "type": "BinaryExpression",
      },
      "end": 11,
      "range": [
        0,
        11,
      ],
      "start": 0,
      "type": "ThrowStatement",
    },
  ],
  "end": 11,
  "range": [
    0,
    11,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > try { } catch ([a = 0]) { } 1`] = `
{
  "body": [
    {
      "block": {
        "body": [],
        "end": 7,
        "range": [
          4,
          7,
        ],
        "start": 4,
        "type": "BlockStatement",
      },
      "end": 27,
      "finalizer": null,
      "handler": {
        "body": {
          "body": [],
          "end": 27,
          "range": [
            24,
            27,
          ],
          "start": 24,
          "type": "BlockStatement",
        },
        "end": 27,
        "param": {
          "elements": [
            {
              "end": 21,
              "left": {
                "end": 17,
                "name": "a",
                "range": [
                  16,
                  17,
                ],
                "start": 16,
                "type": "Identifier",
              },
              "range": [
                16,
                21,
              ],
              "right": {
                "end": 21,
                "range": [
                  20,
                  21,
                ],
                "start": 20,
                "type": "Literal",
                "value": 0,
              },
              "start": 16,
              "type": "AssignmentPattern",
            },
          ],
          "end": 22,
          "range": [
            15,
            22,
          ],
          "start": 15,
          "type": "ArrayPattern",
        },
        "range": [
          8,
          27,
        ],
        "start": 8,
        "type": "CatchClause",
      },
      "range": [
        0,
        27,
      ],
      "start": 0,
      "type": "TryStatement",
    },
  ],
  "end": 27,
  "range": [
    0,
    27,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > try { } catch (e) { say(e) } 1`] = `
{
  "body": [
    {
      "block": {
        "body": [],
        "end": 7,
        "range": [
          4,
          7,
        ],
        "start": 4,
        "type": "BlockStatement",
      },
      "end": 28,
      "finalizer": null,
      "handler": {
        "body": {
          "body": [
            {
              "end": 26,
              "expression": {
                "arguments": [
                  {
                    "end": 25,
                    "name": "e",
                    "range": [
                      24,
                      25,
                    ],
                    "start": 24,
                    "type": "Identifier",
                  },
                ],
                "callee": {
                  "end": 23,
                  "name": "say",
                  "range": [
                    20,
                    23,
                  ],
                  "start": 20,
                  "type": "Identifier",
                },
                "end": 26,
                "optional": false,
                "range": [
                  20,
                  26,
                ],
                "start": 20,
                "type": "CallExpression",
              },
              "range": [
                20,
                26,
              ],
              "start": 20,
              "type": "ExpressionStatement",
            },
          ],
          "end": 28,
          "range": [
            18,
            28,
          ],
          "start": 18,
          "type": "BlockStatement",
        },
        "end": 28,
        "param": {
          "end": 16,
          "name": "e",
          "range": [
            15,
            16,
          ],
          "start": 15,
          "type": "Identifier",
        },
        "range": [
          8,
          28,
        ],
        "start": 8,
        "type": "CatchClause",
      },
      "range": [
        0,
        28,
      ],
      "start": 0,
      "type": "TryStatement",
    },
  ],
  "end": 28,
  "range": [
    0,
    28,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > try { throw {x:10, z:["this is z"]}; }  catch({x, y, z:[z]}) {x;} 1`] = `
{
  "body": [
    {
      "block": {
        "body": [
          {
            "argument": {
              "end": 35,
              "properties": [
                {
                  "computed": false,
                  "end": 17,
                  "key": {
                    "end": 14,
                    "name": "x",
                    "range": [
                      13,
                      14,
                    ],
                    "start": 13,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    13,
                    17,
                  ],
                  "shorthand": false,
                  "start": 13,
                  "type": "Property",
                  "value": {
                    "end": 17,
                    "range": [
                      15,
                      17,
                    ],
                    "start": 15,
                    "type": "Literal",
                    "value": 10,
                  },
                },
                {
                  "computed": false,
                  "end": 34,
                  "key": {
                    "end": 20,
                    "name": "z",
                    "range": [
                      19,
                      20,
                    ],
                    "start": 19,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    19,
                    34,
                  ],
                  "shorthand": false,
                  "start": 19,
                  "type": "Property",
                  "value": {
                    "elements": [
                      {
                        "end": 33,
                        "range": [
                          22,
                          33,
                        ],
                        "start": 22,
                        "type": "Literal",
                        "value": "this is z",
                      },
                    ],
                    "end": 34,
                    "range": [
                      21,
                      34,
                    ],
                    "start": 21,
                    "type": "ArrayExpression",
                  },
                },
              ],
              "range": [
                12,
                35,
              ],
              "start": 12,
              "type": "ObjectExpression",
            },
            "end": 36,
            "range": [
              6,
              36,
            ],
            "start": 6,
            "type": "ThrowStatement",
          },
        ],
        "end": 38,
        "range": [
          4,
          38,
        ],
        "start": 4,
        "type": "BlockStatement",
      },
      "end": 65,
      "finalizer": null,
      "handler": {
        "body": {
          "body": [
            {
              "end": 64,
              "expression": {
                "end": 63,
                "name": "x",
                "range": [
                  62,
                  63,
                ],
                "start": 62,
                "type": "Identifier",
              },
              "range": [
                62,
                64,
              ],
              "start": 62,
              "type": "ExpressionStatement",
            },
          ],
          "end": 65,
          "range": [
            61,
            65,
          ],
          "start": 61,
          "type": "BlockStatement",
        },
        "end": 65,
        "param": {
          "end": 59,
          "properties": [
            {
              "computed": false,
              "end": 48,
              "key": {
                "end": 48,
                "name": "x",
                "range": [
                  47,
                  48,
                ],
                "start": 47,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                47,
                48,
              ],
              "shorthand": true,
              "start": 47,
              "type": "Property",
              "value": {
                "end": 48,
                "name": "x",
                "range": [
                  47,
                  48,
                ],
                "start": 47,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 51,
              "key": {
                "end": 51,
                "name": "y",
                "range": [
                  50,
                  51,
                ],
                "start": 50,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                50,
                51,
              ],
              "shorthand": true,
              "start": 50,
              "type": "Property",
              "value": {
                "end": 51,
                "name": "y",
                "range": [
                  50,
                  51,
                ],
                "start": 50,
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "end": 58,
              "key": {
                "end": 54,
                "name": "z",
                "range": [
                  53,
                  54,
                ],
                "start": 53,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                53,
                58,
              ],
              "shorthand": false,
              "start": 53,
              "type": "Property",
              "value": {
                "elements": [
                  {
                    "end": 57,
                    "name": "z",
                    "range": [
                      56,
                      57,
                    ],
                    "start": 56,
                    "type": "Identifier",
                  },
                ],
                "end": 58,
                "range": [
                  55,
                  58,
                ],
                "start": 55,
                "type": "ArrayPattern",
              },
            },
          ],
          "range": [
            46,
            59,
          ],
          "start": 46,
          "type": "ObjectPattern",
        },
        "range": [
          40,
          65,
        ],
        "start": 40,
        "type": "CatchClause",
      },
      "range": [
        0,
        65,
      ],
      "start": 0,
      "type": "TryStatement",
    },
  ],
  "end": 65,
  "range": [
    0,
    65,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > try {} catch {} 1`] = `
{
  "body": [
    {
      "block": {
        "body": [],
        "end": 6,
        "range": [
          4,
          6,
        ],
        "start": 4,
        "type": "BlockStatement",
      },
      "end": 15,
      "finalizer": null,
      "handler": {
        "body": {
          "body": [],
          "end": 15,
          "range": [
            13,
            15,
          ],
          "start": 13,
          "type": "BlockStatement",
        },
        "end": 15,
        "param": null,
        "range": [
          7,
          15,
        ],
        "start": 7,
        "type": "CatchClause",
      },
      "range": [
        0,
        15,
      ],
      "start": 0,
      "type": "TryStatement",
    },
  ],
  "end": 15,
  "range": [
    0,
    15,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > try {} catch({e=x}){} 1`] = `
{
  "body": [
    {
      "block": {
        "body": [],
        "end": 6,
        "range": [
          4,
          6,
        ],
        "start": 4,
        "type": "BlockStatement",
      },
      "end": 21,
      "finalizer": null,
      "handler": {
        "body": {
          "body": [],
          "end": 21,
          "range": [
            19,
            21,
          ],
          "start": 19,
          "type": "BlockStatement",
        },
        "end": 21,
        "param": {
          "end": 18,
          "properties": [
            {
              "computed": false,
              "end": 17,
              "key": {
                "end": 15,
                "name": "e",
                "range": [
                  14,
                  15,
                ],
                "start": 14,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                14,
                17,
              ],
              "shorthand": true,
              "start": 14,
              "type": "Property",
              "value": {
                "end": 17,
                "left": {
                  "end": 15,
                  "name": "e",
                  "range": [
                    14,
                    15,
                  ],
                  "start": 14,
                  "type": "Identifier",
                },
                "range": [
                  14,
                  17,
                ],
                "right": {
                  "end": 17,
                  "name": "x",
                  "range": [
                    16,
                    17,
                  ],
                  "start": 16,
                  "type": "Identifier",
                },
                "start": 14,
                "type": "AssignmentPattern",
              },
            },
          ],
          "range": [
            13,
            18,
          ],
          "start": 13,
          "type": "ObjectPattern",
        },
        "range": [
          7,
          21,
        ],
        "start": 7,
        "type": "CatchClause",
      },
      "range": [
        0,
        21,
      ],
      "start": 0,
      "type": "TryStatement",
    },
  ],
  "end": 21,
  "range": [
    0,
    21,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var [{a = 0}] = 0; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 17,
          "id": {
            "elements": [
              {
                "end": 12,
                "properties": [
                  {
                    "computed": false,
                    "end": 11,
                    "key": {
                      "end": 7,
                      "name": "a",
                      "range": [
                        6,
                        7,
                      ],
                      "start": 6,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      6,
                      11,
                    ],
                    "shorthand": true,
                    "start": 6,
                    "type": "Property",
                    "value": {
                      "end": 11,
                      "left": {
                        "end": 7,
                        "name": "a",
                        "range": [
                          6,
                          7,
                        ],
                        "start": 6,
                        "type": "Identifier",
                      },
                      "range": [
                        6,
                        11,
                      ],
                      "right": {
                        "end": 11,
                        "range": [
                          10,
                          11,
                        ],
                        "start": 10,
                        "type": "Literal",
                        "value": 0,
                      },
                      "start": 6,
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "range": [
                  5,
                  12,
                ],
                "start": 5,
                "type": "ObjectPattern",
              },
            ],
            "end": 13,
            "range": [
              4,
              13,
            ],
            "start": 4,
            "type": "ArrayPattern",
          },
          "init": {
            "end": 17,
            "range": [
              16,
              17,
            ],
            "start": 16,
            "type": "Literal",
            "value": 0,
          },
          "range": [
            4,
            17,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 18,
      "kind": "var",
      "range": [
        0,
        18,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 18,
  "range": [
    0,
    18,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var [{x : [{y:{z = 1}, z1 = 2}] }, {x2 = 3}, {x3 : {y3:[{z3 = 4}]}} ] = [{x:[{y:{}}]}, {}, {x3:{y3:[{}]}}]; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 106,
          "id": {
            "elements": [
              {
                "end": 33,
                "properties": [
                  {
                    "computed": false,
                    "end": 31,
                    "key": {
                      "end": 7,
                      "name": "x",
                      "range": [
                        6,
                        7,
                      ],
                      "start": 6,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      6,
                      31,
                    ],
                    "shorthand": false,
                    "start": 6,
                    "type": "Property",
                    "value": {
                      "elements": [
                        {
                          "end": 30,
                          "properties": [
                            {
                              "computed": false,
                              "end": 21,
                              "key": {
                                "end": 13,
                                "name": "y",
                                "range": [
                                  12,
                                  13,
                                ],
                                "start": 12,
                                "type": "Identifier",
                              },
                              "kind": "init",
                              "method": false,
                              "range": [
                                12,
                                21,
                              ],
                              "shorthand": false,
                              "start": 12,
                              "type": "Property",
                              "value": {
                                "end": 21,
                                "properties": [
                                  {
                                    "computed": false,
                                    "end": 20,
                                    "key": {
                                      "end": 16,
                                      "name": "z",
                                      "range": [
                                        15,
                                        16,
                                      ],
                                      "start": 15,
                                      "type": "Identifier",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "range": [
                                      15,
                                      20,
                                    ],
                                    "shorthand": true,
                                    "start": 15,
                                    "type": "Property",
                                    "value": {
                                      "end": 20,
                                      "left": {
                                        "end": 16,
                                        "name": "z",
                                        "range": [
                                          15,
                                          16,
                                        ],
                                        "start": 15,
                                        "type": "Identifier",
                                      },
                                      "range": [
                                        15,
                                        20,
                                      ],
                                      "right": {
                                        "end": 20,
                                        "range": [
                                          19,
                                          20,
                                        ],
                                        "start": 19,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "start": 15,
                                      "type": "AssignmentPattern",
                                    },
                                  },
                                ],
                                "range": [
                                  14,
                                  21,
                                ],
                                "start": 14,
                                "type": "ObjectPattern",
                              },
                            },
                            {
                              "computed": false,
                              "end": 29,
                              "key": {
                                "end": 25,
                                "name": "z1",
                                "range": [
                                  23,
                                  25,
                                ],
                                "start": 23,
                                "type": "Identifier",
                              },
                              "kind": "init",
                              "method": false,
                              "range": [
                                23,
                                29,
                              ],
                              "shorthand": true,
                              "start": 23,
                              "type": "Property",
                              "value": {
                                "end": 29,
                                "left": {
                                  "end": 25,
                                  "name": "z1",
                                  "range": [
                                    23,
                                    25,
                                  ],
                                  "start": 23,
                                  "type": "Identifier",
                                },
                                "range": [
                                  23,
                                  29,
                                ],
                                "right": {
                                  "end": 29,
                                  "range": [
                                    28,
                                    29,
                                  ],
                                  "start": 28,
                                  "type": "Literal",
                                  "value": 2,
                                },
                                "start": 23,
                                "type": "AssignmentPattern",
                              },
                            },
                          ],
                          "range": [
                            11,
                            30,
                          ],
                          "start": 11,
                          "type": "ObjectPattern",
                        },
                      ],
                      "end": 31,
                      "range": [
                        10,
                        31,
                      ],
                      "start": 10,
                      "type": "ArrayPattern",
                    },
                  },
                ],
                "range": [
                  5,
                  33,
                ],
                "start": 5,
                "type": "ObjectPattern",
              },
              {
                "end": 43,
                "properties": [
                  {
                    "computed": false,
                    "end": 42,
                    "key": {
                      "end": 38,
                      "name": "x2",
                      "range": [
                        36,
                        38,
                      ],
                      "start": 36,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      36,
                      42,
                    ],
                    "shorthand": true,
                    "start": 36,
                    "type": "Property",
                    "value": {
                      "end": 42,
                      "left": {
                        "end": 38,
                        "name": "x2",
                        "range": [
                          36,
                          38,
                        ],
                        "start": 36,
                        "type": "Identifier",
                      },
                      "range": [
                        36,
                        42,
                      ],
                      "right": {
                        "end": 42,
                        "range": [
                          41,
                          42,
                        ],
                        "start": 41,
                        "type": "Literal",
                        "value": 3,
                      },
                      "start": 36,
                      "type": "AssignmentPattern",
                    },
                  },
                ],
                "range": [
                  35,
                  43,
                ],
                "start": 35,
                "type": "ObjectPattern",
              },
              {
                "end": 67,
                "properties": [
                  {
                    "computed": false,
                    "end": 66,
                    "key": {
                      "end": 48,
                      "name": "x3",
                      "range": [
                        46,
                        48,
                      ],
                      "start": 46,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      46,
                      66,
                    ],
                    "shorthand": false,
                    "start": 46,
                    "type": "Property",
                    "value": {
                      "end": 66,
                      "properties": [
                        {
                          "computed": false,
                          "end": 65,
                          "key": {
                            "end": 54,
                            "name": "y3",
                            "range": [
                              52,
                              54,
                            ],
                            "start": 52,
                            "type": "Identifier",
                          },
                          "kind": "init",
                          "method": false,
                          "range": [
                            52,
                            65,
                          ],
                          "shorthand": false,
                          "start": 52,
                          "type": "Property",
                          "value": {
                            "elements": [
                              {
                                "end": 64,
                                "properties": [
                                  {
                                    "computed": false,
                                    "end": 63,
                                    "key": {
                                      "end": 59,
                                      "name": "z3",
                                      "range": [
                                        57,
                                        59,
                                      ],
                                      "start": 57,
                                      "type": "Identifier",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "range": [
                                      57,
                                      63,
                                    ],
                                    "shorthand": true,
                                    "start": 57,
                                    "type": "Property",
                                    "value": {
                                      "end": 63,
                                      "left": {
                                        "end": 59,
                                        "name": "z3",
                                        "range": [
                                          57,
                                          59,
                                        ],
                                        "start": 57,
                                        "type": "Identifier",
                                      },
                                      "range": [
                                        57,
                                        63,
                                      ],
                                      "right": {
                                        "end": 63,
                                        "range": [
                                          62,
                                          63,
                                        ],
                                        "start": 62,
                                        "type": "Literal",
                                        "value": 4,
                                      },
                                      "start": 57,
                                      "type": "AssignmentPattern",
                                    },
                                  },
                                ],
                                "range": [
                                  56,
                                  64,
                                ],
                                "start": 56,
                                "type": "ObjectPattern",
                              },
                            ],
                            "end": 65,
                            "range": [
                              55,
                              65,
                            ],
                            "start": 55,
                            "type": "ArrayPattern",
                          },
                        },
                      ],
                      "range": [
                        51,
                        66,
                      ],
                      "start": 51,
                      "type": "ObjectPattern",
                    },
                  },
                ],
                "range": [
                  45,
                  67,
                ],
                "start": 45,
                "type": "ObjectPattern",
              },
            ],
            "end": 69,
            "range": [
              4,
              69,
            ],
            "start": 4,
            "type": "ArrayPattern",
          },
          "init": {
            "elements": [
              {
                "end": 85,
                "properties": [
                  {
                    "computed": false,
                    "end": 84,
                    "key": {
                      "end": 75,
                      "name": "x",
                      "range": [
                        74,
                        75,
                      ],
                      "start": 74,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      74,
                      84,
                    ],
                    "shorthand": false,
                    "start": 74,
                    "type": "Property",
                    "value": {
                      "elements": [
                        {
                          "end": 83,
                          "properties": [
                            {
                              "computed": false,
                              "end": 82,
                              "key": {
                                "end": 79,
                                "name": "y",
                                "range": [
                                  78,
                                  79,
                                ],
                                "start": 78,
                                "type": "Identifier",
                              },
                              "kind": "init",
                              "method": false,
                              "range": [
                                78,
                                82,
                              ],
                              "shorthand": false,
                              "start": 78,
                              "type": "Property",
                              "value": {
                                "end": 82,
                                "properties": [],
                                "range": [
                                  80,
                                  82,
                                ],
                                "start": 80,
                                "type": "ObjectExpression",
                              },
                            },
                          ],
                          "range": [
                            77,
                            83,
                          ],
                          "start": 77,
                          "type": "ObjectExpression",
                        },
                      ],
                      "end": 84,
                      "range": [
                        76,
                        84,
                      ],
                      "start": 76,
                      "type": "ArrayExpression",
                    },
                  },
                ],
                "range": [
                  73,
                  85,
                ],
                "start": 73,
                "type": "ObjectExpression",
              },
              {
                "end": 89,
                "properties": [],
                "range": [
                  87,
                  89,
                ],
                "start": 87,
                "type": "ObjectExpression",
              },
              {
                "end": 105,
                "properties": [
                  {
                    "computed": false,
                    "end": 104,
                    "key": {
                      "end": 94,
                      "name": "x3",
                      "range": [
                        92,
                        94,
                      ],
                      "start": 92,
                      "type": "Identifier",
                    },
                    "kind": "init",
                    "method": false,
                    "range": [
                      92,
                      104,
                    ],
                    "shorthand": false,
                    "start": 92,
                    "type": "Property",
                    "value": {
                      "end": 104,
                      "properties": [
                        {
                          "computed": false,
                          "end": 103,
                          "key": {
                            "end": 98,
                            "name": "y3",
                            "range": [
                              96,
                              98,
                            ],
                            "start": 96,
                            "type": "Identifier",
                          },
                          "kind": "init",
                          "method": false,
                          "range": [
                            96,
                            103,
                          ],
                          "shorthand": false,
                          "start": 96,
                          "type": "Property",
                          "value": {
                            "elements": [
                              {
                                "end": 102,
                                "properties": [],
                                "range": [
                                  100,
                                  102,
                                ],
                                "start": 100,
                                "type": "ObjectExpression",
                              },
                            ],
                            "end": 103,
                            "range": [
                              99,
                              103,
                            ],
                            "start": 99,
                            "type": "ArrayExpression",
                          },
                        },
                      ],
                      "range": [
                        95,
                        104,
                      ],
                      "start": 95,
                      "type": "ObjectExpression",
                    },
                  },
                ],
                "range": [
                  91,
                  105,
                ],
                "start": 91,
                "type": "ObjectExpression",
              },
            ],
            "end": 106,
            "range": [
              72,
              106,
            ],
            "start": 72,
            "type": "ArrayExpression",
          },
          "range": [
            4,
            106,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 107,
      "kind": "var",
      "range": [
        0,
        107,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 107,
  "range": [
    0,
    107,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var [x, , [, z]] = [1,2,[3,4]]; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 30,
          "id": {
            "elements": [
              {
                "end": 6,
                "name": "x",
                "range": [
                  5,
                  6,
                ],
                "start": 5,
                "type": "Identifier",
              },
              null,
              {
                "elements": [
                  null,
                  {
                    "end": 14,
                    "name": "z",
                    "range": [
                      13,
                      14,
                    ],
                    "start": 13,
                    "type": "Identifier",
                  },
                ],
                "end": 15,
                "range": [
                  10,
                  15,
                ],
                "start": 10,
                "type": "ArrayPattern",
              },
            ],
            "end": 16,
            "range": [
              4,
              16,
            ],
            "start": 4,
            "type": "ArrayPattern",
          },
          "init": {
            "elements": [
              {
                "end": 21,
                "range": [
                  20,
                  21,
                ],
                "start": 20,
                "type": "Literal",
                "value": 1,
              },
              {
                "end": 23,
                "range": [
                  22,
                  23,
                ],
                "start": 22,
                "type": "Literal",
                "value": 2,
              },
              {
                "elements": [
                  {
                    "end": 26,
                    "range": [
                      25,
                      26,
                    ],
                    "start": 25,
                    "type": "Literal",
                    "value": 3,
                  },
                  {
                    "end": 28,
                    "range": [
                      27,
                      28,
                    ],
                    "start": 27,
                    "type": "Literal",
                    "value": 4,
                  },
                ],
                "end": 29,
                "range": [
                  24,
                  29,
                ],
                "start": 24,
                "type": "ArrayExpression",
              },
            ],
            "end": 30,
            "range": [
              19,
              30,
            ],
            "start": 19,
            "type": "ArrayExpression",
          },
          "range": [
            4,
            30,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 31,
      "kind": "var",
      "range": [
        0,
        31,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 31,
  "range": [
    0,
    31,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var {x: y, z: { a: b } } = { x: "3", z: { a: "b" } }; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 52,
          "id": {
            "end": 24,
            "properties": [
              {
                "computed": false,
                "end": 9,
                "key": {
                  "end": 6,
                  "name": "x",
                  "range": [
                    5,
                    6,
                  ],
                  "start": 5,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  5,
                  9,
                ],
                "shorthand": false,
                "start": 5,
                "type": "Property",
                "value": {
                  "end": 9,
                  "name": "y",
                  "range": [
                    8,
                    9,
                  ],
                  "start": 8,
                  "type": "Identifier",
                },
              },
              {
                "computed": false,
                "end": 22,
                "key": {
                  "end": 12,
                  "name": "z",
                  "range": [
                    11,
                    12,
                  ],
                  "start": 11,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  11,
                  22,
                ],
                "shorthand": false,
                "start": 11,
                "type": "Property",
                "value": {
                  "end": 22,
                  "properties": [
                    {
                      "computed": false,
                      "end": 20,
                      "key": {
                        "end": 17,
                        "name": "a",
                        "range": [
                          16,
                          17,
                        ],
                        "start": 16,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        16,
                        20,
                      ],
                      "shorthand": false,
                      "start": 16,
                      "type": "Property",
                      "value": {
                        "end": 20,
                        "name": "b",
                        "range": [
                          19,
                          20,
                        ],
                        "start": 19,
                        "type": "Identifier",
                      },
                    },
                  ],
                  "range": [
                    14,
                    22,
                  ],
                  "start": 14,
                  "type": "ObjectPattern",
                },
              },
            ],
            "range": [
              4,
              24,
            ],
            "start": 4,
            "type": "ObjectPattern",
          },
          "init": {
            "end": 52,
            "properties": [
              {
                "computed": false,
                "end": 35,
                "key": {
                  "end": 30,
                  "name": "x",
                  "range": [
                    29,
                    30,
                  ],
                  "start": 29,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  29,
                  35,
                ],
                "shorthand": false,
                "start": 29,
                "type": "Property",
                "value": {
                  "end": 35,
                  "range": [
                    32,
                    35,
                  ],
                  "raw": ""3"",
                  "start": 32,
                  "type": "Literal",
                  "value": "3",
                },
              },
              {
                "computed": false,
                "end": 50,
                "key": {
                  "end": 38,
                  "name": "z",
                  "range": [
                    37,
                    38,
                  ],
                  "start": 37,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": false,
                "range": [
                  37,
                  50,
                ],
                "shorthand": false,
                "start": 37,
                "type": "Property",
                "value": {
                  "end": 50,
                  "properties": [
                    {
                      "computed": false,
                      "end": 48,
                      "key": {
                        "end": 43,
                        "name": "a",
                        "range": [
                          42,
                          43,
                        ],
                        "start": 42,
                        "type": "Identifier",
                      },
                      "kind": "init",
                      "method": false,
                      "range": [
                        42,
                        48,
                      ],
                      "shorthand": false,
                      "start": 42,
                      "type": "Property",
                      "value": {
                        "end": 48,
                        "range": [
                          45,
                          48,
                        ],
                        "raw": ""b"",
                        "start": 45,
                        "type": "Literal",
                        "value": "b",
                      },
                    },
                  ],
                  "range": [
                    40,
                    50,
                  ],
                  "start": 40,
                  "type": "ObjectExpression",
                },
              },
            ],
            "range": [
              27,
              52,
            ],
            "start": 27,
            "type": "ObjectExpression",
          },
          "range": [
            4,
            52,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 53,
      "kind": "var",
      "range": [
        0,
        53,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 53,
  "range": [
    0,
    53,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var a = [1], i = 0; ({x:a[i++]} = {}); 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 11,
          "id": {
            "end": 5,
            "name": "a",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "elements": [
              {
                "end": 10,
                "range": [
                  9,
                  10,
                ],
                "start": 9,
                "type": "Literal",
                "value": 1,
              },
            ],
            "end": 11,
            "range": [
              8,
              11,
            ],
            "start": 8,
            "type": "ArrayExpression",
          },
          "range": [
            4,
            11,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
        {
          "end": 18,
          "id": {
            "end": 14,
            "name": "i",
            "range": [
              13,
              14,
            ],
            "start": 13,
            "type": "Identifier",
          },
          "init": {
            "end": 18,
            "range": [
              17,
              18,
            ],
            "start": 17,
            "type": "Literal",
            "value": 0,
          },
          "range": [
            13,
            18,
          ],
          "start": 13,
          "type": "VariableDeclarator",
        },
      ],
      "end": 19,
      "kind": "var",
      "range": [
        0,
        19,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
    {
      "end": 38,
      "expression": {
        "end": 36,
        "left": {
          "end": 31,
          "properties": [
            {
              "computed": false,
              "end": 30,
              "key": {
                "end": 23,
                "name": "x",
                "range": [
                  22,
                  23,
                ],
                "start": 22,
                "type": "Identifier",
              },
              "kind": "init",
              "method": false,
              "range": [
                22,
                30,
              ],
              "shorthand": false,
              "start": 22,
              "type": "Property",
              "value": {
                "computed": true,
                "end": 30,
                "object": {
                  "end": 25,
                  "name": "a",
                  "range": [
                    24,
                    25,
                  ],
                  "start": 24,
                  "type": "Identifier",
                },
                "optional": false,
                "property": {
                  "argument": {
                    "end": 27,
                    "name": "i",
                    "range": [
                      26,
                      27,
                    ],
                    "start": 26,
                    "type": "Identifier",
                  },
                  "end": 29,
                  "operator": "++",
                  "prefix": false,
                  "range": [
                    26,
                    29,
                  ],
                  "start": 26,
                  "type": "UpdateExpression",
                },
                "range": [
                  24,
                  30,
                ],
                "start": 24,
                "type": "MemberExpression",
              },
            },
          ],
          "range": [
            21,
            31,
          ],
          "start": 21,
          "type": "ObjectPattern",
        },
        "operator": "=",
        "range": [
          21,
          36,
        ],
        "right": {
          "end": 36,
          "properties": [],
          "range": [
            34,
            36,
          ],
          "start": 34,
          "type": "ObjectExpression",
        },
        "start": 21,
        "type": "AssignmentExpression",
      },
      "range": [
        20,
        38,
      ],
      "start": 20,
      "type": "ExpressionStatement",
    },
  ],
  "end": 38,
  "range": [
    0,
    38,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var a 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 5,
          "id": {
            "end": 5,
            "name": "a",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": null,
          "range": [
            4,
            5,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 5,
      "kind": "var",
      "range": [
        0,
        5,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 5,
  "range": [
    0,
    5,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var e = 1; ( {tuvwxy  = (((  {}   =  1 )))} = (e)) => {  try{ } catch(e) {}} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 9,
          "id": {
            "end": 5,
            "name": "e",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "end": 9,
            "range": [
              8,
              9,
            ],
            "start": 8,
            "type": "Literal",
            "value": 1,
          },
          "range": [
            4,
            9,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 10,
      "kind": "var",
      "range": [
        0,
        10,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
    {
      "end": 76,
      "expression": {
        "async": false,
        "body": {
          "body": [
            {
              "block": {
                "body": [],
                "end": 63,
                "range": [
                  60,
                  63,
                ],
                "start": 60,
                "type": "BlockStatement",
              },
              "end": 75,
              "finalizer": null,
              "handler": {
                "body": {
                  "body": [],
                  "end": 75,
                  "range": [
                    73,
                    75,
                  ],
                  "start": 73,
                  "type": "BlockStatement",
                },
                "end": 75,
                "param": {
                  "end": 71,
                  "name": "e",
                  "range": [
                    70,
                    71,
                  ],
                  "start": 70,
                  "type": "Identifier",
                },
                "range": [
                  64,
                  75,
                ],
                "start": 64,
                "type": "CatchClause",
              },
              "range": [
                57,
                75,
              ],
              "start": 57,
              "type": "TryStatement",
            },
          ],
          "end": 76,
          "range": [
            54,
            76,
          ],
          "start": 54,
          "type": "BlockStatement",
        },
        "end": 76,
        "expression": false,
        "generator": false,
        "params": [
          {
            "end": 49,
            "left": {
              "end": 43,
              "properties": [
                {
                  "computed": false,
                  "end": 42,
                  "key": {
                    "end": 20,
                    "name": "tuvwxy",
                    "range": [
                      14,
                      20,
                    ],
                    "start": 14,
                    "type": "Identifier",
                  },
                  "kind": "init",
                  "method": false,
                  "range": [
                    14,
                    42,
                  ],
                  "shorthand": true,
                  "start": 14,
                  "type": "Property",
                  "value": {
                    "end": 42,
                    "left": {
                      "end": 20,
                      "name": "tuvwxy",
                      "range": [
                        14,
                        20,
                      ],
                      "start": 14,
                      "type": "Identifier",
                    },
                    "range": [
                      14,
                      42,
                    ],
                    "right": {
                      "end": 38,
                      "left": {
                        "end": 31,
                        "properties": [],
                        "range": [
                          29,
                          31,
                        ],
                        "start": 29,
                        "type": "ObjectPattern",
                      },
                      "operator": "=",
                      "range": [
                        29,
                        38,
                      ],
                      "right": {
                        "end": 38,
                        "range": [
                          37,
                          38,
                        ],
                        "start": 37,
                        "type": "Literal",
                        "value": 1,
                      },
                      "start": 29,
                      "type": "AssignmentExpression",
                    },
                    "start": 14,
                    "type": "AssignmentPattern",
                  },
                },
              ],
              "range": [
                13,
                43,
              ],
              "start": 13,
              "type": "ObjectPattern",
            },
            "range": [
              13,
              49,
            ],
            "right": {
              "end": 48,
              "name": "e",
              "range": [
                47,
                48,
              ],
              "start": 47,
              "type": "Identifier",
            },
            "start": 13,
            "type": "AssignmentPattern",
          },
        ],
        "range": [
          11,
          76,
        ],
        "start": 11,
        "type": "ArrowFunctionExpression",
      },
      "range": [
        11,
        76,
      ],
      "start": 11,
      "type": "ExpressionStatement",
    },
  ],
  "end": 76,
  "range": [
    0,
    76,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var private = [["hello"]][0][0]; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 31,
          "id": {
            "end": 11,
            "name": "private",
            "range": [
              4,
              11,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "computed": true,
            "end": 31,
            "object": {
              "computed": true,
              "end": 28,
              "object": {
                "elements": [
                  {
                    "elements": [
                      {
                        "end": 23,
                        "range": [
                          16,
                          23,
                        ],
                        "start": 16,
                        "type": "Literal",
                        "value": "hello",
                      },
                    ],
                    "end": 24,
                    "range": [
                      15,
                      24,
                    ],
                    "start": 15,
                    "type": "ArrayExpression",
                  },
                ],
                "end": 25,
                "range": [
                  14,
                  25,
                ],
                "start": 14,
                "type": "ArrayExpression",
              },
              "optional": false,
              "property": {
                "end": 27,
                "range": [
                  26,
                  27,
                ],
                "start": 26,
                "type": "Literal",
                "value": 0,
              },
              "range": [
                14,
                28,
              ],
              "start": 14,
              "type": "MemberExpression",
            },
            "optional": false,
            "property": {
              "end": 30,
              "range": [
                29,
                30,
              ],
              "start": 29,
              "type": "Literal",
              "value": 0,
            },
            "range": [
              14,
              31,
            ],
            "start": 14,
            "type": "MemberExpression",
          },
          "range": [
            4,
            31,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 32,
      "kind": "var",
      "range": [
        0,
        32,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 32,
  "range": [
    0,
    32,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var probeBefore = function() { return x; };
var probeTest, probeIncr, probeBody;
var run = true;
for (
    var _ = eval('var x = 1;');
    run && (probeTest = function() { return x; });
    probeIncr = function() { return x; }
  )
  probeBody = function() { return x; }, run = false;
var x = 2; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 42,
          "id": {
            "end": 15,
            "name": "probeBefore",
            "range": [
              4,
              15,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "async": false,
            "body": {
              "body": [
                {
                  "argument": {
                    "end": 39,
                    "name": "x",
                    "range": [
                      38,
                      39,
                    ],
                    "start": 38,
                    "type": "Identifier",
                  },
                  "end": 40,
                  "range": [
                    31,
                    40,
                  ],
                  "start": 31,
                  "type": "ReturnStatement",
                },
              ],
              "end": 42,
              "range": [
                29,
                42,
              ],
              "start": 29,
              "type": "BlockStatement",
            },
            "end": 42,
            "generator": false,
            "id": null,
            "params": [],
            "range": [
              18,
              42,
            ],
            "start": 18,
            "type": "FunctionExpression",
          },
          "range": [
            4,
            42,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 43,
      "kind": "var",
      "range": [
        0,
        43,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
    {
      "declarations": [
        {
          "end": 57,
          "id": {
            "end": 57,
            "name": "probeTest",
            "range": [
              48,
              57,
            ],
            "start": 48,
            "type": "Identifier",
          },
          "init": null,
          "range": [
            48,
            57,
          ],
          "start": 48,
          "type": "VariableDeclarator",
        },
        {
          "end": 68,
          "id": {
            "end": 68,
            "name": "probeIncr",
            "range": [
              59,
              68,
            ],
            "start": 59,
            "type": "Identifier",
          },
          "init": null,
          "range": [
            59,
            68,
          ],
          "start": 59,
          "type": "VariableDeclarator",
        },
        {
          "end": 79,
          "id": {
            "end": 79,
            "name": "probeBody",
            "range": [
              70,
              79,
            ],
            "start": 70,
            "type": "Identifier",
          },
          "init": null,
          "range": [
            70,
            79,
          ],
          "start": 70,
          "type": "VariableDeclarator",
        },
      ],
      "end": 80,
      "kind": "var",
      "range": [
        44,
        80,
      ],
      "start": 44,
      "type": "VariableDeclaration",
    },
    {
      "declarations": [
        {
          "end": 95,
          "id": {
            "end": 88,
            "name": "run",
            "range": [
              85,
              88,
            ],
            "start": 85,
            "type": "Identifier",
          },
          "init": {
            "end": 95,
            "range": [
              91,
              95,
            ],
            "start": 91,
            "type": "Literal",
            "value": true,
          },
          "range": [
            85,
            95,
          ],
          "start": 85,
          "type": "VariableDeclarator",
        },
      ],
      "end": 96,
      "kind": "var",
      "range": [
        81,
        96,
      ],
      "start": 81,
      "type": "VariableDeclaration",
    },
    {
      "body": {
        "end": 283,
        "expression": {
          "end": 282,
          "expressions": [
            {
              "end": 269,
              "left": {
                "end": 242,
                "name": "probeBody",
                "range": [
                  233,
                  242,
                ],
                "start": 233,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                233,
                269,
              ],
              "right": {
                "async": false,
                "body": {
                  "body": [
                    {
                      "argument": {
                        "end": 266,
                        "name": "x",
                        "range": [
                          265,
                          266,
                        ],
                        "start": 265,
                        "type": "Identifier",
                      },
                      "end": 267,
                      "range": [
                        258,
                        267,
                      ],
                      "start": 258,
                      "type": "ReturnStatement",
                    },
                  ],
                  "end": 269,
                  "range": [
                    256,
                    269,
                  ],
                  "start": 256,
                  "type": "BlockStatement",
                },
                "end": 269,
                "generator": false,
                "id": null,
                "params": [],
                "range": [
                  245,
                  269,
                ],
                "start": 245,
                "type": "FunctionExpression",
              },
              "start": 233,
              "type": "AssignmentExpression",
            },
            {
              "end": 282,
              "left": {
                "end": 274,
                "name": "run",
                "range": [
                  271,
                  274,
                ],
                "start": 271,
                "type": "Identifier",
              },
              "operator": "=",
              "range": [
                271,
                282,
              ],
              "right": {
                "end": 282,
                "range": [
                  277,
                  282,
                ],
                "start": 277,
                "type": "Literal",
                "value": false,
              },
              "start": 271,
              "type": "AssignmentExpression",
            },
          ],
          "range": [
            233,
            282,
          ],
          "start": 233,
          "type": "SequenceExpression",
        },
        "range": [
          233,
          283,
        ],
        "start": 233,
        "type": "ExpressionStatement",
      },
      "end": 283,
      "init": {
        "declarations": [
          {
            "end": 133,
            "id": {
              "end": 112,
              "name": "_",
              "range": [
                111,
                112,
              ],
              "start": 111,
              "type": "Identifier",
            },
            "init": {
              "arguments": [
                {
                  "end": 132,
                  "range": [
                    120,
                    132,
                  ],
                  "start": 120,
                  "type": "Literal",
                  "value": "var x = 1;",
                },
              ],
              "callee": {
                "end": 119,
                "name": "eval",
                "range": [
                  115,
                  119,
                ],
                "start": 115,
                "type": "Identifier",
              },
              "end": 133,
              "optional": false,
              "range": [
                115,
                133,
              ],
              "start": 115,
              "type": "CallExpression",
            },
            "range": [
              111,
              133,
            ],
            "start": 111,
            "type": "VariableDeclarator",
          },
        ],
        "end": 133,
        "kind": "var",
        "range": [
          107,
          133,
        ],
        "start": 107,
        "type": "VariableDeclaration",
      },
      "range": [
        97,
        283,
      ],
      "start": 97,
      "test": {
        "end": 184,
        "left": {
          "end": 142,
          "name": "run",
          "range": [
            139,
            142,
          ],
          "start": 139,
          "type": "Identifier",
        },
        "operator": "&&",
        "range": [
          139,
          184,
        ],
        "right": {
          "end": 183,
          "left": {
            "end": 156,
            "name": "probeTest",
            "range": [
              147,
              156,
            ],
            "start": 147,
            "type": "Identifier",
          },
          "operator": "=",
          "range": [
            147,
            183,
          ],
          "right": {
            "async": false,
            "body": {
              "body": [
                {
                  "argument": {
                    "end": 180,
                    "name": "x",
                    "range": [
                      179,
                      180,
                    ],
                    "start": 179,
                    "type": "Identifier",
                  },
                  "end": 181,
                  "range": [
                    172,
                    181,
                  ],
                  "start": 172,
                  "type": "ReturnStatement",
                },
              ],
              "end": 183,
              "range": [
                170,
                183,
              ],
              "start": 170,
              "type": "BlockStatement",
            },
            "end": 183,
            "generator": false,
            "id": null,
            "params": [],
            "range": [
              159,
              183,
            ],
            "start": 159,
            "type": "FunctionExpression",
          },
          "start": 147,
          "type": "AssignmentExpression",
        },
        "start": 139,
        "type": "LogicalExpression",
      },
      "type": "ForStatement",
      "update": {
        "end": 226,
        "left": {
          "end": 199,
          "name": "probeIncr",
          "range": [
            190,
            199,
          ],
          "start": 190,
          "type": "Identifier",
        },
        "operator": "=",
        "range": [
          190,
          226,
        ],
        "right": {
          "async": false,
          "body": {
            "body": [
              {
                "argument": {
                  "end": 223,
                  "name": "x",
                  "range": [
                    222,
                    223,
                  ],
                  "start": 222,
                  "type": "Identifier",
                },
                "end": 224,
                "range": [
                  215,
                  224,
                ],
                "start": 215,
                "type": "ReturnStatement",
              },
            ],
            "end": 226,
            "range": [
              213,
              226,
            ],
            "start": 213,
            "type": "BlockStatement",
          },
          "end": 226,
          "generator": false,
          "id": null,
          "params": [],
          "range": [
            202,
            226,
          ],
          "start": 202,
          "type": "FunctionExpression",
        },
        "start": 190,
        "type": "AssignmentExpression",
      },
    },
    {
      "declarations": [
        {
          "end": 293,
          "id": {
            "end": 289,
            "name": "x",
            "range": [
              288,
              289,
            ],
            "start": 288,
            "type": "Identifier",
          },
          "init": {
            "end": 293,
            "range": [
              292,
              293,
            ],
            "start": 292,
            "type": "Literal",
            "value": 2,
          },
          "range": [
            288,
            293,
          ],
          "start": 288,
          "type": "VariableDeclarator",
        },
      ],
      "end": 294,
      "kind": "var",
      "range": [
        284,
        294,
      ],
      "start": 284,
      "type": "VariableDeclaration",
    },
  ],
  "end": 294,
  "range": [
    0,
    294,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var x = (new Foo).x; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 19,
          "id": {
            "end": 5,
            "name": "x",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "computed": false,
            "end": 19,
            "object": {
              "arguments": [],
              "callee": {
                "end": 16,
                "name": "Foo",
                "range": [
                  13,
                  16,
                ],
                "start": 13,
                "type": "Identifier",
              },
              "end": 16,
              "range": [
                9,
                16,
              ],
              "start": 9,
              "type": "NewExpression",
            },
            "optional": false,
            "property": {
              "end": 19,
              "name": "x",
              "range": [
                18,
                19,
              ],
              "start": 18,
              "type": "Identifier",
            },
            "range": [
              8,
              19,
            ],
            "start": 8,
            "type": "MemberExpression",
          },
          "range": [
            4,
            19,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 20,
      "kind": "var",
      "range": [
        0,
        20,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 20,
  "range": [
    0,
    20,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > var x = {
  baz(a = 10) {},
  foo(a, b = 10) {},
  toast(a, b = 10, c) {}
}; 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "end": 75,
          "id": {
            "end": 5,
            "name": "x",
            "range": [
              4,
              5,
            ],
            "start": 4,
            "type": "Identifier",
          },
          "init": {
            "end": 75,
            "properties": [
              {
                "computed": false,
                "end": 26,
                "key": {
                  "end": 15,
                  "name": "baz",
                  "range": [
                    12,
                    15,
                  ],
                  "start": 12,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "range": [
                  12,
                  26,
                ],
                "shorthand": false,
                "start": 12,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "end": 26,
                    "range": [
                      24,
                      26,
                    ],
                    "start": 24,
                    "type": "BlockStatement",
                  },
                  "end": 26,
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "end": 22,
                      "left": {
                        "end": 17,
                        "name": "a",
                        "range": [
                          16,
                          17,
                        ],
                        "start": 16,
                        "type": "Identifier",
                      },
                      "range": [
                        16,
                        22,
                      ],
                      "right": {
                        "end": 22,
                        "range": [
                          20,
                          22,
                        ],
                        "start": 20,
                        "type": "Literal",
                        "value": 10,
                      },
                      "start": 16,
                      "type": "AssignmentPattern",
                    },
                  ],
                  "range": [
                    15,
                    26,
                  ],
                  "start": 15,
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "end": 47,
                "key": {
                  "end": 33,
                  "name": "foo",
                  "range": [
                    30,
                    33,
                  ],
                  "start": 30,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "range": [
                  30,
                  47,
                ],
                "shorthand": false,
                "start": 30,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "end": 47,
                    "range": [
                      45,
                      47,
                    ],
                    "start": 45,
                    "type": "BlockStatement",
                  },
                  "end": 47,
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "end": 35,
                      "name": "a",
                      "range": [
                        34,
                        35,
                      ],
                      "start": 34,
                      "type": "Identifier",
                    },
                    {
                      "end": 43,
                      "left": {
                        "end": 38,
                        "name": "b",
                        "range": [
                          37,
                          38,
                        ],
                        "start": 37,
                        "type": "Identifier",
                      },
                      "range": [
                        37,
                        43,
                      ],
                      "right": {
                        "end": 43,
                        "range": [
                          41,
                          43,
                        ],
                        "start": 41,
                        "type": "Literal",
                        "value": 10,
                      },
                      "start": 37,
                      "type": "AssignmentPattern",
                    },
                  ],
                  "range": [
                    33,
                    47,
                  ],
                  "start": 33,
                  "type": "FunctionExpression",
                },
              },
              {
                "computed": false,
                "end": 73,
                "key": {
                  "end": 56,
                  "name": "toast",
                  "range": [
                    51,
                    56,
                  ],
                  "start": 51,
                  "type": "Identifier",
                },
                "kind": "init",
                "method": true,
                "range": [
                  51,
                  73,
                ],
                "shorthand": false,
                "start": 51,
                "type": "Property",
                "value": {
                  "async": false,
                  "body": {
                    "body": [],
                    "end": 73,
                    "range": [
                      71,
                      73,
                    ],
                    "start": 71,
                    "type": "BlockStatement",
                  },
                  "end": 73,
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "end": 58,
                      "name": "a",
                      "range": [
                        57,
                        58,
                      ],
                      "start": 57,
                      "type": "Identifier",
                    },
                    {
                      "end": 66,
                      "left": {
                        "end": 61,
                        "name": "b",
                        "range": [
                          60,
                          61,
                        ],
                        "start": 60,
                        "type": "Identifier",
                      },
                      "range": [
                        60,
                        66,
                      ],
                      "right": {
                        "end": 66,
                        "range": [
                          64,
                          66,
                        ],
                        "start": 64,
                        "type": "Literal",
                        "value": 10,
                      },
                      "start": 60,
                      "type": "AssignmentPattern",
                    },
                    {
                      "end": 69,
                      "name": "c",
                      "range": [
                        68,
                        69,
                      ],
                      "start": 68,
                      "type": "Identifier",
                    },
                  ],
                  "range": [
                    56,
                    73,
                  ],
                  "start": 56,
                  "type": "FunctionExpression",
                },
              },
            ],
            "range": [
              8,
              75,
            ],
            "start": 8,
            "type": "ObjectExpression",
          },
          "range": [
            4,
            75,
          ],
          "start": 4,
          "type": "VariableDeclarator",
        },
      ],
      "end": 76,
      "kind": "var",
      "range": [
        0,
        76,
      ],
      "start": 0,
      "type": "VariableDeclaration",
    },
  ],
  "end": 76,
  "range": [
    0,
    76,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > while (i-->1) {} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "end": 16,
        "range": [
          14,
          16,
        ],
        "start": 14,
        "type": "BlockStatement",
      },
      "end": 16,
      "range": [
        0,
        16,
      ],
      "start": 0,
      "test": {
        "end": 12,
        "left": {
          "argument": {
            "end": 8,
            "name": "i",
            "range": [
              7,
              8,
            ],
            "start": 7,
            "type": "Identifier",
          },
          "end": 10,
          "operator": "--",
          "prefix": false,
          "range": [
            7,
            10,
          ],
          "start": 7,
          "type": "UpdateExpression",
        },
        "operator": ">",
        "range": [
          7,
          12,
        ],
        "right": {
          "end": 12,
          "range": [
            11,
            12,
          ],
          "start": 11,
          "type": "Literal",
          "value": 1,
        },
        "start": 7,
        "type": "BinaryExpression",
      },
      "type": "WhileStatement",
    },
  ],
  "end": 16,
  "range": [
    0,
    16,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Miscellaneous - ranges > Miscellaneous - ranges (pass) > while (x < 10) { x++; y--; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "end": 21,
            "expression": {
              "argument": {
                "end": 18,
                "name": "x",
                "range": [
                  17,
                  18,
                ],
                "start": 17,
                "type": "Identifier",
              },
              "end": 20,
              "operator": "++",
              "prefix": false,
              "range": [
                17,
                20,
              ],
              "start": 17,
              "type": "UpdateExpression",
            },
            "range": [
              17,
              21,
            ],
            "start": 17,
            "type": "ExpressionStatement",
          },
          {
            "end": 26,
            "expression": {
              "argument": {
                "end": 23,
                "name": "y",
                "range": [
                  22,
                  23,
                ],
                "start": 22,
                "type": "Identifier",
              },
              "end": 25,
              "operator": "--",
              "prefix": false,
              "range": [
                22,
                25,
              ],
              "start": 22,
              "type": "UpdateExpression",
            },
            "range": [
              22,
              26,
            ],
            "start": 22,
            "type": "ExpressionStatement",
          },
        ],
        "end": 28,
        "range": [
          15,
          28,
        ],
        "start": 15,
        "type": "BlockStatement",
      },
      "end": 28,
      "range": [
        0,
        28,
      ],
      "start": 0,
      "test": {
        "end": 13,
        "left": {
          "end": 8,
          "name": "x",
          "range": [
            7,
            8,
          ],
          "start": 7,
          "type": "Identifier",
        },
        "operator": "<",
        "range": [
          7,
          13,
        ],
        "right": {
          "end": 13,
          "range": [
            11,
            13,
          ],
          "start": 11,
          "type": "Literal",
          "value": 10,
        },
        "start": 7,
        "type": "BinaryExpression",
      },
      "type": "WhileStatement",
    },
  ],
  "end": 28,
  "range": [
    0,
    28,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;
