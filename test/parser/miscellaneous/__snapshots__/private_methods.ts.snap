// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Next - Private methods > Next - Private methods (pass) > class A {
  static #x;
  static #y = 1;
} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "x",
              "type": "PrivateIdentifier",
            },
            "static": true,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "key": {
              "name": "y",
              "type": "PrivateIdentifier",
            },
            "static": true,
            "type": "PropertyDefinition",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A {  #a; m() {} #b; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "key": {
              "name": "m",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "b",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A {  #a; m() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "key": {
              "name": "m",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A {  #m = async function() { return 'foo'; };  method() { return this.#m(); } } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "m",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "async": true,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": "foo",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "method",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "arguments": [],
                      "callee": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "m",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "optional": false,
                      "type": "CallExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A {  #m() { return 42; } get bGetter() { return this.#b; } #b = this.#m(); get ref() { return this.#m; } constructor() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "m",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 42,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "bGetter",
              "type": "Identifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "b",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "b",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "arguments": [],
              "callee": {
                "computed": false,
                "object": {
                  "type": "ThisExpression",
                },
                "optional": false,
                "property": {
                  "name": "m",
                  "type": "PrivateIdentifier",
                },
                "type": "MemberExpression",
              },
              "optional": false,
              "type": "CallExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "ref",
              "type": "Identifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "m",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #$_; #℘_; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "$_",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "key": {
              "name": "℘_",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #\\u{61}
static #\\u0062() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "key": {
              "name": "b",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #a; #b; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 13,
            "key": {
              "end": 12,
              "name": "a",
              "range": [
                10,
                12,
              ],
              "start": 10,
              "type": "PrivateIdentifier",
            },
            "range": [
              10,
              13,
            ],
            "start": 10,
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "end": 17,
            "key": {
              "end": 16,
              "name": "b",
              "range": [
                14,
                16,
              ],
              "start": 14,
              "type": "PrivateIdentifier",
            },
            "range": [
              14,
              17,
            ],
            "start": 14,
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "end": 19,
        "range": [
          8,
          19,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 19,
      "id": {
        "end": 7,
        "name": "A",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #foo = () => 'bar';  method() {
  return this.#foo();
} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "async": false,
              "body": {
                "type": "Literal",
                "value": "bar",
              },
              "expression": true,
              "generator": false,
              "params": [],
              "type": "ArrowFunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "method",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "arguments": [],
                      "callee": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "foo",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "optional": false,
                      "type": "CallExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #foo = bar; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "name": "bar",
              "type": "Identifier",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #foo() { #bar } } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "name": "bar",
                      "type": "PrivateIdentifier",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #key() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "key",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #key; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "key",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #yield
 = 0; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "yield",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "type": "Literal",
              "value": 0,
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #yield = b[c]; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 24,
            "key": {
              "end": 16,
              "name": "yield",
              "range": [
                10,
                16,
              ],
              "start": 10,
              "type": "PrivateIdentifier",
            },
            "range": [
              10,
              24,
            ],
            "start": 10,
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "computed": true,
              "end": 23,
              "object": {
                "end": 20,
                "name": "b",
                "range": [
                  19,
                  20,
                ],
                "start": 19,
                "type": "Identifier",
              },
              "optional": false,
              "property": {
                "end": 22,
                "name": "c",
                "range": [
                  21,
                  22,
                ],
                "start": 21,
                "type": "Identifier",
              },
              "range": [
                19,
                23,
              ],
              "start": 19,
              "type": "MemberExpression",
            },
          },
        ],
        "end": 26,
        "range": [
          8,
          26,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 26,
      "id": {
        "end": 7,
        "name": "A",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        26,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 26,
  "range": [
    0,
    26,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #yield = foo + bar; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 29,
            "key": {
              "end": 16,
              "name": "yield",
              "range": [
                10,
                16,
              ],
              "start": 10,
              "type": "PrivateIdentifier",
            },
            "range": [
              10,
              29,
            ],
            "start": 10,
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "end": 28,
              "left": {
                "end": 22,
                "name": "foo",
                "range": [
                  19,
                  22,
                ],
                "start": 19,
                "type": "Identifier",
              },
              "operator": "+",
              "range": [
                19,
                28,
              ],
              "right": {
                "end": 28,
                "name": "bar",
                "range": [
                  25,
                  28,
                ],
                "start": 25,
                "type": "Identifier",
              },
              "start": 19,
              "type": "BinaryExpression",
            },
          },
        ],
        "end": 31,
        "range": [
          8,
          31,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 31,
      "id": {
        "end": 7,
        "name": "A",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        31,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 31,
  "range": [
    0,
    31,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { #yield; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 17,
            "key": {
              "end": 16,
              "name": "yield",
              "range": [
                10,
                16,
              ],
              "start": 10,
              "type": "PrivateIdentifier",
            },
            "range": [
              10,
              17,
            ],
            "start": 10,
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "end": 19,
        "range": [
          8,
          19,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 19,
      "id": {
        "end": 7,
        "name": "A",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        19,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 19,
  "range": [
    0,
    19,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { $(value) { this.#$_ = value; return this.#$; } } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "$",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "$_",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "name": "value",
                        "type": "Identifier",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "$",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "value",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { get #foo/*{ declareWith }*/() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "PrivateIdentifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { m() { return 42; } #a;  #__;  #NJ_;  #℘_ ; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "m",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 42,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "key": {
              "name": "__",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "key": {
              "name": "NJ_",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
          {
            "computed": false,
            "key": {
              "name": "℘_",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { m() {} #a; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "m",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { method() { return this.#m(); } #m = function () { return 'foo'; };  } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "method",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "arguments": [],
                      "callee": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "m",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "optional": false,
                      "type": "CallExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "m",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": "foo",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { static #foo(bar) {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "bar",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { static #key; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "key",
              "type": "PrivateIdentifier",
            },
            "static": true,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { static async #_(value) { return await value;} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "_",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": true,
              "body": {
                "body": [
                  {
                    "argument": {
                      "argument": {
                        "name": "value",
                        "type": "Identifier",
                      },
                      "type": "AwaitExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "value",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class A { static set #foo/*{ declareWith }*/(param) {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "foo",
              "type": "PrivateIdentifier",
            },
            "kind": "set",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "param",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class B { #x = 0; #y = 1; } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "x",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "type": "Literal",
              "value": 0,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "y",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "type": "Literal",
              "value": 1,
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "B",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { #m() { return 42; } get ref() { return this.#m; } } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "m",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "type": "Literal",
                      "value": 42,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "ref",
              "type": "Identifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "m",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "C",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { * 
#m(v) {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 21,
            "key": {
              "end": 15,
              "loc": {
                "end": {
                  "column": 2,
                  "line": 2,
                },
                "start": {
                  "column": 0,
                  "line": 2,
                },
              },
              "name": "m",
              "range": [
                13,
                15,
              ],
              "start": 13,
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "loc": {
              "end": {
                "column": 8,
                "line": 2,
              },
              "start": {
                "column": 10,
                "line": 1,
              },
            },
            "range": [
              10,
              21,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 21,
                "loc": {
                  "end": {
                    "column": 8,
                    "line": 2,
                  },
                  "start": {
                    "column": 6,
                    "line": 2,
                  },
                },
                "range": [
                  19,
                  21,
                ],
                "start": 19,
                "type": "BlockStatement",
              },
              "end": 21,
              "generator": true,
              "id": null,
              "loc": {
                "end": {
                  "column": 8,
                  "line": 2,
                },
                "start": {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": [
                {
                  "end": 17,
                  "loc": {
                    "end": {
                      "column": 4,
                      "line": 2,
                    },
                    "start": {
                      "column": 3,
                      "line": 2,
                    },
                  },
                  "name": "v",
                  "range": [
                    16,
                    17,
                  ],
                  "start": 16,
                  "type": "Identifier",
                },
              ],
              "range": [
                15,
                21,
              ],
              "start": 15,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 23,
        "loc": {
          "end": {
            "column": 10,
            "line": 2,
          },
          "start": {
            "column": 8,
            "line": 1,
          },
        },
        "range": [
          8,
          23,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 23,
      "id": {
        "end": 7,
        "loc": {
          "end": {
            "column": 7,
            "line": 1,
          },
          "start": {
            "column": 6,
            "line": 1,
          },
        },
        "name": "C",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "loc": {
        "end": {
          "column": 10,
          "line": 2,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        23,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 23,
  "loc": {
    "end": {
      "column": 10,
      "line": 2,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    23,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { accessor #x = 1 } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "decorators": [],
            "end": 25,
            "key": {
              "end": 21,
              "loc": {
                "end": {
                  "column": 21,
                  "line": 1,
                },
                "start": {
                  "column": 19,
                  "line": 1,
                },
              },
              "name": "x",
              "range": [
                19,
                21,
              ],
              "start": 19,
              "type": "PrivateIdentifier",
            },
            "loc": {
              "end": {
                "column": 25,
                "line": 1,
              },
              "start": {
                "column": 10,
                "line": 1,
              },
            },
            "range": [
              10,
              25,
            ],
            "start": 10,
            "static": false,
            "type": "AccessorProperty",
            "value": {
              "end": 25,
              "loc": {
                "end": {
                  "column": 25,
                  "line": 1,
                },
                "start": {
                  "column": 24,
                  "line": 1,
                },
              },
              "range": [
                24,
                25,
              ],
              "start": 24,
              "type": "Literal",
              "value": 1,
            },
          },
        ],
        "end": 27,
        "loc": {
          "end": {
            "column": 27,
            "line": 1,
          },
          "start": {
            "column": 8,
            "line": 1,
          },
        },
        "range": [
          8,
          27,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "decorators": [],
      "end": 27,
      "id": {
        "end": 7,
        "loc": {
          "end": {
            "column": 7,
            "line": 1,
          },
          "start": {
            "column": 6,
            "line": 1,
          },
        },
        "name": "C",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "loc": {
        "end": {
          "column": 27,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        27,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 27,
  "loc": {
    "end": {
      "column": 27,
      "line": 1,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    27,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { async #m() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 23,
            "key": {
              "end": 18,
              "loc": {
                "end": {
                  "column": 18,
                  "line": 1,
                },
                "start": {
                  "column": 16,
                  "line": 1,
                },
              },
              "name": "m",
              "range": [
                16,
                18,
              ],
              "start": 16,
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "loc": {
              "end": {
                "column": 23,
                "line": 1,
              },
              "start": {
                "column": 10,
                "line": 1,
              },
            },
            "range": [
              10,
              23,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "end": 23,
                "loc": {
                  "end": {
                    "column": 23,
                    "line": 1,
                  },
                  "start": {
                    "column": 21,
                    "line": 1,
                  },
                },
                "range": [
                  21,
                  23,
                ],
                "start": 21,
                "type": "BlockStatement",
              },
              "end": 23,
              "generator": false,
              "id": null,
              "loc": {
                "end": {
                  "column": 23,
                  "line": 1,
                },
                "start": {
                  "column": 18,
                  "line": 1,
                },
              },
              "params": [],
              "range": [
                18,
                23,
              ],
              "start": 18,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 25,
        "loc": {
          "end": {
            "column": 25,
            "line": 1,
          },
          "start": {
            "column": 8,
            "line": 1,
          },
        },
        "range": [
          8,
          25,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 25,
      "id": {
        "end": 7,
        "loc": {
          "end": {
            "column": 7,
            "line": 1,
          },
          "start": {
            "column": 6,
            "line": 1,
          },
        },
        "name": "C",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "loc": {
        "end": {
          "column": 25,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        25,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 25,
  "loc": {
    "end": {
      "column": 25,
      "line": 1,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { async * 
#m() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 26,
            "key": {
              "end": 21,
              "loc": {
                "end": {
                  "column": 2,
                  "line": 2,
                },
                "start": {
                  "column": 0,
                  "line": 2,
                },
              },
              "name": "m",
              "range": [
                19,
                21,
              ],
              "start": 19,
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "loc": {
              "end": {
                "column": 7,
                "line": 2,
              },
              "start": {
                "column": 10,
                "line": 1,
              },
            },
            "range": [
              10,
              26,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": true,
              "body": {
                "body": [],
                "end": 26,
                "loc": {
                  "end": {
                    "column": 7,
                    "line": 2,
                  },
                  "start": {
                    "column": 5,
                    "line": 2,
                  },
                },
                "range": [
                  24,
                  26,
                ],
                "start": 24,
                "type": "BlockStatement",
              },
              "end": 26,
              "generator": true,
              "id": null,
              "loc": {
                "end": {
                  "column": 7,
                  "line": 2,
                },
                "start": {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": [],
              "range": [
                21,
                26,
              ],
              "start": 21,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 28,
        "loc": {
          "end": {
            "column": 9,
            "line": 2,
          },
          "start": {
            "column": 8,
            "line": 1,
          },
        },
        "range": [
          8,
          28,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 28,
      "id": {
        "end": 7,
        "loc": {
          "end": {
            "column": 7,
            "line": 1,
          },
          "start": {
            "column": 6,
            "line": 1,
          },
        },
        "name": "C",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "loc": {
        "end": {
          "column": 9,
          "line": 2,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        28,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 28,
  "loc": {
    "end": {
      "column": 9,
      "line": 2,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    28,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { get 
#m() {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 22,
            "key": {
              "end": 17,
              "loc": {
                "end": {
                  "column": 2,
                  "line": 2,
                },
                "start": {
                  "column": 0,
                  "line": 2,
                },
              },
              "name": "m",
              "range": [
                15,
                17,
              ],
              "start": 15,
              "type": "PrivateIdentifier",
            },
            "kind": "get",
            "loc": {
              "end": {
                "column": 7,
                "line": 2,
              },
              "start": {
                "column": 10,
                "line": 1,
              },
            },
            "range": [
              10,
              22,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 22,
                "loc": {
                  "end": {
                    "column": 7,
                    "line": 2,
                  },
                  "start": {
                    "column": 5,
                    "line": 2,
                  },
                },
                "range": [
                  20,
                  22,
                ],
                "start": 20,
                "type": "BlockStatement",
              },
              "end": 22,
              "generator": false,
              "id": null,
              "loc": {
                "end": {
                  "column": 7,
                  "line": 2,
                },
                "start": {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": [],
              "range": [
                17,
                22,
              ],
              "start": 17,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 24,
        "loc": {
          "end": {
            "column": 9,
            "line": 2,
          },
          "start": {
            "column": 8,
            "line": 1,
          },
        },
        "range": [
          8,
          24,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 24,
      "id": {
        "end": 7,
        "loc": {
          "end": {
            "column": 7,
            "line": 1,
          },
          "start": {
            "column": 6,
            "line": 1,
          },
        },
        "name": "C",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "loc": {
        "end": {
          "column": 9,
          "line": 2,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        24,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 24,
  "loc": {
    "end": {
      "column": 9,
      "line": 2,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    24,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { get #℘() {} set #℘(x) {} a() { return this.#℘; } b(value) { this.#℘ = x; } }; 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "℘",
              "type": "PrivateIdentifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "℘",
              "type": "PrivateIdentifier",
            },
            "kind": "set",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "a",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "℘",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "b",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "℘",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "name": "x",
                        "type": "Identifier",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "value",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "C",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
    {
      "type": "EmptyStatement",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { set 
#m(v) {} } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 23,
            "key": {
              "end": 17,
              "loc": {
                "end": {
                  "column": 2,
                  "line": 2,
                },
                "start": {
                  "column": 0,
                  "line": 2,
                },
              },
              "name": "m",
              "range": [
                15,
                17,
              ],
              "start": 15,
              "type": "PrivateIdentifier",
            },
            "kind": "set",
            "loc": {
              "end": {
                "column": 8,
                "line": 2,
              },
              "start": {
                "column": 10,
                "line": 1,
              },
            },
            "range": [
              10,
              23,
            ],
            "start": 10,
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [],
                "end": 23,
                "loc": {
                  "end": {
                    "column": 8,
                    "line": 2,
                  },
                  "start": {
                    "column": 6,
                    "line": 2,
                  },
                },
                "range": [
                  21,
                  23,
                ],
                "start": 21,
                "type": "BlockStatement",
              },
              "end": 23,
              "generator": false,
              "id": null,
              "loc": {
                "end": {
                  "column": 8,
                  "line": 2,
                },
                "start": {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": [
                {
                  "end": 19,
                  "loc": {
                    "end": {
                      "column": 4,
                      "line": 2,
                    },
                    "start": {
                      "column": 3,
                      "line": 2,
                    },
                  },
                  "name": "v",
                  "range": [
                    18,
                    19,
                  ],
                  "start": 18,
                  "type": "Identifier",
                },
              ],
              "range": [
                17,
                23,
              ],
              "start": 17,
              "type": "FunctionExpression",
            },
          },
        ],
        "end": 25,
        "loc": {
          "end": {
            "column": 10,
            "line": 2,
          },
          "start": {
            "column": 8,
            "line": 1,
          },
        },
        "range": [
          8,
          25,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 25,
      "id": {
        "end": 7,
        "loc": {
          "end": {
            "column": 7,
            "line": 1,
          },
          "start": {
            "column": 6,
            "line": 1,
          },
        },
        "name": "C",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "loc": {
        "end": {
          "column": 10,
          "line": 2,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "range": [
        0,
        25,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 25,
  "loc": {
    "end": {
      "column": 10,
      "line": 2,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "range": [
    0,
    25,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { static *#gen() { yield [...yield yield]; } static get gen() { return this.#gen; } } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "gen",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "argument": {
                        "elements": [
                          {
                            "argument": {
                              "argument": {
                                "argument": null,
                                "delegate": false,
                                "type": "YieldExpression",
                              },
                              "delegate": false,
                              "type": "YieldExpression",
                            },
                            "type": "SpreadElement",
                          },
                        ],
                        "type": "ArrayExpression",
                      },
                      "delegate": false,
                      "type": "YieldExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "gen",
              "type": "Identifier",
            },
            "kind": "get",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "gen",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "C",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class C { static async *#gen() { yield { ...yield,  y: 1, ...yield yield, }; } static get gen() { return this.#gen; } } 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "gen",
              "type": "PrivateIdentifier",
            },
            "kind": "method",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": true,
              "body": {
                "body": [
                  {
                    "expression": {
                      "argument": {
                        "properties": [
                          {
                            "argument": {
                              "argument": null,
                              "delegate": false,
                              "type": "YieldExpression",
                            },
                            "type": "SpreadElement",
                          },
                          {
                            "computed": false,
                            "key": {
                              "name": "y",
                              "type": "Identifier",
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false,
                            "type": "Property",
                            "value": {
                              "type": "Literal",
                              "value": 1,
                            },
                          },
                          {
                            "argument": {
                              "argument": {
                                "argument": null,
                                "delegate": false,
                                "type": "YieldExpression",
                              },
                              "delegate": false,
                              "type": "YieldExpression",
                            },
                            "type": "SpreadElement",
                          },
                        ],
                        "type": "ObjectExpression",
                      },
                      "delegate": false,
                      "type": "YieldExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": true,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "gen",
              "type": "Identifier",
            },
            "kind": "get",
            "static": true,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "gen",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "C",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class Cl {
  #privateField = "top secret string";

  constructor() {
    this.publicField = "not secret string";
  }

  get #privateFieldValue() {
    return this.#privateField;
  }

  set #privateFieldValue(newValue) {
    this.#privateField = newValue;
  }

  publicGetPrivateField() {
    return this.#privateFieldValue;
  }

  publicSetPrivateField(newValue) {
    this.#privateFieldValue = newValue;
  }

  get publicFieldValue() {
    return this.publicField;
  }

  set publicFieldValue(newValue) {
    this.publicField = newValue;
  }

  testUpdates() {
    this.#privateField = 0;
    this.publicField = 0;
    this.#privateFieldValue = this.#privateFieldValue++;
    this.publicFieldValue = this.publicFieldValue++;

    ++this.#privateFieldValue;
    ++this.publicFieldValue;

    this.#privateFieldValue += 1;
    this.publicFieldValue += 1;

    this.#privateFieldValue = -(this.#privateFieldValue ** this.#privateFieldValue);
    this.publicFieldValue = -(this.publicFieldValue ** this.publicFieldValue);
  }
} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "privateField",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "type": "Literal",
              "value": "top secret string",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "publicField",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "type": "Literal",
                        "value": "not secret string",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "privateFieldValue",
              "type": "PrivateIdentifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "privateField",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "privateFieldValue",
              "type": "PrivateIdentifier",
            },
            "kind": "set",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateField",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "name": "newValue",
                        "type": "Identifier",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "newValue",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "publicGetPrivateField",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "privateFieldValue",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "publicSetPrivateField",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateFieldValue",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "name": "newValue",
                        "type": "Identifier",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "newValue",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "publicFieldValue",
              "type": "Identifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "publicField",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "publicFieldValue",
              "type": "Identifier",
            },
            "kind": "set",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "publicField",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "name": "newValue",
                        "type": "Identifier",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "newValue",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "testUpdates",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateField",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "publicField",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateFieldValue",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "argument": {
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                          },
                          "optional": false,
                          "property": {
                            "name": "privateFieldValue",
                            "type": "PrivateIdentifier",
                          },
                          "type": "MemberExpression",
                        },
                        "operator": "++",
                        "prefix": false,
                        "type": "UpdateExpression",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "publicFieldValue",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "argument": {
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                          },
                          "optional": false,
                          "property": {
                            "name": "publicFieldValue",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                        "operator": "++",
                        "prefix": false,
                        "type": "UpdateExpression",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "argument": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateFieldValue",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "++",
                      "prefix": true,
                      "type": "UpdateExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "argument": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "publicFieldValue",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "++",
                      "prefix": true,
                      "type": "UpdateExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateFieldValue",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+=",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "publicFieldValue",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+=",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateFieldValue",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "argument": {
                          "left": {
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                            },
                            "optional": false,
                            "property": {
                              "name": "privateFieldValue",
                              "type": "PrivateIdentifier",
                            },
                            "type": "MemberExpression",
                          },
                          "operator": "**",
                          "right": {
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                            },
                            "optional": false,
                            "property": {
                              "name": "privateFieldValue",
                              "type": "PrivateIdentifier",
                            },
                            "type": "MemberExpression",
                          },
                          "type": "BinaryExpression",
                        },
                        "operator": "-",
                        "prefix": true,
                        "type": "UnaryExpression",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "publicFieldValue",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "argument": {
                          "left": {
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                            },
                            "optional": false,
                            "property": {
                              "name": "publicFieldValue",
                              "type": "Identifier",
                            },
                            "type": "MemberExpression",
                          },
                          "operator": "**",
                          "right": {
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                            },
                            "optional": false,
                            "property": {
                              "name": "publicFieldValue",
                              "type": "Identifier",
                            },
                            "type": "MemberExpression",
                          },
                          "type": "BinaryExpression",
                        },
                        "operator": "-",
                        "prefix": true,
                        "type": "UnaryExpression",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "Cl",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class Cl {
  #privateField = "top secret string";

  constructor() {
    this.publicField = "not secret string";
  }

  get #privateFieldValue() {
    return this.#privateField;
  }

  set #privateFieldValue(newValue) {
    this.#privateField = newValue;
  }

  publicGetPrivateField() {
    return this.#privateFieldValue;
  }

  publicSetPrivateField(newValue) {
    this.#privateFieldValue = newValue;
  }
} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "privateField",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "type": "Literal",
              "value": "top secret string",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "publicField",
                          "type": "Identifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "type": "Literal",
                        "value": "not secret string",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "privateFieldValue",
              "type": "PrivateIdentifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "privateField",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "privateFieldValue",
              "type": "PrivateIdentifier",
            },
            "kind": "set",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateField",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "name": "newValue",
                        "type": "Identifier",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "newValue",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "publicGetPrivateField",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "privateFieldValue",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "publicSetPrivateField",
              "type": "Identifier",
            },
            "kind": "method",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateFieldValue",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "name": "newValue",
                        "type": "Identifier",
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "newValue",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "Cl",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class Cl {
  #privateField = 0;

  get #privateFieldValue() {
    return this.#privateField;
  }

  constructor() {
    this.#privateFieldValue = 1;
  }
} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "privateField",
              "type": "PrivateIdentifier",
            },
            "static": false,
            "type": "PropertyDefinition",
            "value": {
              "type": "Literal",
              "value": 0,
            },
          },
          {
            "computed": false,
            "key": {
              "name": "privateFieldValue",
              "type": "PrivateIdentifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                      },
                      "optional": false,
                      "property": {
                        "name": "privateField",
                        "type": "PrivateIdentifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "constructor",
              "type": "Identifier",
            },
            "kind": "constructor",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "expression": {
                      "left": {
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                        },
                        "optional": false,
                        "property": {
                          "name": "privateFieldValue",
                          "type": "PrivateIdentifier",
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "=",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "AssignmentExpression",
                    },
                    "type": "ExpressionStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "Cl",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class Hotel {
  get #evil() {
    return ohNo();
  }
  set #evil(x) {
    return makeEvil(x);
  }
} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "key": {
              "name": "evil",
              "type": "PrivateIdentifier",
            },
            "kind": "get",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "arguments": [],
                      "callee": {
                        "name": "ohNo",
                        "type": "Identifier",
                      },
                      "optional": false,
                      "type": "CallExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [],
              "type": "FunctionExpression",
            },
          },
          {
            "computed": false,
            "key": {
              "name": "evil",
              "type": "PrivateIdentifier",
            },
            "kind": "set",
            "static": false,
            "type": "MethodDefinition",
            "value": {
              "async": false,
              "body": {
                "body": [
                  {
                    "argument": {
                      "arguments": [
                        {
                          "name": "x",
                          "type": "Identifier",
                        },
                      ],
                      "callee": {
                        "name": "makeEvil",
                        "type": "Identifier",
                      },
                      "optional": false,
                      "type": "CallExpression",
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": null,
              "params": [
                {
                  "name": "x",
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
          },
        ],
        "type": "ClassBody",
      },
      "id": {
        "name": "Hotel",
        "type": "Identifier",
      },
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class a {#人} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 11,
            "key": {
              "end": 11,
              "name": "人",
              "range": [
                9,
                11,
              ],
              "start": 9,
              "type": "PrivateIdentifier",
            },
            "range": [
              9,
              11,
            ],
            "start": 9,
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "end": 12,
        "range": [
          8,
          12,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 12,
      "id": {
        "end": 7,
        "name": "a",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        12,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 12,
  "range": [
    0,
    12,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class a {#𐌭} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 12,
            "key": {
              "end": 12,
              "name": "𐌭",
              "range": [
                9,
                12,
              ],
              "start": 9,
              "type": "PrivateIdentifier",
            },
            "range": [
              9,
              12,
            ],
            "start": 9,
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "end": 13,
        "range": [
          8,
          13,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 13,
      "id": {
        "end": 7,
        "name": "a",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        13,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 13,
  "range": [
    0,
    13,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > class a {#𐌭人} 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "computed": false,
            "end": 13,
            "key": {
              "end": 13,
              "name": "𐌭人",
              "range": [
                9,
                13,
              ],
              "start": 9,
              "type": "PrivateIdentifier",
            },
            "range": [
              9,
              13,
            ],
            "start": 9,
            "static": false,
            "type": "PropertyDefinition",
            "value": null,
          },
        ],
        "end": 14,
        "range": [
          8,
          14,
        ],
        "start": 8,
        "type": "ClassBody",
      },
      "end": 14,
      "id": {
        "end": 7,
        "name": "a",
        "range": [
          6,
          7,
        ],
        "start": 6,
        "type": "Identifier",
      },
      "range": [
        0,
        14,
      ],
      "start": 0,
      "superClass": null,
      "type": "ClassDeclaration",
    },
  ],
  "end": 14,
  "range": [
    0,
    14,
  ],
  "sourceType": "script",
  "start": 0,
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > var C = class {
  ;;;;
  ;;;;;;;;;;;;;
  ;;;;
  static #x(value) {
    return value / 2;
  }
  static #y(value) {
    return value * 2;
  }
  static x() {
    return this.#x(84);
  }
  static y() {
    return this.#y(43);
  }
} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "C",
            "type": "Identifier",
          },
          "init": {
            "body": {
              "body": [
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "PrivateIdentifier",
                  },
                  "kind": "method",
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "argument": {
                            "left": {
                              "name": "value",
                              "type": "Identifier",
                            },
                            "operator": "/",
                            "right": {
                              "type": "Literal",
                              "value": 2,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [
                      {
                        "name": "value",
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "y",
                    "type": "PrivateIdentifier",
                  },
                  "kind": "method",
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "argument": {
                            "left": {
                              "name": "value",
                              "type": "Identifier",
                            },
                            "operator": "*",
                            "right": {
                              "type": "Literal",
                              "value": 2,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [
                      {
                        "name": "value",
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "x",
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "argument": {
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 84,
                              },
                            ],
                            "callee": {
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                              },
                              "optional": false,
                              "property": {
                                "name": "x",
                                "type": "PrivateIdentifier",
                              },
                              "type": "MemberExpression",
                            },
                            "optional": false,
                            "type": "CallExpression",
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [],
                    "type": "FunctionExpression",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "y",
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "argument": {
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 43,
                              },
                            ],
                            "callee": {
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                              },
                              "optional": false,
                              "property": {
                                "name": "y",
                                "type": "PrivateIdentifier",
                              },
                              "type": "MemberExpression",
                            },
                            "optional": false,
                            "type": "CallExpression",
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [],
                    "type": "FunctionExpression",
                  },
                },
              ],
              "type": "ClassBody",
            },
            "id": null,
            "superClass": null,
            "type": "ClassExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "type": "VariableDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > var C = class {
  static *m() { return 42; } #$_; #__;  #℘_;   set #$(value) { this.#$_ = value;
  }
  set #_(value) {
    this.#__ = value;
  }
} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "C",
            "type": "Identifier",
          },
          "init": {
            "body": {
              "body": [
                {
                  "computed": false,
                  "key": {
                    "name": "m",
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "argument": {
                            "type": "Literal",
                            "value": 42,
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": true,
                    "id": null,
                    "params": [],
                    "type": "FunctionExpression",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "$_",
                    "type": "PrivateIdentifier",
                  },
                  "static": false,
                  "type": "PropertyDefinition",
                  "value": null,
                },
                {
                  "computed": false,
                  "key": {
                    "name": "__",
                    "type": "PrivateIdentifier",
                  },
                  "static": false,
                  "type": "PropertyDefinition",
                  "value": null,
                },
                {
                  "computed": false,
                  "key": {
                    "name": "℘_",
                    "type": "PrivateIdentifier",
                  },
                  "static": false,
                  "type": "PropertyDefinition",
                  "value": null,
                },
                {
                  "computed": false,
                  "key": {
                    "name": "$",
                    "type": "PrivateIdentifier",
                  },
                  "kind": "set",
                  "static": false,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "expression": {
                            "left": {
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                              },
                              "optional": false,
                              "property": {
                                "name": "$_",
                                "type": "PrivateIdentifier",
                              },
                              "type": "MemberExpression",
                            },
                            "operator": "=",
                            "right": {
                              "name": "value",
                              "type": "Identifier",
                            },
                            "type": "AssignmentExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [
                      {
                        "name": "value",
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "_",
                    "type": "PrivateIdentifier",
                  },
                  "kind": "set",
                  "static": false,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "expression": {
                            "left": {
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                              },
                              "optional": false,
                              "property": {
                                "name": "__",
                                "type": "PrivateIdentifier",
                              },
                              "type": "MemberExpression",
                            },
                            "operator": "=",
                            "right": {
                              "name": "value",
                              "type": "Identifier",
                            },
                            "type": "AssignmentExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [
                      {
                        "name": "value",
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                },
              ],
              "type": "ClassBody",
            },
            "id": null,
            "superClass": null,
            "type": "ClassExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "type": "VariableDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Next - Private methods (pass) > var C = class {
  static async *m() { return 42; } #$_; #__;

  get #_() {
    return this.#__;
  }
  $(value) {
    this.#$_ = value;
    return this.#$;
  }
  _(value) {
    this.#__ = value;
    return this.#_;
  }

} 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "C",
            "type": "Identifier",
          },
          "init": {
            "body": {
              "body": [
                {
                  "computed": false,
                  "key": {
                    "name": "m",
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "static": true,
                  "type": "MethodDefinition",
                  "value": {
                    "async": true,
                    "body": {
                      "body": [
                        {
                          "argument": {
                            "type": "Literal",
                            "value": 42,
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": true,
                    "id": null,
                    "params": [],
                    "type": "FunctionExpression",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "$_",
                    "type": "PrivateIdentifier",
                  },
                  "static": false,
                  "type": "PropertyDefinition",
                  "value": null,
                },
                {
                  "computed": false,
                  "key": {
                    "name": "__",
                    "type": "PrivateIdentifier",
                  },
                  "static": false,
                  "type": "PropertyDefinition",
                  "value": null,
                },
                {
                  "computed": false,
                  "key": {
                    "name": "_",
                    "type": "PrivateIdentifier",
                  },
                  "kind": "get",
                  "static": false,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "argument": {
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                            },
                            "optional": false,
                            "property": {
                              "name": "__",
                              "type": "PrivateIdentifier",
                            },
                            "type": "MemberExpression",
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [],
                    "type": "FunctionExpression",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "$",
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "static": false,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "expression": {
                            "left": {
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                              },
                              "optional": false,
                              "property": {
                                "name": "$_",
                                "type": "PrivateIdentifier",
                              },
                              "type": "MemberExpression",
                            },
                            "operator": "=",
                            "right": {
                              "name": "value",
                              "type": "Identifier",
                            },
                            "type": "AssignmentExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                        {
                          "argument": {
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                            },
                            "optional": false,
                            "property": {
                              "name": "$",
                              "type": "PrivateIdentifier",
                            },
                            "type": "MemberExpression",
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [
                      {
                        "name": "value",
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                },
                {
                  "computed": false,
                  "key": {
                    "name": "_",
                    "type": "Identifier",
                  },
                  "kind": "method",
                  "static": false,
                  "type": "MethodDefinition",
                  "value": {
                    "async": false,
                    "body": {
                      "body": [
                        {
                          "expression": {
                            "left": {
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                              },
                              "optional": false,
                              "property": {
                                "name": "__",
                                "type": "PrivateIdentifier",
                              },
                              "type": "MemberExpression",
                            },
                            "operator": "=",
                            "right": {
                              "name": "value",
                              "type": "Identifier",
                            },
                            "type": "AssignmentExpression",
                          },
                          "type": "ExpressionStatement",
                        },
                        {
                          "argument": {
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                            },
                            "optional": false,
                            "property": {
                              "name": "_",
                              "type": "PrivateIdentifier",
                            },
                            "type": "MemberExpression",
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "generator": false,
                    "id": null,
                    "params": [
                      {
                        "name": "value",
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                },
              ],
              "type": "ClassBody",
            },
            "id": null,
            "superClass": null,
            "type": "ClassExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "type": "VariableDeclaration",
    },
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`Next - Private methods > Private methods (fail) > (class C extends Base { async #*a() { } }) 1`] = `
"SyntaxError [1:30-1:31]: '#' not followed by identifier
> 1 | (class C extends Base { async #*a() { } })
    |                               ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > a = { #ab() {} } 1`] = `
"SyntaxError [1:6-1:7]: Unexpected token: 'PrivateField'
> 1 | a = { #ab() {} }
    |       ^ Unexpected token: 'PrivateField'"
`;

exports[`Next - Private methods > Private methods (fail) > class A {  #x; g = this.f; x = delete (g().#m); } 1`] = `
"SyntaxError [1:46-1:47]: Private fields can not be deleted
> 1 | class A {  #x; g = this.f; x = delete (g().#m); }
    |                                               ^ Private fields can not be deleted"
`;

exports[`Next - Private methods > Private methods (fail) > class A {  #x; g = this.f; x = delete (g().#m); } 2`] = `
"SyntaxError [1:46-1:47]: Private fields can not be deleted
> 1 | class A {  #x; g = this.f; x = delete (g().#m); }
    |                                               ^ Private fields can not be deleted"
`;

exports[`Next - Private methods > Private methods (fail) > class A {  #x; x = delete (g().#m); async *#m() {} } 1`] = `
"SyntaxError [1:34-1:35]: Private fields can not be deleted
> 1 | class A {  #x; x = delete (g().#m); async *#m() {} }
    |                                   ^ Private fields can not be deleted"
`;

exports[`Next - Private methods > Private methods (fail) > class A {  #x; x = delete (this.#m); } 1`] = `
"SyntaxError [1:35-1:36]: Private fields can not be deleted
> 1 | class A {  #x; x = delete (this.#m); }
    |                                    ^ Private fields can not be deleted"
`;

exports[`Next - Private methods > Private methods (fail) > class A {  #x; x() { delete ((this.#m ));  } async #m() {} } 1`] = `
"SyntaxError [1:40-1:41]: Private fields can not be deleted
> 1 | class A {  #x; x() { delete ((this.#m ));  } async #m() {} }
    |                                         ^ Private fields can not be deleted"
`;

exports[`Next - Private methods > Private methods (fail) > class A {  #x; x() { var g = this.f; delete g().#x; } } 1`] = `
"SyntaxError [1:50-1:51]: Private fields can not be deleted
> 1 | class A {  #x; x() { var g = this.f; delete g().#x; } }
    |                                                   ^ Private fields can not be deleted"
`;

exports[`Next - Private methods > Private methods (fail) > class A { # a } 1`] = `
"SyntaxError [1:10-1:11]: '#' not followed by identifier
> 1 | class A { # a }
    |           ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class A { # m() {} } 1`] = `
"SyntaxError [1:10-1:11]: '#' not followed by identifier
> 1 | class A { # m() {} }
    |           ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class A { # x } 1`] = `
"SyntaxError [1:10-1:11]: '#' not followed by identifier
> 1 | class A { # x }
    |           ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class A { # x; } 1`] = `
"SyntaxError [1:10-1:11]: '#' not followed by identifier
> 1 | class A { # x; }
    |           ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #\\u0000; } 1`] = `
"SyntaxError [1:11-1:17]: Illegal Unicode escape sequence
> 1 | class A { #\\u0000; }
    |            ^^^^^^ Illegal Unicode escape sequence"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #a #b } 1`] = `
"SyntaxError [1:13-1:14]: Unexpected token: 'PrivateField'
> 1 | class A { #a #b }
    |              ^ Unexpected token: 'PrivateField'"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #a b } 1`] = `
"SyntaxError [1:13-1:14]: Unexpected token: 'identifier'
> 1 | class A { #a b }
    |              ^ Unexpected token: 'identifier'"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #a b() {} } 1`] = `
"SyntaxError [1:13-1:14]: Unexpected token: 'identifier'
> 1 | class A { #a b() {} }
    |              ^ Unexpected token: 'identifier'"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #a; a() { this.# a } } 1`] = `
"SyntaxError [1:25-1:26]: '#' not followed by identifier
> 1 | class A { #a; a() { this.# a } }
    |                          ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #constructor = 4 } 1`] = `
"SyntaxError [1:11-1:22]: Classes may not have a private element named constructor
> 1 | class A { #constructor = 4 }
    |            ^^^^^^^^^^^ Classes may not have a private element named constructor"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #x } function fn() { return this.#y } 1`] = `
"SyntaxError [1:44-1:45]: Private identifier #y is not defined
> 1 | class A { #x } function fn() { return this.#y }
    |                                             ^ Private identifier #y is not defined"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #x; #x } 1`] = `
"SyntaxError [1:15-1:16]: Duplicate private identifier #x
> 1 | class A { #x; #x }
    |                ^ Duplicate private identifier #x"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #x; fn() { return this.#y } } 1`] = `
"SyntaxError [1:34-1:35]: Private identifier #y is not defined
> 1 | class A { #x; fn() { return this.#y } }
    |                                   ^ Private identifier #y is not defined"
`;

exports[`Next - Private methods > Private methods (fail) > class A { #x; m() { this.# x; }} 1`] = `
"SyntaxError [1:25-1:26]: '#' not followed by identifier
> 1 | class A { #x; m() { this.# x; }}
    |                          ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class A { * # m() {} } 1`] = `
"SyntaxError [1:12-1:13]: '#' not followed by identifier
> 1 | class A { * # m() {} }
    |             ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class A { * method() { super(); } } 1`] = `
"SyntaxError [1:28-1:29]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class A { * method() { super(); } }
    |                             ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class A { [{#ab() {}}]() {} } 1`] = `
"SyntaxError [1:12-1:13]: Unexpected token: 'PrivateField'
> 1 | class A { [{#ab() {}}]() {} }
    |             ^ Unexpected token: 'PrivateField'"
`;

exports[`Next - Private methods > Private methods (fail) > class A { a #b } 1`] = `
"SyntaxError [1:12-1:13]: Unexpected token: 'PrivateField'
> 1 | class A { a #b }
    |             ^ Unexpected token: 'PrivateField'"
`;

exports[`Next - Private methods > Private methods (fail) > class A { a = () => super() } 1`] = `
"SyntaxError [1:25-1:26]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class A { a = () => super() }
    |                          ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class A { constructor = 4 } 1`] = `
"SyntaxError [1:22-1:23]: Classes may not have a field called constructor
> 1 | class A { constructor = 4 }
    |                       ^ Classes may not have a field called constructor"
`;

exports[`Next - Private methods > Private methods (fail) > class A { get #x() {} get #x() {} } 1`] = `
"SyntaxError [1:27-1:28]: Duplicate private identifier #x
> 1 | class A { get #x() {} get #x() {} }
    |                            ^ Duplicate private identifier #x"
`;

exports[`Next - Private methods > Private methods (fail) > class A { method() { this.\\u0023field; } } 1`] = `
"SyntaxError [1:26-1:32]: Illegal Unicode escape sequence
> 1 | class A { method() { this.\\u0023field; } }
    |                           ^^^^^^ Illegal Unicode escape sequence"
`;

exports[`Next - Private methods > Private methods (fail) > class A { set #x(v) {} set #x(v) {} } 1`] = `
"SyntaxError [1:28-1:29]: Duplicate private identifier #x
> 1 | class A { set #x(v) {} set #x(v) {} }
    |                             ^ Duplicate private identifier #x"
`;

exports[`Next - Private methods > Private methods (fail) > class A { static async #method() { super(); } } 1`] = `
"SyntaxError [1:40-1:41]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class A { static async #method() { super(); } }
    |                                         ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class A { static async * prototype() {} } 1`] = `
"SyntaxError [1:34-1:35]: Classes may not have a static property named 'prototype'
> 1 | class A { static async * prototype() {} }
    |                                   ^ Classes may not have a static property named 'prototype'"
`;

exports[`Next - Private methods > Private methods (fail) > class A { static get # m() {} } 1`] = `
"SyntaxError [1:21-1:22]: '#' not followed by identifier
> 1 | class A { static get # m() {} }
    |                      ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class A { static get #x() {} static get #x() {} } 1`] = `
"SyntaxError [1:41-1:42]: Duplicate private identifier #x
> 1 | class A { static get #x() {} static get #x() {} }
    |                                          ^ Duplicate private identifier #x"
`;

exports[`Next - Private methods > Private methods (fail) > class A { static set #x(v) {} static set #x(v) {} } 1`] = `
"SyntaxError [1:42-1:43]: Duplicate private identifier #x
> 1 | class A { static set #x(v) {} static set #x(v) {} }
    |                                           ^ Duplicate private identifier #x"
`;

exports[`Next - Private methods > Private methods (fail) > class A extends B { #x() {} method() { super.#x() }  } 1`] = `
"SyntaxError [1:45-1:46]: Private fields can't be accessed on super
> 1 | class A extends B { #x() {} method() { super.#x() }  }
    |                                              ^ Private fields can't be accessed on super"
`;

exports[`Next - Private methods > Private methods (fail) > class A{ # a() {}} 1`] = `
"SyntaxError [1:9-1:10]: '#' not followed by identifier
> 1 | class A{ # a() {}}
    |          ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class C {  async \\u0023m() {} } 1`] = `
"SyntaxError [1:17-1:23]: Illegal Unicode escape sequence
> 1 | class C {  async \\u0023m() {} }
    |                  ^^^^^^ Illegal Unicode escape sequence"
`;

exports[`Next - Private methods > Private methods (fail) > class C { #method() { \\u0023field; } } 1`] = `
"SyntaxError [1:22-1:28]: Illegal Unicode escape sequence
> 1 | class C { #method() { \\u0023field; } }
    |                       ^^^^^^ Illegal Unicode escape sequence"
`;

exports[`Next - Private methods > Private methods (fail) > class C { #method() { a() { foo().\\u0023field; } } } 1`] = `
"SyntaxError [1:26-1:27]: Unexpected token: '{'
> 1 | class C { #method() { a() { foo().\\u0023field; } } }
    |                           ^ Unexpected token: '{'"
`;

exports[`Next - Private methods > Private methods (fail) > class C { #x = () => arguments; } 1`] = `
"SyntaxError [1:30-1:31]: A class field initializer or static block may not contain arguments
> 1 | class C { #x = () => arguments; }
    |                               ^ A class field initializer or static block may not contain arguments"
`;

exports[`Next - Private methods > Private methods (fail) > class C { async \\u0023m() {} } } 1`] = `
"SyntaxError [1:16-1:22]: Illegal Unicode escape sequence
> 1 | class C { async \\u0023m() {} } }
    |                 ^^^^^^ Illegal Unicode escape sequence"
`;

exports[`Next - Private methods > Private methods (fail) > class C { async \\u0023m() {} } } 2`] = `
"SyntaxError [1:16-1:22]: Illegal Unicode escape sequence
> 1 | class C { async \\u0023m() {} } }
    |                 ^^^^^^ Illegal Unicode escape sequence"
`;

exports[`Next - Private methods > Private methods (fail) > class C { static #x = super(); } 1`] = `
"SyntaxError [1:27-1:28]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class C { static #x = super(); }
    |                            ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class C { static async *#gen() {  void \\u0061wait; } } 1`] = `
"SyntaxError [1:39-1:49]: Unexpected token: 'escaped keyword'
> 1 | class C { static async *#gen() {  void \\u0061wait; } }
    |                                        ^^^^^^^^^^ Unexpected token: 'escaped keyword'"
`;

exports[`Next - Private methods > Private methods (fail) > class C { static async *#gen() { var await; } } 1`] = `
"SyntaxError [1:37-1:42]: cannot use "await" as identifier inside an async function
> 1 | class C { static async *#gen() { var await; } }
    |                                      ^^^^^ cannot use "await" as identifier inside an async function"
`;

exports[`Next - Private methods > Private methods (fail) > class C { static async *#gen() { var yield; } } 1`] = `
"SyntaxError [1:37-1:42]: Unexpected strict mode reserved word
> 1 | class C { static async *#gen() { var yield; } }
    |                                      ^^^^^ Unexpected strict mode reserved word"
`;

exports[`Next - Private methods > Private methods (fail) > class C { static async *#gen() { void await; } } 1`] = `
"SyntaxError [1:38-1:43]: cannot use "await" as identifier inside an async function
> 1 | class C { static async *#gen() { void await; } }
    |                                       ^^^^^ cannot use "await" as identifier inside an async function"
`;

exports[`Next - Private methods > Private methods (fail) > class C { static async *#gen() { void yield; } } 1`] = `
"SyntaxError [1:43-1:44]: Invalid left-hand side in assignment
> 1 | class C { static async *#gen() { void yield; } }
    |                                            ^ Invalid left-hand side in assignment"
`;

exports[`Next - Private methods > Private methods (fail) > class C { static async *#gen() { yield: ; } } 1`] = `
"SyntaxError [1:38-1:39]: Unexpected strict mode reserved word
> 1 | class C { static async *#gen() { yield: ; } }
    |                                       ^ Unexpected strict mode reserved word"
`;

exports[`Next - Private methods > Private methods (fail) > class C{ #method() { #"p" = x } } 1`] = `
"SyntaxError [1:21-1:22]: '#' not followed by identifier
> 1 | class C{ #method() { #"p" = x } }
    |                      ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class C{ #method() { #[m] = 1} } 1`] = `
"SyntaxError [1:21-1:22]: '#' not followed by identifier
> 1 | class C{ #method() { #[m] = 1} }
    |                      ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > class C{ #method() { super(); } } 1`] = `
"SyntaxError [1:26-1:27]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class C{ #method() { super(); } }
    |                           ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class C{ #method() { super(); } } 2`] = `
"SyntaxError [1:26-1:27]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class C{ #method() { super(); } }
    |                           ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class C{ #method() { super(); } } 3`] = `
"SyntaxError [1:26-1:27]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class C{ #method() { super(); } }
    |                           ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class C{ #method() { super(); } } 4`] = `
"SyntaxError [1:26-1:27]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class C{ #method() { super(); } }
    |                           ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class C{ #method() { super(); } } 5`] = `
"SyntaxError [1:26-1:27]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass
> 1 | class C{ #method() { super(); } }
    |                           ^ Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass"
`;

exports[`Next - Private methods > Private methods (fail) > class Spaces { #  wrongSpaces() { return fail(); } } 1`] = `
"SyntaxError [1:15-1:16]: '#' not followed by identifier
> 1 | class Spaces { #  wrongSpaces() { return fail(); } }
    |                ^ '#' not followed by identifier"
`;

exports[`Next - Private methods > Private methods (fail) > var C = class { x = 42  *gen() {} } 1`] = `
"SyntaxError [1:31-1:32]: Unexpected token: '{'
> 1 | var C = class { x = 42  *gen() {} }
    |                                ^ Unexpected token: '{'"
`;

exports[`Next - Private methods > Private methods (fail) > var o = { #m() {} }; 1`] = `
"SyntaxError [1:10-1:11]: Unexpected token: 'PrivateField'
> 1 | var o = { #m() {} };
    |           ^ Unexpected token: 'PrivateField'"
`;

exports[`Next - Private methods > Private methods (fail) > var o = { *#m() {} }; 1`] = `
"SyntaxError [1:11-1:12]: Invalid object literal key character after generator star
> 1 | var o = { *#m() {} };
    |            ^ Invalid object literal key character after generator star"
`;

exports[`Next - Private methods > Private methods (fail) > var o = { async #m() {} }; 1`] = `
"SyntaxError [1:16-1:17]: Unexpected character after object literal property name
> 1 | var o = { async #m() {} };
    |                 ^ Unexpected character after object literal property name"
`;
