import { describe } from 'vitest';
import { pass } from '../../test-utils';

describe('Miscellaneous - Precedence', () => {
  pass('Miscellaneous - Precedence (pass)', [
    { code: 'x = a > b instanceof c', options: { ranges: true } },
    { code: 'foo( a instanceof b + c )', options: { ranges: true } },
    { code: 'foo( a instanceof b > c )', options: { ranges: true } },
    { code: 'foo( a + b instanceof c )', options: { ranges: true } },
    { code: 'foo( a + b ** c )', options: { ranges: true } },
    { code: 'foo( a / b + c )', options: { ranges: true } },
    { code: 'foo( a > b instanceof c )', options: { ranges: true } },
    { code: 'x, a instanceof b + c', options: { ranges: true } },
    { code: 'x, a ** b + c', options: { ranges: true } },
    { code: 'x, a + b instanceof c', options: { ranges: true } },
    { code: 'x, a + b ** c', options: { ranges: true } },
    { code: 'x, a / b + c', options: { ranges: true } },
    { code: 'foo[ a + b ** c ]', options: { ranges: true } },
    { code: 'foo[ a + b / c ]', options: { ranges: true } },
    { code: '(a * b + c) * d', options: { ranges: true } },
    { code: 'a|=b^=c&=d>>>=e>>=f<<=g%=h/=i*=j**=k-=l+=m=n', options: { ranges: true } },
    'a || b || c',
    'a && b || c',
    'a | b && c',
    'a && b | c',
    'a ^ b & c',
    'a == b & c',
    'a !== b === c != d == e',
    'a & b == c',
    'a << b < c',
    'foo[ a > b instanceof c ]',
    'for ( a instanceof b + c ;;);',
    'for ( a instanceof b > c ;;);',
    'for ( a ** b + c ;;);',
    'for ( a + b ** c ;;);',
    '( a + b instanceof c )',
    '( a + b ** c )',
    '( a + b / c )',
    '( a / b + c )',
    'if ( a instanceof b + c ) ;',
    'if ( a instanceof b > c ) ;',
    'if ( a ** b + c ) ;',
    'if ( a + b instanceof c ) ;',
    'if ( a + b ** c ) ;',
    'if ( a / b + c ) ;',
    'a + b << c',
    'a << b + c',
    'a ** b * c',
    'a ** b ** c + d',
    'a * x ? b : c ? d : e',
    'a=b+=c-=d**=e*=f/=g%=h<<=i>>=j>>>=k&=l^=m|=n',
    { code: 'a ? b : c ? d : e * x', options: { ranges: true } },
    { code: 'a ? b : c ? d : e ** x', options: { ranges: true } },
    'a ? b ? c : d : e',
    { code: 'a ** x ? b ? c : d : e', options: { ranges: true } },
    'x || y || z',
    { code: 'a ? b ? c ** x : d : e', options: { ranges: true } },
    'a ? b ? c : d ** x : e',
    'a ? b ? c : d : e ** x',
    'a ? b : c * x ? d : e',
    'a=b+=c-=d**=e*=f/=g%=h<<=i>>=j>>>=k&=l^=m|=n',
  ]);
});
