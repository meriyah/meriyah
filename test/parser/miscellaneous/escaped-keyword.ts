import { Context } from '../../../src/common';
import * as t from 'node:assert/strict';
import { parseSource } from '../../../src/parser';
import { fail } from '../../test-utils';

describe('Miscellaneous - Escaped keywords', () => {
  for (const arg of [
    String.raw`(\u0069mplements = 1);`,
    String.raw`var impl\u0065ments = 1;`,
    String.raw`var { impl\u0065ments  } = {};`,
    String.raw`(\u0069nterface = 1);`,
    String.raw`({ def\u0061ult: 0 })`,
    String.raw`({ def\u{61}ult: 0 })`,
    String.raw`foo = {}; foo?.def\u{61}ult + 3;`,
    String.raw`foo = {}; foo.def\u{61}ult = 3;`,
    String.raw`var int\u0065rface = 1;`,
    String.raw`var { int\u0065rface  } = {};`,
    String.raw`(p\u0061ckage = 1);`,
    String.raw`var packa\u0067e = 1;`,
    String.raw`var { packa\u0067e  } = {};`,
    String.raw`(p\u0072ivate = 1);`,
    String.raw`var p\u0072ivate;`,
    String.raw`var { p\u0072ivate } = {};`,
    String.raw`(prot\u0065cted);`,
    String.raw`var prot\u0065cted = 1;`,
    String.raw`var { prot\u0065cted  } = {};`,
    String.raw`(publ\u0069c);`,
    String.raw`var publ\u0069c = 1;`,
    String.raw`var { publ\u0069c } = {};`,
    String.raw`(st\u0061tic);`,
    String.raw`var st\u0061tic = 1;`,
    String.raw`var { st\u0061tic } = {};`,
    'l\\u0065t\na',
    String.raw`if (true) l\u0065t: ;`,
    String.raw`function l\u0065t() { }`,
    String.raw`(function l\u0065t() { })`,
    String.raw`async function l\u0065t() { }`,
    String.raw`(async function l\u0065t() { })`,
    String.raw`(class { get st\u0061tic() {}})`,
    String.raw`(class { set st\u0061tic(x){}});`,
    String.raw`(class { *st\u0061tic() {}});`,
    String.raw`(class { st\u0061tic(){}});`,
    String.raw`(class { static get st\u0061tic(){}});`,
    String.raw`(class { static set st\u0061tic(x) {}});`,
    String.raw`l\u0065t => 42`,
    String.raw`(\u0061sync ())`,
    String.raw`async l\u0065t => 42`,
    String.raw`function packag\u0065() {}`,
    String.raw`function impl\u0065ments() {}`,
    String.raw`function privat\u0065() {}`,
    String.raw`(y\u0069eld);`,
    String.raw`var impl\u0065ments = 1;`,
    String.raw`var { impl\u0065ments  } = {};`,
    String.raw`(\u0069nterface = 1);`,
    String.raw`var int\u0065rface = 1;`,
    String.raw`var { int\u0065rface  } = {};`,
    String.raw`(p\u0061ckage = 1);`,
    String.raw`var packa\u0067e = 1;`,
    String.raw`var { packa\u0067e  } = {};`,
    String.raw`(p\u0072ivate = 1);`,
    String.raw`var p\u0072ivate;`,
    String.raw`var { p\u0072ivate } = {};`,
    String.raw`(prot\u0065cted);`,
    String.raw`var prot\u0065cted = 1;`,
    String.raw`var { prot\u0065cted  } = {};`,
    String.raw`(publ\u0069c);`,
    String.raw`var C = class { get "def\u{61}ult"() { return "get string"; } set "def\u{61}ult"(param) { stringSet = param; } };`,
    String.raw`var publ\u0069c = 1;`,
    String.raw`var { publ\u0069c } = {};`,
    String.raw`(st\u0061tic);`,
    String.raw`var st\u0061tic = 1;`,
    String.raw`var { st\u0061tic } = {};`,
    String.raw`var y\u0069eld = 1;`,
    String.raw`var { y\u0069eld } = {};`,
    String.raw`class aw\u0061it {}`,
    String.raw`aw\u0061it: 1;`,
    String.raw`function *a(){({yi\u0065ld: 0})}`,
    String.raw`\u0061sync`,
    'l\\u0065t\na',
    String.raw`l\u0065t`,
    `function a() {
      \\u0061sync
      p => {}
    }`,
    `(function a() {
      \\u0061sync
      p => {}
    })`,
    `async function a() {
      \\u0061sync
      p => {}
    }`,
    `obj.bre\\u0061k = 42;`,
    `for (\\u0061sync of [7]);`,
    String.raw`0, { def\u{61}ult: x } = { default: 42 };`,
    String.raw`var y = { bre\u0061k: x } = { break: 42 };`,
    String.raw`var y = { c\u0061se: x } = { case: 42 };`,
    String.raw`var y = { c\u0061tch: x } = { catch: 42 };`,
    String.raw`var y = { \u0063onst: x } = { const: 42 };`,
    String.raw`var y = { \u0064ebugger: x } = { debugger: 42 };`
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.None);
      });
    });
  }

  for (const arg of [`obj.bre\\u0061k = 42;`, `for (\\u0061sync of [7]);`]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.Strict | Context.Module);
      });
    });
  }
  //
  fail('Miscellaneous - Escaped identifiers (failures)', [
    [String.raw`(x === n\u0075ll);`, Context.None],
    [String.raw`var x = n\u0075ll;`, Context.None],
    [String.raw`var x = { interf\u0061ce } = { interface: 42 };`, Context.Strict | Context.Module],
    [String.raw`var x = ({ w\u0069th }) => {};`, Context.None],
    [String.raw`var n\u0075ll = 1;`, Context.None],
    [String.raw`var { n\u0075ll } = { 1 };`, Context.None],
    [String.raw`n\u0075ll = 1;`, Context.None],
    [String.raw`(x === tr\u0075e);`, Context.None],
    [String.raw`var x = tr\u0075e;`, Context.None],
    [String.raw`var tr\u0075e = 1;`, Context.None],
    [String.raw`({ def\u0061ult })`, Context.None],
    [String.raw`var { tr\u0075e } = {};`, Context.None],
    [String.raw`tr\u0075e = 1;`, Context.None],
    [String.raw`(x === f\u0061lse);`, Context.None],
    [String.raw`var x = f\u0061lse;`, Context.None],
    [String.raw`var f\u0061lse = 1;`, Context.None],
    [String.raw`var { f\u0061lse } = {};`, Context.None],
    [String.raw`f\u0061lse = 1;`, Context.None],
    [String.raw`switch (this.a) { c\u0061se 6: break; }`, Context.None],
    [String.raw`try { } c\u0061tch (e) {}`, Context.None],
    [String.raw`switch (this.a) { d\u0065fault: break; }`, Context.None],
    [String.raw`class C \u0065xtends function B() {} {}`, Context.None],
    [String.raw`for (var a i\u006e this) {}`, Context.None],
    [String.raw`if (this \u0069nstanceof Array) {}`, Context.None],
    [String.raw`(n\u0065w function f() {})`, Context.None],
    [String.raw`(typ\u0065of 123)`, Context.None],
    [String.raw`(function() {for (let l\u0065t in {}) {}})()`, Context.Strict],
    [String.raw`cl\u0061ss Foo {}`, Context.None],
    [String.raw`export function br\u0065ak() {}`, Context.Strict | Context.Module],
    [String.raw`class aw\u0061it {}`, Context.Strict | Context.Module],
    [String.raw`class l\u0065t {}`, Context.Strict],
    [String.raw`class st\u0061tic {}`, Context.Strict],
    [String.raw`class st\u0061tic {}`, Context.None],
    [String.raw`class yi\u0065ld {}`, Context.Strict],
    [String.raw`aw\u0061it: 1;`, Context.Strict | Context.Module],
    [String.raw`a(1,2\u0063onst foo = 1;`, Context.None],
    [String.raw`let l\u0065t = 1`, Context.Strict],
    [String.raw`const l\u0065t = 1`, Context.Strict],
    [String.raw`let [l\u0065t] = 1`, Context.Strict],
    [String.raw`for (let l\u0065t in {}) {}`, Context.Strict],
    [String.raw`(async ()=>{\u0061wait 100})()`, Context.None],
    [String.raw`(async ()=>{var \u0061wait = 100})()`, Context.None],
    [String.raw`\u0063o { } while(0)`, Context.None],
    [String.raw`v\u0061r`, Context.None],
    [String.raw`({\u0067et get(){}})`, Context.None],
    [String.raw`({\u0073et set(){}})`, Context.None],
    [String.raw`import* \u0061s foo from "./icefapper.js";`, Context.Strict | Context.Module],
    [String.raw`void \u0061sync function* f(){};`, Context.Strict | Context.Module],
    [String.raw`a(1,2\u0063onst foo = 1;`, Context.None],
    [String.raw`\u0063o { } while(0)`, Context.None],
    [String.raw`cl\u0061ss Foo {}`, Context.None],
    [String.raw`var {var:v\u0061r} = obj`, Context.None],
    [String.raw`[v\u{0061}r] = obj`, Context.None],
    [String.raw`function a({var:v\u{0061}r}) { }`, Context.None],
    [String.raw`(function v\u0061r() { })`, Context.None],
    [String.raw`(function a(v\u0061r) { })`, Context.None],
    [String.raw`(function a({v\u{0061}r}) { })`, Context.None],
    [String.raw`(function a([{v\u{0061}r}]) { })`, Context.None],
    [String.raw`(function a([[v\u{0061}r]]) { })`, Context.None],
    [String.raw`(function a({ hello: [v\u{0061}r]}) { })`, Context.None],
    [String.raw`(function a({ 0: {var:v\u{0061}r}}) { })`, Context.None],
    [String.raw`v\u0061r`, Context.None],
    [String.raw`var v\u0061r = 2000000;`, Context.None],
    [String.raw`var v\u{0061}r = 2000000`, Context.None],
    [String.raw`try { } catch(v\u{0061}r) { }`, Context.None],
    [String.raw`var obj = { async method() { void \u0061wait; } };`, Context.Strict],
    [String.raw`class C { async *gen() { void \u0061wait; }}`, Context.None],
    [String.raw`async() => { void \u0061wait; };`, Context.None],
    [String.raw`{for(o i\u006E {}){}}`, Context.None],
    [String.raw`class X { se\u0074 x(value) {} }`, Context.None],
    [String.raw`class X { st\u0061tic y() {} }`, Context.None],
    [String.raw`(function* () { y\u0069eld 10 })`, Context.None],
    [String.raw`({ \u0061sync x() { await x } })`, Context.None],
    [String.raw`export \u0061sync function y() { await x }`, Context.Module],
    [String.raw`{for(o i\u006E {}){}}`, Context.None],
    [String.raw`impleme\u{006E}ts`, Context.Strict],
    [String.raw`impleme\u{006E}ts`, Context.Strict | Context.Module],
    [`'use strict'; impleme\\u{006E}ts`, Context.None],
    [String.raw`[th\u{69}s] = []`, Context.None],
    [String.raw`th\u{69}s`, Context.None],
    [String.raw`[f\u0061lse] = []`, Context.None],
    [String.raw`f\u0061lse`, Context.None],
    [String.raw`class C { static async method() { void \u0061wait; }}`, Context.None],
    [String.raw`while (i < 10) { if (i++ & 1) c\u006fntinue; this.x++; }`, Context.None],
    [String.raw`(function a({ hello: {var:v\u{0061}r}}) { })`, Context.None],
    [String.raw`[v\u{0061}r] = obj`, Context.None],
    [String.raw`t\u0072y { true } catch (e) {}`, Context.None],
    [String.raw`var x = typ\u0065of "blah"`, Context.None],
    [String.raw`v\u0061r a = true`, Context.None],
    [String.raw`thi\u0073 = 123;`, Context.None],
    [String.raw`i\u0066 (false) {}`, Context.None],
    [String.raw`for (var i = 0; i < 100; ++i) { br\u0065ak; }`, Context.None],
    [String.raw`cl\u0061ss Foo {}`, Context.None],
    [String.raw`var f = f\u0075nction() {}`, Context.None],
    [String.raw`thr\u006fw 'boo';`, Context.None],
    [String.raw`var x = { n\u0065w } = { new: 42 };`, Context.None],
    [String.raw`var x = { privat\u0065 } = { private: 42 };`, Context.Strict | Context.Module],
    [String.raw`var x = { sup\u0065r } = { super: 42 };`, Context.Strict | Context.Module],
    [String.raw`var x = { v\u0061r } = { var: 42 };`, Context.Strict | Context.Module],
    [String.raw`var x = { privat\u0065 } = { private: 42 };`, Context.Strict | Context.Module],
    [String.raw`w\u0069th (this.scope) { }`, Context.None],
    [String.raw`n\u0075ll = 1;`, Context.None],
    [String.raw`(x === tr\u0075e);`, Context.None],
    [String.raw`do { ; } wh\u0069le (true) { }`, Context.None],
    [String.raw`class X { st\u0061tic y() {} }`, Context.None],
    [String.raw`class C { st\u0061tic set bar() {} }`, Context.None],
    [String.raw`class C { st\u0061tic *bar() {} }`, Context.None],
    [String.raw`if ("foo" \u0069n this) {}`, Context.None],
    [String.raw`if (this \u0069nstanceof Array) {}`, Context.None],
    [String.raw`(n\u0065w function f() {})`, Context.None],
    [String.raw`(typ\u0065of 123)`, Context.None],
    [String.raw`({ def\u{61}ult }) => 42;`, Context.None],
    [String.raw`0, { def\u{61}ult } = { default: 42 };`, Context.None],
    [String.raw`var x = ({ bre\u0061k }) => {};`, Context.None],
    [String.raw`var x = ({ tr\u0079 }) => {};`, Context.None],
    [String.raw`var x = ({ typ\u0065of }) => {};`, Context.None],
    [String.raw`def\u0061ult`, Context.None],
    [String.raw`var x = { \u0069mport } = { import: 42 };`, Context.Strict | Context.Module],
    [String.raw`(v\u006fid 0)`, Context.None],
    [String.raw`aw\u0061it: 1;`, Context.Module | Context.Strict],
    [String.raw`var \u{65}\u{6e}\u{75}\u{6d} = 123;`, Context.None],
    [String.raw`do { ; } wh\u0069le (true) { }`, Context.None],
    [String.raw`(function*() { return (n++, y\u0069eld 1); })()`, Context.None],
    [String.raw`var \u0064elete = 123;`, Context.None],
    [String.raw`var \u{62}\u{72}\u{65}\u{61}\u{6b} = 123;`, Context.None],
    [String.raw`var \u0062\u0072\u0065\u0061\u006b = 123;;`, Context.None],
    [String.raw`var \u{63}ase = 123;`, Context.None],
    [String.raw`var \u{63}atch = 123;`, Context.None],
    [String.raw`var x = { \u0066unction } = { function: 42 };`, Context.None],
    [String.raw`var \u{63}ontinue = 123;`, Context.None],
    [String.raw`var fina\u{6c}ly = 123;`, Context.None],
    [String.raw`var \u{64}\u{6f} = 123;`, Context.None],
    [String.raw`var gen = async function *g() { yi\u0065ld: ; };`, Context.None],
    [String.raw`function *gen() { yi\u0065ld: ; }`, Context.None],
    [String.raw`(function *gen() { yi\u0065ld: ; })`, Context.None],
    [String.raw`i\u0066 (0)`, Context.None],
    [String.raw`var i\u0066`, Context.None],
    [String.raw`export {a \u0061s b} from "";`, Context.Strict | Context.Module],
    [String.raw`export {} fr\u006fm "";`, Context.Strict | Context.Module],
    [String.raw`for (a o\u0066 b);`, Context.None],
    [String.raw`class a { st\u0061tic m(){} }`, Context.None],
    [String.raw`var \u{64}\u{6f} = 123;`, Context.None],
    [String.raw`(\u0061sync function() { await x })`, Context.None],
    [String.raw`(\u0061sync () => { await x })`, Context.None],
    [String.raw`\u0061sync x => { await x }`, Context.None],
    [String.raw`class X { \u0061sync x() { await x } }`, Context.None],
    [String.raw`class X { static \u0061sync x() { await x } }`, Context.None],
    [String.raw`export \u0061sync function y() { await x }`, Context.Strict | Context.Module],
    [String.raw`export default \u0061sync function () { await x }`, Context.Strict | Context.Module],
    [String.raw`for (x \u006ff y) {}`, Context.None],
    [String.raw`(async function() { aw\u0061it x })`, Context.None],
    [String.raw`(function*() { var y\u0069eld = 1; })()`, Context.None],
    [String.raw`(function*() { y\u0069eld 1; })()`, Context.None],
    [String.raw`wh\u0069le (true) { }`, Context.None],
    [String.raw`n\u0065w function f() {}`, Context.None],
    [String.raw`async () => { aw\u{61}it: x }`, Context.None],
    [String.raw`f\u006fr (var i = 0; i < 10; ++i);`, Context.None],
    [String.raw`try { } catch (e) {} f\u0069nally { }`, Context.None],
    [String.raw`d\u0065bugger;`, Context.None],
    [String.raw`if (d\u006f { true }) {}`, Context.None],
    [String.raw`\u{74}rue`, Context.None],
    [String.raw`var \u{64}\u{6f} = 123;`, Context.None],
    [String.raw`var \u{64}\u{6f} = 123;`, Context.Strict | Context.Module],
    [String.raw`a\u{0022}b=1`, Context.Strict],
    [String.raw`function impl\u0065ments() {}`, Context.Strict],
    [String.raw`function impl\u0065ments() {}`, Context.Strict | Context.Module],
    [String.raw`var gen = function *() { void yi\u0065ld; };`, Context.Strict | Context.Module],
    [String.raw`var gen = async function *g() { void \u0061wait; };`, Context.Strict | Context.Module],
    [String.raw`var gen = async function *g() { void \u0061wait; };`, Context.Strict | Context.Module],
    [String.raw`\u0061sync function* f(){}`, Context.Strict | Context.Module],
    [String.raw`class l\u0065t {}`, Context.Strict | Context.Module],
    [String.raw`class yi\u0065ld {}`, Context.Strict | Context.Module],
    [String.raw`class l\u0065t {}`, Context.Strict],
    [String.raw`class yi\u0065ld {}`, Context.Strict],
    [String.raw`class l\u0065t {}`, Context.None],
    [String.raw`class yi\u0065ld {}`, Context.None],
    [String.raw`class C { st\u0061tic m() {} }`, Context.None],
    [String.raw`var C = class aw\u0061it {};`, Context.Strict | Context.Module],
    [String.raw`var gen = async function *() { var yi\u0065ld; };`, Context.None],
    [String.raw`var obj = { *method() { void yi\u0065ld; } };`, Context.None],
    [String.raw`var gen = function *g() { yi\u0065ld: ; };`, Context.None],
    [String.raw`({ \u0061sync* m(){}});`, Context.None]
  ]);
});
