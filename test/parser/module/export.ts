import * as t from 'node:assert/strict';
import { outdent } from 'outdent';
import { describe, it } from 'vitest';
import { parseSource } from '../../../src/parser';
import { fail, pass } from '../../test-utils';

describe('Module - Export', () => {
  // Async await module errors
  for (const arg of [
    'export default (async function await() {})',
    'export default async function await() {}',
    'export async function await() {}',
    'export async function() {}',
    'export async',
    'export async\nfunction async() { await 1; }',
  ]) {
    it(`${arg}`, () => {
      t.throws(() => {
        parseSource(`${arg}`, { sourceType: 'module' });
      });
    });

    it(`${arg}`, () => {
      t.throws(() => {
        parseSource(`${arg}`, { sourceType: 'module', webcompat: true });
      });
    });
  }

  // Async await module
  for (const arg of [
    'export default async function() { await 1; }',
    'export default async function async() { await 1; }',
    'export async function async() { await 1; }',
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { sourceType: 'module' });
      });
    });

    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { sourceType: 'module', webcompat: true, lexical: true });
      });
    });
  }

  for (const arg of [
    'export {',
    'var a; export { a',
    'var a; export { a',
    'var a; export { a,',
    'var a; export { a, ;',
    'var a; export { a as };',
    'var a, b; export { a as , b};',
    'export function () {}',
    'export class () {}',
    'export var {[x]} = z;',
    'export var {[x]};',
    'export default async function() { yield = 1; }',
    'export default async function() { yield; }',
    'export const await = 5',
    String.raw`export function p\u0061ckage() {}`,
    String.raw`export function br\u0065ak() {}`,
    'export var {[x] = y} = z;',
    outdent`
      export default var x = null;
      export default var x = null;
    `,
    'export { , };',
    'export default let x = 7;',
    'export default const x = 7;',
    'export *;',
    'export * from;',
    'export { Q } from;',
    'export { 123 } from;',
    'export { # } from;',
    'export {',
    'var a; export { a',
    'var a; export { a,',
    'var a; export { a, ;',
    'var a; export { a as };',
    'var a, b; export { a as , b};',
    'export }',
    'var foo, bar; export { foo bar };',
    'export { , };',
    'export var await',
    'export typeof foo;',
    'export new Foo();',
    'function foo() { export default function() { } }',
    'function foo() { }; export { , foo };',
    'function foo() { }; () => { export { foo }; }',
    'function foo() { }; try { export { foo }; } catch(e) { }',
    // 'Syntax error if export is followed by non-identifier'
    'export 12;',
    'export *',
    'export * from foo',
    'export { bar } from foo',
    'export const const1;',
    'function foo() { }; export foo;',
    'export function () { }',
    'export function* () { }',
    'export B, * as A, { C, D } from "test";',
    'export default;',
    'export default var x = 7;',
    'export default let x = 7;',
    'export default const x = 7;',
    'export * as;',
    'export * as foo;',
    'export * as foo from;',
    "export * as foo from ';",
    "export * as ,foo from 'bar'",
    'export *;',
    'export 12;',
    'export function() {}',
    'export function*() {}',
    'export class {}',
    'export class extends C {}',
    'export const const1;',
    'function foo() { }; export foo;',
    'export function () { }',
    'export function* () { }',
    'export class { }',
    'function foo() { }; export [ foo ];',
    'function foo() { export default function() { } }',
    'function foo() { }; export { , foo };',
    'function foo() { }; () => { export { foo }; }',
    'function foo() { }; try { export { foo }; } catch(e) { }',
    'function foo() { }; { export { foo }; }',
    'export default 1, 2, 3;',
    'export ',
    'if (false) export default null;',
    'if (false) {} else export default null;',
    'for(var i=0; i<1; i++) export default null;',
    'while(false) export default null;',
    outdent`
      do export default null
      while (false);
    `,
  ]) {
    it(`${arg}`, () => {
      t.throws(() => {
        parseSource(`${arg}`, { sourceType: 'module' });
      });
    });
  }

  fail('Module - Export (fail)', [
    { code: 'export const x = x, x = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export const [x, x] = c', options: { sourceType: 'module', lexical: true } },
    { code: 'export const [x, {x}] = y', options: { sourceType: 'module', lexical: true } },
    { code: 'export const {x:x, x:x} = c', options: { sourceType: 'module', lexical: true } },
    { code: 'export const a = b; let a = c', options: { sourceType: 'module', lexical: true } },
    { code: 'var x; export {x: a}', options: { sourceType: 'module' } },
    { code: 'var x; export {x: a}', options: { webcompat: true } },
    { code: 'export async function(){}', options: { sourceType: 'module' } },
    { code: 'export async', options: { sourceType: 'module' } },
    { code: 'export let ...x = y', options: { sourceType: 'module' } },
    { code: 'export ...x = y', options: { sourceType: 'module' } },
    { code: 'export default ...x = y', options: { sourceType: 'module' } },
    'export async function f(){} foo',
    'export class x {} foo',
    { code: 'export default await', options: { sourceType: 'module' } },
    { code: 'export var let = x;', options: { sourceType: 'module' } },
    { code: '{export {x};}', options: { sourceType: 'module' } },
    { code: 'let x = () => {export {x};}', options: { sourceType: 'module' } },
    { code: 'if (x) export {x};', options: { sourceType: 'module' } },
    { code: 'for (;;) export {x};', options: { sourceType: 'module' } },
    { code: 'x = { foo(){ export {x}; }}', options: { sourceType: 'module' } },
    'x = { foo(){ export {x}; }}',
    { code: 'class x { foo(){ export {x}; }}', options: { sourceType: 'module' } },
    { code: 'var foo, bar; export {foo, ...bar}', options: { sourceType: 'module' } },
    { code: 'var foo, bar; export {[foo]}', options: { sourceType: 'module' } },
    { code: 'var foo, bar; export {{foo}}', options: { sourceType: 'module' } },
    { code: 'var foo, bar, x; export {{foo: x}}', options: { sourceType: 'module' } },
    { code: 'var foo; export {foo(){}}', options: { sourceType: 'module' } },
    { code: 'var foo; export {[foo](){}}', options: { sourceType: 'module' } },
    { code: 'export let await;', options: { sourceType: 'module' } },
    { code: 'var foo; export {async foo(){}}', options: { sourceType: 'module' } },
    { code: 'var foo; export {*foo(){}}', options: { sourceType: 'module' } },
    'var foo; export {*foo(){}}',
    { code: 'export foo', options: { sourceType: 'module' } },
    { code: 'export {', options: { sourceType: 'module' } },
    { code: 'export async;', options: { sourceType: 'module' } },
    { code: 'export async () => y', options: { sourceType: 'module' } },
    { code: 'var a; export { a,', options: { sourceType: 'module' } },
    { code: 'class A extends B { foo() { (super).foo } }', options: { webcompat: true } },
    'export class extends C {}',
    { code: 'export *;', options: { sourceType: 'module' } },
    { code: 'export * as;', options: { sourceType: 'module' } },
    {
      code: 'var x; export { x as z }; export * as z from "string";',
      options: { sourceType: 'module', lexical: true },
    },
    { code: 'export {', options: { sourceType: 'module' } },
    { code: 'export *;', options: { sourceType: 'module' } },
    { code: 'export * as;', options: { sourceType: 'module' } },
    { code: 'export * as foo;', options: { sourceType: 'module' } },
    { code: 'export * as foo from;', options: { sourceType: 'module' } },
    { code: "export * as foo from ';", options: { sourceType: 'module' } },
    { code: "export * as ,foo from 'bar'", options: { sourceType: 'module' } },
    { code: 'export * as foo from;', options: { sourceType: 'module' } },
    { code: "export * as foo from ';", options: { sourceType: 'module' } },
    { code: "export * as ,foo from 'bar'", options: { sourceType: 'module' } },
    { code: 'var a; export { a', options: { sourceType: 'module' } },
    { code: 'var a; export { a,', options: { sourceType: 'module' } },
    { code: 'var a; export { a, ;', options: { sourceType: 'module' } },
    { code: 'var a; export { a as };', options: { sourceType: 'module' } },
    { code: 'var a, b; export { a as , b};', options: { sourceType: 'module' } },
    { code: 'export default = 42', options: { sourceType: 'module' } },
    { code: 'export {default} +', options: { sourceType: 'module' } },
    { code: 'export default from "foo"', options: { sourceType: 'module' } },
    { code: '({ set m(x) { export default null; } });', options: { sourceType: 'module' } },
    { code: 'for (let y in []) import v from "foo"', options: { sourceType: 'module' } },
    { code: 'for (let y in []) import v from "foo"', options: { sourceType: 'module' } },
    { code: 'switch(0) { default: export default null; }', options: { sourceType: 'module' } },
    { code: 'switch(0) { case 1: export default null; }', options: { sourceType: 'module' } },
    { code: 'if (true) { } else export default null;', options: { sourceType: 'module' } },
    'function* g() { export default null; }',
    { code: 'test262: export default null;', options: { sourceType: 'module' } },
    { code: '(function() { export default null; });', options: { sourceType: 'module' } },
    { code: 'for (x = 0; false;) export default null;', options: { sourceType: 'module' } },
    { code: 'do export default null; while (false)', options: { sourceType: 'module' } },
    { code: 'export default async x \n() => {}', options: { sourceType: 'module' } },
    { code: '{export default 3}', options: { sourceType: 'module' } },
    { code: 'while (1) export default 3', options: { sourceType: 'module' } },
    { code: 'export {a,,b}', options: { sourceType: 'module' } },
    { code: 'export {function} from a', options: { sourceType: 'module' } },
    { code: 'export let[a] = 0 export let[b] = 0', options: { sourceType: 'module' } },
    { code: 'export 3', options: { sourceType: 'module' } },
    { code: 'export function () {}', options: { sourceType: 'module' } },
    { code: 'export default default', options: { sourceType: 'module' } },
    { code: 'export default function', options: { sourceType: 'module' } },
    { code: 'export default let', options: { sourceType: 'module' } },
    { code: 'let a; let a;', options: { sourceType: 'module', lexical: true } },
    { code: 'let a; export class a {};', options: { sourceType: 'module', lexical: true } },
    { code: 'let a; export function a(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'let a; export let a;', options: { sourceType: 'module', lexical: true } },
    { code: 'let a; export const a = 0;', options: { sourceType: 'module', lexical: true } },
    { code: 'const a = 0; export class a {};', options: { sourceType: 'module', lexical: true } },
    { code: 'const a = 0; export function a(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'const a = 0; export let a;', options: { sourceType: 'module', lexical: true } },
    { code: 'const a = 0; export const a = 1;', options: { sourceType: 'module', lexical: true } },
    { code: 'let a; var a;', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; let a;', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; export class a {};', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; export function a(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; export let a;', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; export const a = 0;', options: { sourceType: 'module', lexical: true } },
    { code: 'export var a; export var a;', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a, a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a, b as a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a, a as a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a}; export class a{};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a}; export function a(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'export let a; export let a;', options: { sourceType: 'module', lexical: true } },
    { code: 'export const a = 0; export const a = 0;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let a; export let a;', options: { sourceType: 'module', lexical: true } },
    { code: 'export default 0; export default 0;', options: { sourceType: 'module', lexical: true } },
    { code: 'export default 0; export default function f(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'export default 0; export default class a {};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a};', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; export {b as a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a as b}; var b;', options: { sourceType: 'module', lexical: true } },
    { code: 'let a; export {b as a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a as b}; let b;', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; export {a, a}', options: { sourceType: 'module', lexical: true } },
    { code: 'var a, b; export {a, b, a}', options: { sourceType: 'module', lexical: true } },
    { code: 'var a, b; export {b, a, a}', options: { sourceType: 'module', lexical: true } },
    { code: 'var a, b; export {a, b, c}', options: { sourceType: 'module', lexical: true } },
    { code: 'var a, b; export {a, b as a}', options: { sourceType: 'module', lexical: true } },
    { code: 'export let [x, x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export function x(){}; export let [x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let [x] = y; export function x(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'export let x = y, [x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let x = y, [...x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let x = y, {...x} = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; export {a}; export {a};', options: { sourceType: 'module', lexical: true } },
    { code: 'var a,b; export {b, a}; export {a};', options: { sourceType: 'module', lexical: true } },
    { code: 'var a,b; export {a}; export {a, b};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {b as a}; export {a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a}; export {b as a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export { x as y };', options: { sourceType: 'module', lexical: true } },
    { code: 'export function f(){}; function f(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'export function f(){}; async function f(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'export function f(){}; class f{};', options: { sourceType: 'module', lexical: true } },
    { code: 'export async function f(){}; class f{};', options: { sourceType: 'module', lexical: true } },
    { code: 'export class f{}; function f(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'export class f{}; async function f(){};', options: { sourceType: 'module', lexical: true } },
    {
      code: 'export foo; export bar; class f{}; async function foo(){};',
      options: { sourceType: 'module', lexical: true },
    },
    { code: 'export async function f(){}; function f(){};', options: { sourceType: 'module', lexical: true } },
    {
      code: 'export default function(){}; export default function(){};',
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: 'export default class x{}; export default async function x(){};',
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: 'export default class x{}; export async function x(){};',
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: 'export class x{}; export default async function x(){};',
      options: { sourceType: 'module', lexical: true },
    },
    { code: 'export class x{}; export async function x(){};', options: { sourceType: 'module', lexical: true } },
    {
      code: 'export default class x{}; export default function(){};',
      options: { sourceType: 'module', lexical: true },
    },
    { code: 'export default class x{}; export default class x{};', options: { sourceType: 'module', lexical: true } },
    { code: 'export default class x{}; export default () => {};', options: { sourceType: 'module', lexical: true } },
    { code: 'export default async x => { let x; };', options: { sourceType: 'module', lexical: true } },
    {
      code: 'export default function() {} export default function() {}',
      options: { sourceType: 'module', lexical: true },
    },
    { code: 'export function a() {} export default function a() {}', options: { sourceType: 'module', lexical: true } },
    { code: 'export function f(){}; export {f};', options: { sourceType: 'module', lexical: true } },
    { code: 'export function f(){}; export {f};', options: { sourceType: 'module', lexical: true } },
    { code: 'export class f {} export {f};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {f} export class f {};', options: { sourceType: 'module', lexical: true } },
    { code: 'export const x = y; export {f};', options: { sourceType: 'module', lexical: true } },
    { code: 'export let x = y; export {f};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {f}; export const x = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export {f}; export async function f() {}', options: { sourceType: 'module', lexical: true } },
    { code: 'export default x; export {y as default};', options: { sourceType: 'module', lexical: true } },
    { code: 'var x, y; export default x; export {y as default};', options: { sourceType: 'module', lexical: true } },
    { code: 'export async function f(){}; const f = foo;', options: { sourceType: 'module', lexical: true } },
    { code: 'const f = foo; export async function f(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'export { Q } from;', options: { sourceType: 'module', lexical: true } },
    { code: 'export var foo; export let foo;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let foo; export let foo;', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a}; export {b as a};', options: { sourceType: 'module', lexical: true } },
    { code: 'var a,b; export {b, a}; export {a};', options: { sourceType: 'module', lexical: true } },
    { code: 'var a,b; export {a, b}; export {a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export default function(a){ let a; }', options: { sourceType: 'module', lexical: true } },
    { code: 'export default function(a){ const a = 0; }', options: { sourceType: 'module', lexical: true } },
    { code: 'export default function(a, a){}', options: { sourceType: 'module', lexical: true } },
    { code: 'export default function([a, a]){}', options: { sourceType: 'module', lexical: true } },
    { code: 'export { for }', options: { sourceType: 'module', lexical: true } },
    { code: 'export {b as a}; export {a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {a}; export {b as a};', options: { sourceType: 'module', lexical: true } },
    { code: 'export let x = y, {...x} = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let x = y, [...x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let [x] = y; export function x(){};', options: { sourceType: 'module', lexical: true } },
    { code: 'export function x(){}; export let [x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export {x}; export let {...x} = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export {x}; export let [...x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export {x}; export let [x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let [x] = y; export {x};', options: { sourceType: 'module', lexical: true } },
    { code: 'export async function f(){}; export {f};', options: { sourceType: 'module', lexical: true } },
    { code: 'export var a = x, a = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export class f {}; export function f() {}', options: { sourceType: 'module', lexical: true } },
    { code: 'export class f {}; export function f() {}', options: { sourceType: 'module', lexical: true } },
    { code: 'export var a = x, a = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export var a = x, a = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let [x, x] = y;', options: { sourceType: 'module', lexical: true } },
    { code: 'var a, b; export {a, a, b}', options: { sourceType: 'module', lexical: true } },
    { code: 'var a, b; export {b, a, a}', options: { sourceType: 'module', lexical: true } },
    { code: 'var a, b; export {a, b, a}', options: { sourceType: 'module', lexical: true } },
    { code: 'var a; export {a, a}', options: { sourceType: 'module', lexical: true } },
    { code: 'class C { method() { export default null; } }', options: { sourceType: 'module', lexical: true } },
    { code: '{ export default null; }', options: { sourceType: 'module', lexical: true } },

    { code: 'export const const1;', options: { sourceType: 'module', lexical: true } },
    { code: 'function foo() { }; export foo;', options: { sourceType: 'module', lexical: true } },
    { code: 'export function* () { }', options: { sourceType: 'module', lexical: true } },
    { code: 'export class { }', options: { sourceType: 'module', lexical: true } },
    { code: 'function foo() { }; export [ foo ];', options: { sourceType: 'module', lexical: true } },
    { code: 'function foo() { export default function() { } }', options: { sourceType: 'module', lexical: true } },
    { code: 'export default 1, 2, 3;', options: { sourceType: 'module', lexical: true } },
    { code: 'export 12;', options: { sourceType: 'module', lexical: true } },
    { code: 'export "string_constant";', options: { sourceType: 'module', lexical: true } },
    { code: 'export ', options: { sourceType: 'module', lexical: true } },
    { code: 'function foo() { }; export { foo as 100 };', options: { sourceType: 'module', lexical: true } },
    { code: 'export {foo}', options: { sourceType: 'module', lexical: true } },
    { code: 'export {Array}', options: { sourceType: 'module', lexical: true } },
    {
      code: outdent`
        export function f() {}
        export function *f() {}
      `,
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: outdent`
        export class f() {}
        export function *f() {}
      `,
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: outdent`
        export function f() {}
        export class f() {}
      `,
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: outdent`
        export async function *f() {}
        export function *f() {}
      `,
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: outdent`
        export default async function *f() {}
        export function *f() {}
      `,
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: outdent`
        export async function *f() {}
        export default function *f() {}
      `,
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: 'var canBeUndeclared; export {mustExist as canBeUndeclared};',
      options: { sourceType: 'module', lexical: true },
    },
    { code: 'export {mustExist as canBeUndeclared};', options: { sourceType: 'module', lexical: true } },
    { code: 'var x, y; export default x; export {y as default};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {foo, bar,};', options: { sourceType: 'module', lexical: true } },
    { code: 'export { for }', options: { sourceType: 'module', lexical: true } },
    { code: 'export { for as foo }', options: { sourceType: 'module', lexical: true } },
    { code: 'export { arguments }', options: { sourceType: 'module', lexical: true } },
    { code: 'export { foo };', options: { sourceType: 'module', lexical: true } },
    { code: 'export { bar, };', options: { sourceType: 'module', lexical: true } },
    { code: 'export { foo as foo2, baz }', options: { sourceType: 'module', lexical: true } },
    { code: 'export { foo as foo3, baz as baz2, }', options: { sourceType: 'module', lexical: true } },
    { code: 'export { foo as foo4, bar as bar2, foobar }', options: { sourceType: 'module', lexical: true } },
    { code: 'export { x as default };', options: { sourceType: 'module', lexical: true } },
    { code: 'export {aa as bb, x};', options: { sourceType: 'module', lexical: true } },
    { code: 'export {foob};', options: { sourceType: 'module', lexical: true } },
    { code: 'export { "a" as b };', options: { sourceType: 'module', lexical: true } },
    { code: String.raw`export { "\uD83C" as b } from "./foo";`, options: { sourceType: 'module', lexical: true } },
    { code: String.raw`export { a as "\uD83C" } from "./foo";`, options: { sourceType: 'module', lexical: true } },
    { code: 'export * as "foo" from "./f"; export { foo };', options: { sourceType: 'module', lexical: true } },
    { code: 'export * as foo from "./f"; export { foo };', options: { sourceType: 'module', lexical: true } },
    {
      code: 'export * as foo from "./f"; export { "foo" } from "./m";',
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: 'export * as foo from "./f"; export { "a" as "foo" } from "./m";',
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: String.raw`export { a }; export { "\u0061" } from "./m";`,
      options: { sourceType: 'module', lexical: true },
    },
    {
      code: 'export async function a() {}\nexport async function a() {}',
      options: { sourceType: 'module', lexical: true },
    },
    { code: 'export function a() {}\nexport async function a() {}', options: { sourceType: 'module', lexical: true } },
    { code: 'export async function a() {}\nexport function a() {}', options: { sourceType: 'module', lexical: true } },
    { code: 'export async function a() {}\nexport const a = 1;', options: { sourceType: 'module', lexical: true } },
    { code: 'export let a = 1;\nexport async function a() {}', options: { sourceType: 'module', lexical: true } },
    { code: 'const a = 1; export {a as "a", a as "a"}', options: { sourceType: 'module', lexical: true } },
    { code: 'const a = 1; export {a as "", a as ""}', options: { sourceType: 'module', lexical: true } },
  ]);

  for (const arg of [
    'export let x = 0;',
    'export var y = 0;',
    'export const z = 0;',
    'export default async function() {}',
    'export default async function f() {}',
    'export default x;',
    'export const foo = async function() { }',
    'export function async() { }',
    'export function func() { };',
    'export class C { };',
    'export class A extends B {};',
    'export default class A extends B {};',
    'export { };',
    'export {get}; function get() {};',
    'function f() {}; f(); export { f };',
    'export let x = 0;',
    "export { a as b } from 'm.js';",
    "export * from 'p.js';",
    'export var foo;',
    'export {b as a}; export {a};',
    'export default class cName { valueOf() { return 45; } }',
    'export function goo() {};',
    'export let hoo;',
    'export const joo = 42;',
    'export default (function koo() {});',
    'export var y = 0;',
    'export const z = 0;',
    'export function func() { };',
    'export class C { };',
    'export { };',
    'export function foo () { return "foo"; }',
    'export const boo = 5;',
    'import {ns} from "three";',
    'export let x = 0;',
    'export var y = 0;',
    'export const z = 0;',
    'export default x;',
    'export function func() { };',
    'export class C { };',
    'export var j = 42;',
    'export let k = 42;',
    'export function l() {}',
    'export default function () {}',
    'export default class extends C {}',
    'export default 42',
    'var x; export default x = 7',
    "export { Q } from 'somemodule.js';",
    "export * from 'somemodule.js';",
    'var foo; export { foo as for };',
    "export { arguments } from 'm.js';",
    "export { for } from 'm.js';",
    "export { yield } from 'm.js'",
    "export { static } from 'm.js'",
    "export { let } from 'm.js'",
    'export default [];',
    'export default 42;',
    'export default { foo: 1 };',
    'export * from "foo";',
    'export {default} from "foo";',
    'export {foo as bar} from "foo";',
    'export function *foo () {}',
    'export default function(){}; export default function(){};',
    'export function a() {} export default function a() {}',
    'export let x = y, [x] = y;',
    'export function x(){}; export let [z] = y;',
    'export class f{}; async function f(){};',
    'export var a = x, b = y;',
    'export {a as b};',
    'export var foo = 1;',
    'var a; export { a as b, a as c };',
    'var a; export { a as await };',
    'var a; export { a as enum };',
    "export {thing}; import thing from 'a.js';",
    "export {thing}; import {thing} from 'a.js';",
    "export {thing}; import * as thing from 'a.js';",
    'export { x as y };',
    "export { a as b } from 'm.js';",
    "export * from 'p.js';",
    'export var foo;',
    'export function goo() {};',
    'export let hoo;',
    'export default class { constructor() {	foo() } a() {	bar()	}	}',
    'export const joo = 42;',
    'export default (function koo() {});',
    'export { };',
    'export {get}; function get() {};',
    'function f() {}; f(); export { f };',
    'var a, b, c; export { a, b as baz, c };',
    'var d, e; export { d as dreary, e, };',
    'export default function f() {}',
    'export default function() {}',
    'export default function *a() {}',
    'export var foo = function () {};',
    'var a, b, c; export { a, b as baz, c };',
    'var d, e; export { d as dreary, e, };',
    'export default function f() {}',
    'export default function() {}',
    'export default function*() {}',
    'export default class C {}',
    'export default class {}',
    'export default class extends C {}',
    'export default 42',
    outdent`
      export var x;
      x = 'Pass';
    `,
    'var x; export default x = 7',
    "export { Q } from 'somemodule.js';",
    "export * from 'somemodule.js';",
    'var foo; export { foo as for };',
    "export { arguments } from 'm.js';",
    "export { for } from 'm.js';",
    "export { yield } from 'm.js'",
    "export { static } from 'm.js'",
    "export { let } from 'm.js'",
    'var a; export { a as b, a as c };',
    'var a; export { a as await };',
    'var a; export { a as enum };',
    'var a, b, c; export { a, b as baz, c };',
    'var d, e; export { d as dreary, e, };',
    'export default function f() {}',
    'export default function() {}',
    'export default function *a() {}',
    'export let x = 0;',
    'export var y = 0;',
    'export const z = 0;',
    'export function func() { };',
    'export class C { };',
    'export { };',
    'function f() {}; f(); export { f };',
    'var a, b, c; export { a, b as baz, c };',
    'var d, e; export { d as dreary, e, };',
    'export default function f() {}',
    'export default function() {}',
    'export default function*() {}',
    'export default class C {}',
    'export default class {}',
    'export default class extends C {}',
    'export default 42',
    'var x; export default x = 7',
    "export * from 'somemodule.js';",
    'var foo; export { foo as for };',
    "export { arguments } from 'm.js';",
    "export { yield } from 'm.js'",
    'export default function f(){}; export {f};',
    'export default async function f(){}; export {f};',
    "export { static } from 'm.js'",
    "export { let } from 'm.js'",
    'var a; export { a as b, a as c };',
    'var a; export { a as await };',
    'var a; export { a as enum };',
    'export var document',
    'export var document = {}',
    'export var document',
    'export class Class {}',
    'export default 42',
    'export default class A {}',
    'export default (class{});',
    'export default /foo/',
    'export var namedOther = null;',
    'export var starAsVarDecl;',
    'export let starAsLetDecl;',
    'export const starAsConstDecl = null;',
    'export function starAsFuncDecl() {}',
    'export function* starAsGenDecl() {}',
    'export class starAsClassDecl {}',
    'export default class Foo {}++x',
    "export { x as y } from './y.js';\nexport { x as z } from './z.js';",
    "export { default as y } from './y.js';\nexport default 42;",
    'export default function(x) {};',
    'export default function () { };',
    'export default function _fn2 () { }',
    'class c { }; export default c',
    "var _ = { method: function() { return 'method_result'; }, method2: function() { return 'method2_result'; } }; export default _",
    'var a; export default a = 10;',
    'export default () => 3',
    'function _default() { }; export default _default',
    'export let a, [...x] = y',
    'export let [...x] = y',
    // Named generator function statement
    'function* g() { }; export default g',
    'class c { }; export default c',
    "var _ = { method: function() { return 'method_result'; }, method2: function() { return 'method2_result'; } }; export default _",
    'export default async \nfunction f(){}',
    'function foo() { }',
    "export const const2 = 'str';",
    'export const const3 = 3, const4 = 4;',
    'export const const5 = { }',
    'export const const6 = [ ]',
    'export {};',
    'class bar { }',
    'function* baz() { }',
    'function foobar() { }',
    "export var var1 = 'string';",
    "export default 'default';",
    'export var var2;',
    'export var var3 = 5, var4',
    'export var var5, var6, var7',
    'export default 1;',
    'var a; export default a = 10;',
    'function _default() { }; export default _default',
    'function* g() { }; export default g',
    'export function *g() { } if (true) { }',
    'export class c1 { } if (true) { }',
    'export default function* _gn2 () { } if (true) { }',
    'export default class _cl2 { } if (true) { }',
    'export default function _fn2 () { } if (true) { }',
    'class c { }; export default c',
    'export function a() {} export default function a() {}',
    'export function f(){}; export {f};',
    'export function f(){}; export {f};',
    'export class f {} export {f};',
    'export {x}; export class y {};',
    'export const x = y; export {f};',
    'export let x = y; export {f};',
    'export {f}; export const x = y;',
    'export {f}; export async function f() {}',
    'export default x; export {y as default};',
    'var x, y; export default x; export {y as default};',
    'export async function f(){}; const z = foo;',
    'const f = foo; export async function z(){};',
    'export var foo; export let foo;',
    'export let foo; export let foo;',
    'var a,b; export {c, d}; export {e};',
    'export { for }',
    'export {b as a}; export {a};',
    'export {a}; export {b as c};',
    'export {x}; export let {...x} = y;',
    'export let x = y, {...z} = y;',
    'export let x = y, [...z] = y;',
    'export {x}; export let [...z] = y;',
    'export let [x] = y; export function z(){};',
    'export function x(){}; export let [z] = y;',
    'export async function f(){}; export {z};',
    'export class f {}; export function y() {}',
    'export class f {}; export function y() {}',
    'export default function () {}',
    'export default class {}',
    'export var a = x, b = y;',
    'export let [x, z] = y;',
    "var _ = { method: function() { return 'method_result'; }, method2: function() { return 'method2_result'; } }; export default _",
    outdent`
      export{};
      export {};
      export {}
      export { };
      export
      {
      };
      export//-
      {//-
      //-
      };
      export/**/{/**/};
    `,
    outdent`
      import {} from 'a';
      import 'b';
      import * as ns1 from 'c';
      import dflt1 from 'd';
      export {} from 'e';
      import dflt2, {} from 'f';
      export * from 'g';
      import dflt3, * as ns2 from 'h';
    `,
    'var a; export { a as b };',
    'export default 1',
    'export default () => {}',
    'export * as "foo" from "./foo";',
    'export { "a" as "b" } from "./foo";',
    'export { a as "b" } from "./foo";',
    'let a = 1; export { a as "b" };',
    'export { "a" as b } from "./foo";',
    String.raw`export { "\uD83C\uDF19" as b } from "./foo";`,
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { sourceType: 'module' });
      });
    });

    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { sourceType: 'module' });
      });
    });

    it(`${arg}`, () => {
      parseSource(`${arg}`, { sourceType: 'module', webcompat: true });
    });
  }
  for (const arg of [
    "export var var1 = 'string';",
    "export default 'default';",
    'export var var2;',
    'export var var3 = 5, var4',
    'export var var5, var6, var7',
    'export default 1;',
    'var a; export default a = 10;',
    "export { let } from 'm.js'",
    'export default [];',
    'export default 42;',
    'export default { foo: 1 };',
    'export * from "foo";',
    'export {default} from "foo";',
    'export {foo as bar} from "foo";',
    'export function *foo () {}',
    "export {thing}; import thing from 'a.js';",
    "export {thing}; import {thing} from 'a.js';",
    "export {thing}; import * as thing from 'a.js';",
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, { sourceType: 'module', lexical: true });
      });
    });
  }

  pass('Module - Export (pass)', [
    { code: 'export default async', options: { sourceType: 'module', ranges: true } },
    { code: 'export default class f{}; export {f};', options: { sourceType: 'module', lexical: true } },
    { code: 'export default function f(){}; export {f};', options: { sourceType: 'module', lexical: true } },
    { code: 'export default async \nfunction f(){}', options: { sourceType: 'module' } },
    { code: "export * as class from 'source';", options: { sourceType: 'module' } },
    { code: 'export * as ns from "source";', options: { sourceType: 'module' } },
    { code: 'export * from "a"', options: { sourceType: 'module', ranges: true } },
    { code: 'export * as foo from "./foo";', options: { sourceType: 'module' } },
    { code: 'export {}', options: { sourceType: 'module', ranges: true } },
    { code: 'export {x}; var x;', options: { sourceType: 'module', ranges: true } },
    { code: 'var x; export {x as a}', options: { sourceType: 'module', ranges: true } },
    { code: 'var x; export {x,}', options: { sourceType: 'module', ranges: true } },
    { code: 'export {x} from "foo"', options: { sourceType: 'module', ranges: true } },
    { code: 'export {x as a} from "foo"', options: { sourceType: 'module', ranges: true } },
    { code: 'export {x,} from "foo"', options: { sourceType: 'module' } },
    { code: 'var x; export {x as a,}', options: { sourceType: 'module', ranges: true } },
    { code: 'var x,y; export {x as a, y as b}', options: { sourceType: 'module', ranges: true } },
    { code: 'export var x = 10, y = 20', options: { sourceType: 'module', ranges: true } },
    { code: 'export let x', options: { sourceType: 'module', ranges: true } },
    { code: 'export let x, y', options: { sourceType: 'module', ranges: true } },
    { code: 'export const x = 10, y = 20', options: { sourceType: 'module', ranges: true } },
    { code: 'export function f(){}', options: { sourceType: 'module', ranges: true } },
    { code: 'export async function f(){}', options: { sourceType: 'module', ranges: true } },
    { code: 'export function* f(){}', options: { sourceType: 'module' } },
    { code: 'export default function f(){}', options: { sourceType: 'module' } },
    { code: 'export default async function f(){}', options: { sourceType: 'module', ranges: true } },

    { code: 'export default function* f(){}', options: { sourceType: 'module', ranges: true } },
    { code: 'export class x {}', options: { sourceType: 'module', ranges: true } },

    { code: 'export default class x {}', options: { webcompat: true, sourceType: 'module', ranges: true } },
    { code: 'export let [...x] = y', options: { sourceType: 'module', ranges: true } },
    { code: 'export let {...x} = y', options: { sourceType: 'module' } },
    { code: 'export default [x] = y', options: { sourceType: 'module' } },
    { code: 'var a,b; export {a}; export {b};', options: { sourceType: 'module', ranges: true } },
    { code: 'export default async () => y', options: { sourceType: 'module', ranges: true } },
    { code: 'export default async (x) => y', options: { sourceType: 'module', ranges: true } },
    { code: 'export default async function(){}', options: { sourceType: 'module', ranges: true } },
    { code: 'export default function* (){}', options: { sourceType: 'module' } },
    { code: 'export default class x{}', options: { sourceType: 'module', ranges: true } },
    { code: 'export {} from "x"', options: { sourceType: 'module', ranges: true } },
    { code: 'export default async x => y', options: { sourceType: 'module', ranges: true } },
    { code: 'export default (a,b) => {}', options: { sourceType: 'module', ranges: true } },
    { code: 'export default () => {}', options: { sourceType: 'module' } },
    { code: 'export {};', options: { sourceType: 'module' } },
    { code: 'export var foo = 1;', options: { sourceType: 'module' } },
    { code: 'export function foo () {}', options: { sourceType: 'module' } },
    { code: String.raw`export function \u{5A}() {}`, options: { sourceType: 'module' } },

    { code: 'export {foo} from "foo";', options: { sourceType: 'module' } },
    { code: 'export default function () {}', options: { sourceType: 'module' } },
    { code: 'export default (1 + 2);', options: { sourceType: 'module', ranges: true } },

    { code: 'export class a {}', options: { sourceType: 'module' } },
    { code: 'export default class A {}', options: { sourceType: 'module' } },
    { code: 'export default [];', options: { sourceType: 'module', ranges: true } },

    { code: 'export default function foo() {}', options: { sourceType: 'module' } },
    { code: 'export default function *foo() {}', options: { sourceType: 'module' } },
    { code: 'var foo; export {foo as new}', options: { sourceType: 'module', ranges: true } },
    { code: 'export {a as b}; var a;', options: { sourceType: 'module', ranges: true } },
    { code: 'var a; export {a as b};', options: { sourceType: 'module' } },
    {
      code: outdent`
        [function* (...{}) {  switch (yield) {}  }]
        a = (u) => {}
      `,
      options: { sourceType: 'module', ranges: true },
    },
    { code: 'export {foo}; function foo() {};', options: { sourceType: 'module' } },
    { code: 'export var x = 1;', options: { sourceType: 'module' } },
    { code: 'export default 3;', options: { sourceType: 'module' } },
    { code: 'var x; export { x as a }; export { x as b };', options: { sourceType: 'module', ranges: true } },
    { code: 'export default [x] = y', options: { sourceType: 'module', ranges: true } },
    { code: 'let foo, bar; export {foo, bar}', options: { sourceType: 'module' } },
    { code: 'export default function *f(){} foo', options: { sourceType: 'module' } },
    { code: 'export {}', options: { sourceType: 'module' } },
    { code: 'export {x}; var x;', options: { sourceType: 'module' } },
    { code: 'var x; export {x as a}', options: { sourceType: 'module' } },
    { code: 'var x; export {x,}', options: { sourceType: 'module' } },
    { code: 'export {x} from "foo"', options: { sourceType: 'module' } },
    { code: 'export {x as a} from "foo"', options: { sourceType: 'module' } },
    { code: 'export {x,} from "foo"', options: { sourceType: 'module' } },
    { code: 'var x; export {x as a,}', options: { sourceType: 'module' } },
    { code: 'var x,y; export {x, y}', options: { sourceType: 'module' } },
    { code: 'var x,y; export {x as a, y as b}', options: { sourceType: 'module', ranges: true } },
    { code: 'var x,y; export {x, y,}', options: { sourceType: 'module' } },
    { code: 'var x,y; export {x as a, y as b,}', options: { sourceType: 'module' } },
    { code: 'export var x', options: { sourceType: 'module' } },
    { code: 'export var x, y', options: { sourceType: 'module' } },
    { code: 'export var x = 10, y = 20', options: { sourceType: 'module' } },
    { code: 'export let x', options: { sourceType: 'module' } },
    { code: 'export let x, y', options: { sourceType: 'module' } },
    { code: 'export let a = 1;', options: { sourceType: 'module' } },
    { code: 'export * as "foo" from "./foo";', options: { sourceType: 'module' } },
    { code: String.raw`export { "\uD83C\uDF19" as "a"} from "./foo";`, options: { sourceType: 'module', loc: true } },
  ]);
});
